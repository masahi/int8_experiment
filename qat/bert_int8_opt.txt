fn (%input_ids: Tensor[(1, 128), int64], %attention_mask: Tensor[(1, 128), int64], %token_type_ids: Tensor[(1, 128), int64], param_virtual_devices=[VirtualDevice(device_type=1, virtual_device_id=0, target=Target(kind='llvm', keys={'cpu'}, attrs={'link-params': (bool)0, 'mcpu': "cascadelake"}, host=Target(kind='llvm', keys={'cpu'}, attrs={'link-params': (bool)0, 'mcpu': "cascadelake"}))), VirtualDevice(device_type=1, virtual_device_id=0, target=Target(kind='llvm', keys={'cpu'}, attrs={'link-params': (bool)0, 'mcpu': "cascadelake"}, host=Target(kind='llvm', keys={'cpu'}, attrs={'link-params': (bool)0, 'mcpu': "cascadelake"}))), VirtualDevice(device_type=1, virtual_device_id=0, target=Target(kind='llvm', keys={'cpu'}, attrs={'link-params': (bool)0, 'mcpu': "cascadelake"}, host=Target(kind='llvm', keys={'cpu'}, attrs={'link-params': (bool)0, 'mcpu': "cascadelake"})))], hash="0cee980c94d9c680", result_virtual_device=VirtualDevice(device_type=1, virtual_device_id=0, target=Target(kind='llvm', keys={'cpu'}, attrs={'link-params': (bool)0, 'mcpu': "cascadelake"}, host=Target(kind='llvm', keys={'cpu'}, attrs={'link-params': (bool)0, 'mcpu': "cascadelake"})))) -> (Tensor[(1, 128), float32], Tensor[(1, 128), float32]) {
  %2880 = fn (%p0534: Tensor[(1, 128), int64], %p1364: Tensor[(30522, 1024), float32], %p2241: Tensor[(1, 128, 1024), float32], %p349: Tensor[(1, 128), int64], %p4: Tensor[(2, 1024), float32], Primitive=1, hash="83c66aa52442aa68") -> Tensor[(1, 128, 1024), float32] {
    %2871 = less(%p0534, 0 /* ty=int64 */) /* ty=Tensor[(1, 128), bool] */;
    %2872 = add(%p0534, 30522 /* ty=int64 */) /* ty=Tensor[(1, 128), int64] */;
    %2873 = where(%2871, %2872, %p0534) /* ty=Tensor[(1, 128), int64] */;
    %2874 = take(%p1364, %2873, axis=0) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2875 = less(%p349, 0 /* ty=int64 */) /* ty=Tensor[(1, 128), bool] */;
    %2876 = add(%p349, 2 /* ty=int64 */) /* ty=Tensor[(1, 128), int64] */;
    %2877 = where(%2875, %2876, %p349) /* ty=Tensor[(1, 128), int64] */;
    %2878 = add(%2874, %p2241) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2879 = take(%p4, %2877, axis=0) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2878, %2879) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %2881 = %2880(%input_ids, meta[relay.Constant][0] /* ty=Tensor[(30522, 1024), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1, 128, 1024), float32] */, %token_type_ids, meta[relay.Constant][2] /* ty=Tensor[(2, 1024), float32] */) /* ty=Tensor[(1, 128, 1024), float32] */;
  %2882 = fn (%p0535: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0535, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %2883 = %2882(%2881) /* ty=Tensor[(1, 128, 1), float32] */;
  %2884 = fn (%p0533: Tensor[(1, 128, 1024), float32], %p1363: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0533, %p1363) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %2885 = %2884(%2881, %2883) /* ty=Tensor[(1, 128, 1024), float32] */;
  %2886 = fn (%p0532: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2870 = power(%p0532, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2870, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %2887 = %2886(%2885) /* ty=Tensor[(1, 128, 1), float32] */;
  %2888 = fn (%p0531: Tensor[(1, 128, 1), float32], %p1362: Tensor[(1, 128, 1024), float32], %p2240: Tensor[(1024), float32], %p348: Tensor[(1024), float32], Primitive=1, hash="39117b306efffb81") -> Tensor[(1, 128, 1024), int8] {
    %2862 = add(%p0531, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2863 = sqrt(%2862) /* ty=Tensor[(1, 128, 1), float32] */;
    %2864 = divide(%p1362, %2863) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2865 = multiply(%2864, %p2240) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2866 = add(%2865, %p348) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2867 = divide(%2866, 0.0196148f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2868 = clip(%2867, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2869 = round(%2868) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2869, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %2889 = %2888(%2887, %2885, meta[relay.Constant][3] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][4] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %2890 = fn (%p0530: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2859 = reshape(%p0530, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2860 = cast(%2859, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2861 = add(%2860, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2861, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %2891 = %2890(%2889) /* ty=Tensor[(128, 1024), uint8] */;
  %2892 = fn (%p0529: Tensor[(128, 1024), uint8], %p1361: Tensor[(64, 256, 16, 4), int8], %p2239: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2858 = nn.contrib_dense_pack(%p0529, %p1361, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2858, %p2239) /* ty=Tensor[(128, 1024), int32] */
  };
  %2893 = %2892(%2891, meta[relay.Constant][5] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][6] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %2894 = fn (%p0528: Tensor[(128, 1024), int32], %p1360: Tensor[(1024), int32], Primitive=1, hash="b84868b6e6bb1a6d") -> Tensor[(16, 128, 64), uint8] {
    %2842 = reshape(%p0528, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2843 = add(%2842, %p1360) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2844 = clip(%2843, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2845 = reshape(%2844, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2846 = transpose(%2845, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2847 = cast(%2846, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2848 = multiply(0.00198058f /* ty=float32 */, %2847) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2849 = add(%2848, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2850 = floor(%2849) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2851 = cast(%2850, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2852 = clip(%2851, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2853 = cast(%2852, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2854 = broadcast_to(%2853, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2855 = reshape(%2854, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %2856 = cast(%2855, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %2857 = add(%2856, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%2857, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %2910 = fn (%p0537: Tensor[(128, 1024), uint8], %p1366: Tensor[(64, 256, 16, 4), int8], %p2242: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2909 = nn.contrib_dense_pack(%p0537, %p1366, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2909, %p2242) /* ty=Tensor[(128, 1024), int32] */
  };
  %2911 = %2910(%2891, meta[relay.Constant][8] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][9] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %2912 = fn (%p0536: Tensor[(128, 1024), int32], %p1365: Tensor[(1024), int32], Primitive=1, hash="d88b9bf14c47d410") -> Tensor[(16, 128, 64), int8] {
    %2895 = reshape(%p0536, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2896 = add(%2895, %p1365) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2897 = clip(%2896, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2898 = reshape(%2897, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2899 = transpose(%2898, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %2900 = cast(%2899, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %2901 = multiply(0.00198058f /* ty=float32 */, %2900) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %2902 = add(%2901, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %2903 = floor(%2902) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %2904 = cast(%2903, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %2905 = clip(%2904, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %2906 = cast(%2905, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %2907 = broadcast_to(%2906, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %2908 = reshape(%2907, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%2908, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %2914 = %2912(%2911, meta[relay.Constant][10] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %2915 = fn (%p0538: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %2913 = cast(%p0538, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%2913, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %2916 = %2894(%2893, meta[relay.Constant][7] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %2917 = %2915(%2914) /* ty=Tensor[(16, 128), int32] */;
  %2918 = fn (%p0527: Tensor[(16, 128, 64), uint8], %p1359: Tensor[(16, 128, 64), int8], %p2238: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %2839 = multiply(128 /* ty=int32 */, %p2238) /* ty=Tensor[(16, 128), int32] */;
    %2840 = nn.batch_matmul(%p0527, %p1359, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %2841 = expand_dims(%2839, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%2840, %2841) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %2923 = fn (%p0539: Tensor[(1, 128), int64], Primitive=1, hash="b49ed9818f20d4ec") -> Tensor[(1, 1, 1, 128), float32] {
    %2919 = expand_dims(%p0539, axis=1) /* ty=Tensor[(1, 1, 128), int64] */;
    %2920 = expand_dims(%2919, axis=2) /* ty=Tensor[(1, 1, 1, 128), int64] */;
    %2921 = cast(%2920, dtype="float32") /* ty=Tensor[(1, 1, 1, 128), float32] */;
    %2922 = subtract(1f /* ty=float32 */, %2921) /* ty=Tensor[(1, 1, 1, 128), float32] */;
    multiply(%2922, -10000f /* ty=float32 */) /* ty=Tensor[(1, 1, 1, 128), float32] */
  };
  %2924 = %2918(%2916, %2914, %2917) /* ty=Tensor[(16, 128, 128), int32] */;
  %2925 = %2923(%attention_mask) /* ty=Tensor[(1, 1, 1, 128), float32] */;
  %2926 = fn (%p0526: Tensor[(16, 128, 128), int32], %p1358: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="3c3463244de8e68d") -> Tensor[(1, 16, 128, 128), float32] {
    %2835 = reshape(%p0526, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %2836 = cast(%2835, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2837 = multiply(%2836, 0.00308908f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2838 = divide(%2837, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%2838, %p1358) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %2927 = %2926(%2924, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %2928 = fn (%p0525: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="6fa4d81622c6fdee") -> Tensor[(1, 16, 128, 128), int8] {
    %2831 = nn.softmax(%p0525, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2832 = divide(%2831, 0.00847973f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2833 = clip(%2832, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2834 = round(%2833) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%2834, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %2929 = %2928(%2927) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %2930 = fn (%p0524: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %2827 = broadcast_to(%p0524, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %2828 = reshape(%2827, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %2829 = cast(%2828, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %2830 = add(%2829, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%2830, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %2946 = fn (%p0541: Tensor[(128, 1024), uint8], %p1368: Tensor[(64, 256, 16, 4), int8], %p2243: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2945 = nn.contrib_dense_pack(%p0541, %p1368, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2945, %p2243) /* ty=Tensor[(128, 1024), int32] */
  };
  %2947 = %2946(%2891, meta[relay.Constant][11] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][12] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %2948 = fn (%p0540: Tensor[(128, 1024), int32], %p1367: Tensor[(1024), int32], Primitive=1, hash="aa7c5418431bb6fd") -> Tensor[(16, 64, 128), int8] {
    %2931 = reshape(%p0540, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2932 = add(%2931, %p1367) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2933 = clip(%2932, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2934 = reshape(%2933, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2935 = transpose(%2934, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2936 = cast(%2935, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2937 = multiply(0.00198058f /* ty=float32 */, %2936) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2938 = add(%2937, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2939 = floor(%2938) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2940 = cast(%2939, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2941 = clip(%2940, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2942 = cast(%2941, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2943 = broadcast_to(%2942, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2944 = reshape(%2943, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%2944, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %2950 = %2948(%2947, meta[relay.Constant][13] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %2951 = fn (%p0542: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %2949 = cast(%p0542, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%2949, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %2952 = %2930(%2929) /* ty=Tensor[(16, 128, 128), uint8] */;
  %2953 = %2951(%2950) /* ty=Tensor[(16, 64), int32] */;
  %2954 = fn (%p0523: Tensor[(16, 128, 128), uint8], %p1357: Tensor[(16, 64, 128), int8], %p2237: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %2824 = multiply(128 /* ty=int32 */, %p2237) /* ty=Tensor[(16, 64), int32] */;
    %2825 = nn.batch_matmul(%p0523, %p1357, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %2826 = expand_dims(%2824, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%2825, %2826) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %2955 = %2954(%2952, %2950, %2953) /* ty=Tensor[(16, 128, 64), int32] */;
  %2956 = fn (%p0522: Tensor[(16, 128, 64), int32], Primitive=1, hash="478de1c4f545314e") -> Tensor[(128, 1024), uint8] {
    %2811 = reshape(%p0522, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2812 = transpose(%2811, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2813 = reshape(%2812, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2814 = cast(%2813, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2815 = multiply(0.0386445f /* ty=float32 */, %2814) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2816 = add(%2815, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2817 = floor(%2816) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2818 = cast(%2817, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2819 = clip(%2818, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2820 = cast(%2819, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2821 = reshape(%2820, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2822 = cast(%2821, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2823 = add(%2822, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2823, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %2957 = %2956(%2955) /* ty=Tensor[(128, 1024), uint8] */;
  %2958 = fn (%p0521: Tensor[(128, 1024), uint8], %p1356: Tensor[(64, 256, 16, 4), int8], %p2236: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2810 = nn.contrib_dense_pack(%p0521, %p1356, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2810, %p2236) /* ty=Tensor[(128, 1024), int32] */
  };
  %2959 = %2958(%2957, meta[relay.Constant][14] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][15] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %2960 = fn (%p0520: Tensor[(128, 1024), int32], %p1355: Tensor[(1024), int32], %p2235: Tensor[(1, 128, 1024), int8], Primitive=1, hash="05caf6ce48376fa4") -> Tensor[(1, 128, 1024), float32] {
    %2796 = reshape(%p0520, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2797 = add(%2796, %p1355) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2798 = clip(%2797, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2799 = cast(%2798, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2800 = multiply(0.00479155f /* ty=float32 */, %2799) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2801 = add(%2800, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2802 = floor(%2801) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2803 = cast(%2802, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2804 = clip(%2803, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2805 = cast(%2804, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2806 = cast(%2805, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2807 = cast(%p2235, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2808 = multiply(%2806, 0.0200163f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2809 = multiply(%2807, 0.0196148f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2808, %2809) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %2961 = %2960(%2959, meta[relay.Constant][16] /* ty=Tensor[(1024), int32] */, %2889) /* ty=Tensor[(1, 128, 1024), float32] */;
  %2962 = fn (%p0543: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0543, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %2963 = %2962(%2961) /* ty=Tensor[(1, 128, 1), float32] */;
  %2964 = fn (%p0519: Tensor[(1, 128, 1024), float32], %p1354: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0519, %p1354) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %2965 = %2964(%2961, %2963) /* ty=Tensor[(1, 128, 1024), float32] */;
  %2966 = fn (%p0518: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2795 = power(%p0518, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2795, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %2967 = %2966(%2965) /* ty=Tensor[(1, 128, 1), float32] */;
  %2968 = fn (%p0517: Tensor[(1, 128, 1), float32], %p1353: Tensor[(1, 128, 1024), float32], %p2234: Tensor[(1024), float32], %p347: Tensor[(1024), float32], Primitive=1, hash="c5e7e67a0628fa51") -> Tensor[(1, 128, 1024), int8] {
    %2787 = add(%p0517, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2788 = sqrt(%2787) /* ty=Tensor[(1, 128, 1), float32] */;
    %2789 = divide(%p1353, %2788) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2790 = multiply(%2789, %p2234) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2791 = add(%2790, %p347) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2792 = divide(%2791, 0.251408f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2793 = clip(%2792, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2794 = round(%2793) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2794, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %2969 = %2968(%2967, %2965, meta[relay.Constant][17] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][18] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %2970 = fn (%p0516: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2784 = reshape(%p0516, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2785 = cast(%2784, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2786 = add(%2785, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2786, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %2971 = %2970(%2969) /* ty=Tensor[(128, 1024), uint8] */;
  %2972 = fn (%p0515: Tensor[(128, 1024), uint8], %p1352: Tensor[(256, 256, 16, 4), int8], %p2233: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %2783 = nn.contrib_dense_pack(%p0515, %p1352, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%2783, %p2233) /* ty=Tensor[(128, 4096), int32] */
  };
  %2973 = %2972(%2971, meta[relay.Constant][19] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][20] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %2974 = fn (%p0514: Tensor[(128, 4096), int32], %p1351: Tensor[(4096), float32], Primitive=1, hash="3d2e8b51e8ce6ee0") -> Tensor[(128, 4096), uint8] {
    %2767 = reshape(%p0514, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %2768 = cast(%2767, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %2769 = multiply(%2768, 0.000813513f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2770 = add(%2769, %p1351) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2771 = divide(%2770, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2772 = erf(%2771) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2773 = multiply(%2770, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2774 = add(%2772, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2775 = multiply(%2773, %2774) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2776 = divide(%2775, 0.0391822f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2777 = clip(%2776, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2778 = round(%2777) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2779 = cast(%2778, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %2780 = reshape(%2779, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %2781 = cast(%2780, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %2782 = add(%2781, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%2782, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %2975 = %2974(%2973, meta[relay.Constant][21] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %2976 = fn (%p0513: Tensor[(128, 4096), uint8], %p1350: Tensor[(64, 1024, 16, 4), int8], %p2232: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2766 = nn.contrib_dense_pack(%p0513, %p1350, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2766, %p2232) /* ty=Tensor[(128, 1024), int32] */
  };
  %2977 = %2976(%2975, meta[relay.Constant][22] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][23] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %2978 = fn (%p0512: Tensor[(128, 1024), int32], %p1349: Tensor[(1024), int32], %p2231: Tensor[(1, 128, 1024), int8], Primitive=1, hash="85dcb5dd66dc2efb") -> Tensor[(1, 128, 1024), float32] {
    %2752 = reshape(%p0512, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2753 = add(%2752, %p1349) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2754 = clip(%2753, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2755 = cast(%2754, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2756 = multiply(0.00566541f /* ty=float32 */, %2755) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2757 = add(%2756, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2758 = floor(%2757) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2759 = cast(%2758, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2760 = clip(%2759, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2761 = cast(%2760, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2762 = cast(%2761, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2763 = cast(%p2231, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2764 = multiply(%2762, 0.153159f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2765 = multiply(%2763, 0.251408f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2764, %2765) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %2979 = %2978(%2977, meta[relay.Constant][24] /* ty=Tensor[(1024), int32] */, %2969) /* ty=Tensor[(1, 128, 1024), float32] */;
  %2980 = fn (%p0544: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0544, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %2981 = %2980(%2979) /* ty=Tensor[(1, 128, 1), float32] */;
  %2982 = fn (%p0511: Tensor[(1, 128, 1024), float32], %p1348: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0511, %p1348) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %2983 = %2982(%2979, %2981) /* ty=Tensor[(1, 128, 1024), float32] */;
  %2984 = fn (%p0510: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2751 = power(%p0510, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2751, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %2985 = %2984(%2983) /* ty=Tensor[(1, 128, 1), float32] */;
  %2986 = fn (%p0509: Tensor[(1, 128, 1), float32], %p1347: Tensor[(1, 128, 1024), float32], %p2230: Tensor[(1024), float32], %p346: Tensor[(1024), float32], Primitive=1, hash="854bbfaaf2dc25f8") -> Tensor[(1, 128, 1024), int8] {
    %2743 = add(%p0509, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2744 = sqrt(%2743) /* ty=Tensor[(1, 128, 1), float32] */;
    %2745 = divide(%p1347, %2744) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2746 = multiply(%2745, %p2230) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2747 = add(%2746, %p346) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2748 = divide(%2747, 0.0728465f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2749 = clip(%2748, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2750 = round(%2749) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2750, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %2987 = %2986(%2985, %2983, meta[relay.Constant][25] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][26] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %2988 = fn (%p0508: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2740 = reshape(%p0508, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2741 = cast(%2740, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2742 = add(%2741, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2742, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %2989 = %2988(%2987) /* ty=Tensor[(128, 1024), uint8] */;
  %2990 = fn (%p0507: Tensor[(128, 1024), uint8], %p1346: Tensor[(64, 256, 16, 4), int8], %p2229: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2739 = nn.contrib_dense_pack(%p0507, %p1346, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2739, %p2229) /* ty=Tensor[(128, 1024), int32] */
  };
  %2991 = %2990(%2989, meta[relay.Constant][27] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][28] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %2992 = fn (%p0506: Tensor[(128, 1024), int32], %p1345: Tensor[(1024), int32], Primitive=1, hash="4f1ec6073a2ad835") -> Tensor[(16, 128, 64), uint8] {
    %2723 = reshape(%p0506, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2724 = add(%2723, %p1345) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2725 = clip(%2724, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2726 = reshape(%2725, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2727 = transpose(%2726, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2728 = cast(%2727, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2729 = multiply(0.00468979f /* ty=float32 */, %2728) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2730 = add(%2729, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2731 = floor(%2730) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2732 = cast(%2731, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2733 = clip(%2732, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2734 = cast(%2733, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2735 = broadcast_to(%2734, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2736 = reshape(%2735, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %2737 = cast(%2736, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %2738 = add(%2737, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%2738, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %3008 = fn (%p0546: Tensor[(128, 1024), uint8], %p1370: Tensor[(64, 256, 16, 4), int8], %p2244: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3007 = nn.contrib_dense_pack(%p0546, %p1370, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3007, %p2244) /* ty=Tensor[(128, 1024), int32] */
  };
  %3009 = %3008(%2989, meta[relay.Constant][30] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][31] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3010 = fn (%p0545: Tensor[(128, 1024), int32], %p1369: Tensor[(1024), int32], Primitive=1, hash="5deb2d699f36748f") -> Tensor[(16, 128, 64), int8] {
    %2993 = reshape(%p0545, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2994 = add(%2993, %p1369) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2995 = clip(%2994, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2996 = reshape(%2995, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2997 = transpose(%2996, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %2998 = cast(%2997, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %2999 = multiply(0.00468979f /* ty=float32 */, %2998) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3000 = add(%2999, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3001 = floor(%3000) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3002 = cast(%3001, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3003 = clip(%3002, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3004 = cast(%3003, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3005 = broadcast_to(%3004, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3006 = reshape(%3005, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%3006, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %3012 = %3010(%3009, meta[relay.Constant][32] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %3013 = fn (%p0547: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %3011 = cast(%p0547, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%3011, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %3014 = %2992(%2991, meta[relay.Constant][29] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %3015 = %3013(%3012) /* ty=Tensor[(16, 128), int32] */;
  %3016 = fn (%p0505: Tensor[(16, 128, 64), uint8], %p1344: Tensor[(16, 128, 64), int8], %p2228: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %2720 = multiply(128 /* ty=int32 */, %p2228) /* ty=Tensor[(16, 128), int32] */;
    %2721 = nn.batch_matmul(%p0505, %p1344, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %2722 = expand_dims(%2720, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%2721, %2722) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %3017 = %3016(%3014, %3012, %3015) /* ty=Tensor[(16, 128, 128), int32] */;
  %3018 = fn (%p0504: Tensor[(16, 128, 128), int32], %p1343: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="94f31727e9eddc54") -> Tensor[(1, 16, 128, 128), float32] {
    %2716 = reshape(%p0504, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %2717 = cast(%2716, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2718 = multiply(%2717, 0.00266737f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2719 = divide(%2718, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%2719, %p1343) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %3019 = %3018(%3017, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %3020 = fn (%p0503: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="39667036f6b5a41a") -> Tensor[(1, 16, 128, 128), int8] {
    %2712 = nn.softmax(%p0503, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2713 = divide(%2712, 0.00811722f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2714 = clip(%2713, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2715 = round(%2714) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%2715, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %3021 = %3020(%3019) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %3022 = fn (%p0502: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %2708 = broadcast_to(%p0502, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %2709 = reshape(%2708, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %2710 = cast(%2709, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %2711 = add(%2710, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%2711, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %3038 = fn (%p0549: Tensor[(128, 1024), uint8], %p1372: Tensor[(64, 256, 16, 4), int8], %p2245: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3037 = nn.contrib_dense_pack(%p0549, %p1372, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3037, %p2245) /* ty=Tensor[(128, 1024), int32] */
  };
  %3039 = %3038(%2989, meta[relay.Constant][33] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][34] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3040 = fn (%p0548: Tensor[(128, 1024), int32], %p1371: Tensor[(1024), int32], Primitive=1, hash="fe15566066b9715a") -> Tensor[(16, 64, 128), int8] {
    %3023 = reshape(%p0548, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3024 = add(%3023, %p1371) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3025 = clip(%3024, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3026 = reshape(%3025, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3027 = transpose(%3026, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3028 = cast(%3027, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3029 = multiply(0.00468979f /* ty=float32 */, %3028) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3030 = add(%3029, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3031 = floor(%3030) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3032 = cast(%3031, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3033 = clip(%3032, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3034 = cast(%3033, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3035 = broadcast_to(%3034, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3036 = reshape(%3035, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%3036, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %3042 = %3040(%3039, meta[relay.Constant][35] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %3043 = fn (%p0550: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %3041 = cast(%p0550, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%3041, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %3044 = %3022(%3021) /* ty=Tensor[(16, 128, 128), uint8] */;
  %3045 = %3043(%3042) /* ty=Tensor[(16, 64), int32] */;
  %3046 = fn (%p0501: Tensor[(16, 128, 128), uint8], %p1342: Tensor[(16, 64, 128), int8], %p2227: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %2705 = multiply(128 /* ty=int32 */, %p2227) /* ty=Tensor[(16, 64), int32] */;
    %2706 = nn.batch_matmul(%p0501, %p1342, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %2707 = expand_dims(%2705, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%2706, %2707) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %3047 = %3046(%3044, %3042, %3045) /* ty=Tensor[(16, 128, 64), int32] */;
  %3048 = fn (%p0500: Tensor[(16, 128, 64), int32], Primitive=1, hash="5df36617520cd3c2") -> Tensor[(128, 1024), uint8] {
    %2692 = reshape(%p0500, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2693 = transpose(%2692, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2694 = reshape(%2693, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2695 = cast(%2694, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2696 = multiply(0.0290116f /* ty=float32 */, %2695) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2697 = add(%2696, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2698 = floor(%2697) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2699 = cast(%2698, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2700 = clip(%2699, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2701 = cast(%2700, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2702 = reshape(%2701, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2703 = cast(%2702, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2704 = add(%2703, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2704, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3049 = %3048(%3047) /* ty=Tensor[(128, 1024), uint8] */;
  %3050 = fn (%p0499: Tensor[(128, 1024), uint8], %p1341: Tensor[(64, 256, 16, 4), int8], %p2226: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2691 = nn.contrib_dense_pack(%p0499, %p1341, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2691, %p2226) /* ty=Tensor[(128, 1024), int32] */
  };
  %3051 = %3050(%3049, meta[relay.Constant][36] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][37] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3052 = fn (%p0498: Tensor[(128, 1024), int32], %p1340: Tensor[(1024), int32], %p2225: Tensor[(1, 128, 1024), int8], Primitive=1, hash="2c1d10acb0be217e") -> Tensor[(1, 128, 1024), float32] {
    %2677 = reshape(%p0498, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2678 = add(%2677, %p1340) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2679 = clip(%2678, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2680 = cast(%2679, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2681 = multiply(0.00712019f /* ty=float32 */, %2680) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2682 = add(%2681, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2683 = floor(%2682) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2684 = cast(%2683, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2685 = clip(%2684, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2686 = cast(%2685, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2687 = cast(%2686, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2688 = cast(%p2225, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2689 = multiply(%2687, 0.0144237f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2690 = multiply(%2688, 0.0728465f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2689, %2690) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3053 = %3052(%3051, meta[relay.Constant][38] /* ty=Tensor[(1024), int32] */, %2987) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3054 = fn (%p0551: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0551, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3055 = %3054(%3053) /* ty=Tensor[(1, 128, 1), float32] */;
  %3056 = fn (%p0497: Tensor[(1, 128, 1024), float32], %p1339: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0497, %p1339) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3057 = %3056(%3053, %3055) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3058 = fn (%p0496: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2676 = power(%p0496, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2676, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3059 = %3058(%3057) /* ty=Tensor[(1, 128, 1), float32] */;
  %3060 = fn (%p0495: Tensor[(1, 128, 1), float32], %p1338: Tensor[(1, 128, 1024), float32], %p2224: Tensor[(1024), float32], %p345: Tensor[(1024), float32], Primitive=1, hash="174718a0f1f8933e") -> Tensor[(1, 128, 1024), int8] {
    %2668 = add(%p0495, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2669 = sqrt(%2668) /* ty=Tensor[(1, 128, 1), float32] */;
    %2670 = divide(%p1338, %2669) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2671 = multiply(%2670, %p2224) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2672 = add(%2671, %p345) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2673 = divide(%2672, 0.378437f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2674 = clip(%2673, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2675 = round(%2674) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2675, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3061 = %3060(%3059, %3057, meta[relay.Constant][39] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][40] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3062 = fn (%p0494: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2665 = reshape(%p0494, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2666 = cast(%2665, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2667 = add(%2666, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2667, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3063 = %3062(%3061) /* ty=Tensor[(128, 1024), uint8] */;
  %3064 = fn (%p0493: Tensor[(128, 1024), uint8], %p1337: Tensor[(256, 256, 16, 4), int8], %p2223: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %2664 = nn.contrib_dense_pack(%p0493, %p1337, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%2664, %p2223) /* ty=Tensor[(128, 4096), int32] */
  };
  %3065 = %3064(%3063, meta[relay.Constant][41] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][42] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %3066 = fn (%p0492: Tensor[(128, 4096), int32], %p1336: Tensor[(4096), float32], Primitive=1, hash="f9152877d0173418") -> Tensor[(128, 4096), uint8] {
    %2648 = reshape(%p0492, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %2649 = cast(%2648, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %2650 = multiply(%2649, 0.000720115f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2651 = add(%2650, %p1336) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2652 = divide(%2651, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2653 = erf(%2652) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2654 = multiply(%2651, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2655 = add(%2653, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2656 = multiply(%2654, %2655) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2657 = divide(%2656, 0.048838f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2658 = clip(%2657, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2659 = round(%2658) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2660 = cast(%2659, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %2661 = reshape(%2660, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %2662 = cast(%2661, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %2663 = add(%2662, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%2663, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %3067 = %3066(%3065, meta[relay.Constant][43] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %3068 = fn (%p0491: Tensor[(128, 4096), uint8], %p1335: Tensor[(64, 1024, 16, 4), int8], %p2222: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2647 = nn.contrib_dense_pack(%p0491, %p1335, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2647, %p2222) /* ty=Tensor[(128, 1024), int32] */
  };
  %3069 = %3068(%3067, meta[relay.Constant][44] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][45] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3070 = fn (%p0490: Tensor[(128, 1024), int32], %p1334: Tensor[(1024), int32], %p2221: Tensor[(1, 128, 1024), int8], Primitive=1, hash="23333cd2472fc604") -> Tensor[(1, 128, 1024), float32] {
    %2633 = reshape(%p0490, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2634 = add(%2633, %p1334) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2635 = clip(%2634, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2636 = cast(%2635, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2637 = multiply(0.00634834f /* ty=float32 */, %2636) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2638 = add(%2637, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2639 = floor(%2638) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2640 = cast(%2639, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2641 = clip(%2640, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2642 = cast(%2641, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2643 = cast(%2642, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2644 = cast(%p2221, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2645 = multiply(%2643, 0.10394f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2646 = multiply(%2644, 0.378437f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2645, %2646) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3071 = %3070(%3069, meta[relay.Constant][46] /* ty=Tensor[(1024), int32] */, %3061) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3072 = fn (%p0552: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0552, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3073 = %3072(%3071) /* ty=Tensor[(1, 128, 1), float32] */;
  %3074 = fn (%p0489: Tensor[(1, 128, 1024), float32], %p1333: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0489, %p1333) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3075 = %3074(%3071, %3073) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3076 = fn (%p0488: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2632 = power(%p0488, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2632, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3077 = %3076(%3075) /* ty=Tensor[(1, 128, 1), float32] */;
  %3078 = fn (%p0487: Tensor[(1, 128, 1), float32], %p1332: Tensor[(1, 128, 1024), float32], %p2220: Tensor[(1024), float32], %p344: Tensor[(1024), float32], Primitive=1, hash="ffbfe3fd92bb722d") -> Tensor[(1, 128, 1024), int8] {
    %2624 = add(%p0487, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2625 = sqrt(%2624) /* ty=Tensor[(1, 128, 1), float32] */;
    %2626 = divide(%p1332, %2625) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2627 = multiply(%2626, %p2220) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2628 = add(%2627, %p344) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2629 = divide(%2628, 0.0871962f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2630 = clip(%2629, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2631 = round(%2630) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2631, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3079 = %3078(%3077, %3075, meta[relay.Constant][47] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][48] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3080 = fn (%p0486: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2621 = reshape(%p0486, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2622 = cast(%2621, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2623 = add(%2622, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2623, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3081 = %3080(%3079) /* ty=Tensor[(128, 1024), uint8] */;
  %3082 = fn (%p0485: Tensor[(128, 1024), uint8], %p1331: Tensor[(64, 256, 16, 4), int8], %p2219: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2620 = nn.contrib_dense_pack(%p0485, %p1331, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2620, %p2219) /* ty=Tensor[(128, 1024), int32] */
  };
  %3083 = %3082(%3081, meta[relay.Constant][49] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][50] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3084 = fn (%p0484: Tensor[(128, 1024), int32], %p1330: Tensor[(1024), int32], Primitive=1, hash="e34bd219c98598d5") -> Tensor[(16, 128, 64), uint8] {
    %2604 = reshape(%p0484, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2605 = add(%2604, %p1330) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2606 = clip(%2605, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2607 = reshape(%2606, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2608 = transpose(%2607, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2609 = cast(%2608, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2610 = multiply(0.00394265f /* ty=float32 */, %2609) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2611 = add(%2610, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2612 = floor(%2611) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2613 = cast(%2612, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2614 = clip(%2613, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2615 = cast(%2614, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2616 = broadcast_to(%2615, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2617 = reshape(%2616, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %2618 = cast(%2617, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %2619 = add(%2618, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%2619, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %3100 = fn (%p0554: Tensor[(128, 1024), uint8], %p1374: Tensor[(64, 256, 16, 4), int8], %p2246: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3099 = nn.contrib_dense_pack(%p0554, %p1374, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3099, %p2246) /* ty=Tensor[(128, 1024), int32] */
  };
  %3101 = %3100(%3081, meta[relay.Constant][52] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][53] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3102 = fn (%p0553: Tensor[(128, 1024), int32], %p1373: Tensor[(1024), int32], Primitive=1, hash="aa246f932215d7a9") -> Tensor[(16, 128, 64), int8] {
    %3085 = reshape(%p0553, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3086 = add(%3085, %p1373) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3087 = clip(%3086, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3088 = reshape(%3087, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3089 = transpose(%3088, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3090 = cast(%3089, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3091 = multiply(0.00394265f /* ty=float32 */, %3090) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3092 = add(%3091, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3093 = floor(%3092) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3094 = cast(%3093, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3095 = clip(%3094, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3096 = cast(%3095, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3097 = broadcast_to(%3096, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3098 = reshape(%3097, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%3098, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %3104 = %3102(%3101, meta[relay.Constant][54] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %3105 = fn (%p0555: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %3103 = cast(%p0555, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%3103, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %3106 = %3084(%3083, meta[relay.Constant][51] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %3107 = %3105(%3104) /* ty=Tensor[(16, 128), int32] */;
  %3108 = fn (%p0483: Tensor[(16, 128, 64), uint8], %p1329: Tensor[(16, 128, 64), int8], %p2218: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %2601 = multiply(128 /* ty=int32 */, %p2218) /* ty=Tensor[(16, 128), int32] */;
    %2602 = nn.batch_matmul(%p0483, %p1329, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %2603 = expand_dims(%2601, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%2602, %2603) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %3109 = %3108(%3106, %3104, %3107) /* ty=Tensor[(16, 128, 128), int32] */;
  %3110 = fn (%p0482: Tensor[(16, 128, 128), int32], %p1328: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="fdbee054ecc2caaf") -> Tensor[(1, 16, 128, 128), float32] {
    %2597 = reshape(%p0482, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %2598 = cast(%2597, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2599 = multiply(%2598, 0.00331f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2600 = divide(%2599, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%2600, %p1328) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %3111 = %3110(%3109, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %3112 = fn (%p0481: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="7b27a0ff1671dd9e") -> Tensor[(1, 16, 128, 128), int8] {
    %2593 = nn.softmax(%p0481, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2594 = divide(%2593, 0.0078178f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2595 = clip(%2594, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2596 = round(%2595) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%2596, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %3113 = %3112(%3111) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %3114 = fn (%p0480: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %2589 = broadcast_to(%p0480, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %2590 = reshape(%2589, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %2591 = cast(%2590, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %2592 = add(%2591, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%2592, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %3130 = fn (%p0557: Tensor[(128, 1024), uint8], %p1376: Tensor[(64, 256, 16, 4), int8], %p2247: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3129 = nn.contrib_dense_pack(%p0557, %p1376, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3129, %p2247) /* ty=Tensor[(128, 1024), int32] */
  };
  %3131 = %3130(%3081, meta[relay.Constant][55] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][56] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3132 = fn (%p0556: Tensor[(128, 1024), int32], %p1375: Tensor[(1024), int32], Primitive=1, hash="85e7c6801cd30b34") -> Tensor[(16, 64, 128), int8] {
    %3115 = reshape(%p0556, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3116 = add(%3115, %p1375) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3117 = clip(%3116, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3118 = reshape(%3117, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3119 = transpose(%3118, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3120 = cast(%3119, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3121 = multiply(0.00394265f /* ty=float32 */, %3120) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3122 = add(%3121, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3123 = floor(%3122) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3124 = cast(%3123, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3125 = clip(%3124, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3126 = cast(%3125, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3127 = broadcast_to(%3126, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3128 = reshape(%3127, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%3128, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %3134 = %3132(%3131, meta[relay.Constant][57] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %3135 = fn (%p0558: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %3133 = cast(%p0558, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%3133, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %3136 = %3114(%3113) /* ty=Tensor[(16, 128, 128), uint8] */;
  %3137 = %3135(%3134) /* ty=Tensor[(16, 64), int32] */;
  %3138 = fn (%p0479: Tensor[(16, 128, 128), uint8], %p1327: Tensor[(16, 64, 128), int8], %p2217: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %2586 = multiply(128 /* ty=int32 */, %p2217) /* ty=Tensor[(16, 64), int32] */;
    %2587 = nn.batch_matmul(%p0479, %p1327, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %2588 = expand_dims(%2586, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%2587, %2588) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %3139 = %3138(%3136, %3134, %3137) /* ty=Tensor[(16, 128, 64), int32] */;
  %3140 = fn (%p0478: Tensor[(16, 128, 64), int32], Primitive=1, hash="0042ac59fb1ae70f") -> Tensor[(128, 1024), uint8] {
    %2573 = reshape(%p0478, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2574 = transpose(%2573, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2575 = reshape(%2574, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2576 = cast(%2575, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2577 = multiply(0.0329001f /* ty=float32 */, %2576) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2578 = add(%2577, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2579 = floor(%2578) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2580 = cast(%2579, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2581 = clip(%2580, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2582 = cast(%2581, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2583 = reshape(%2582, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2584 = cast(%2583, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2585 = add(%2584, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2585, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3141 = %3140(%3139) /* ty=Tensor[(128, 1024), uint8] */;
  %3142 = fn (%p0477: Tensor[(128, 1024), uint8], %p1326: Tensor[(64, 256, 16, 4), int8], %p2216: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2572 = nn.contrib_dense_pack(%p0477, %p1326, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2572, %p2216) /* ty=Tensor[(128, 1024), int32] */
  };
  %3143 = %3142(%3141, meta[relay.Constant][58] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][59] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3144 = fn (%p0476: Tensor[(128, 1024), int32], %p1325: Tensor[(1024), int32], %p2215: Tensor[(1, 128, 1024), int8], Primitive=1, hash="579b5c486283a647") -> Tensor[(1, 128, 1024), float32] {
    %2558 = reshape(%p0476, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2559 = add(%2558, %p1325) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2560 = clip(%2559, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2561 = cast(%2560, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2562 = multiply(0.00528628f /* ty=float32 */, %2561) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2563 = add(%2562, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2564 = floor(%2563) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2565 = cast(%2564, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2566 = clip(%2565, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2567 = cast(%2566, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2568 = cast(%2567, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2569 = cast(%p2215, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2570 = multiply(%2568, 0.00873957f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2571 = multiply(%2569, 0.0871962f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2570, %2571) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3145 = %3144(%3143, meta[relay.Constant][60] /* ty=Tensor[(1024), int32] */, %3079) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3146 = fn (%p0559: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0559, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3147 = %3146(%3145) /* ty=Tensor[(1, 128, 1), float32] */;
  %3148 = fn (%p0475: Tensor[(1, 128, 1024), float32], %p1324: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0475, %p1324) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3149 = %3148(%3145, %3147) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3150 = fn (%p0474: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2557 = power(%p0474, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2557, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3151 = %3150(%3149) /* ty=Tensor[(1, 128, 1), float32] */;
  %3152 = fn (%p0473: Tensor[(1, 128, 1), float32], %p1323: Tensor[(1, 128, 1024), float32], %p2214: Tensor[(1024), float32], %p343: Tensor[(1024), float32], Primitive=1, hash="791ef6ca5c21b097") -> Tensor[(1, 128, 1024), int8] {
    %2549 = add(%p0473, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2550 = sqrt(%2549) /* ty=Tensor[(1, 128, 1), float32] */;
    %2551 = divide(%p1323, %2550) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2552 = multiply(%2551, %p2214) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2553 = add(%2552, %p343) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2554 = divide(%2553, 0.412015f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2555 = clip(%2554, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2556 = round(%2555) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2556, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3153 = %3152(%3151, %3149, meta[relay.Constant][61] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][62] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3154 = fn (%p0472: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2546 = reshape(%p0472, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2547 = cast(%2546, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2548 = add(%2547, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2548, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3155 = %3154(%3153) /* ty=Tensor[(128, 1024), uint8] */;
  %3156 = fn (%p0471: Tensor[(128, 1024), uint8], %p1322: Tensor[(256, 256, 16, 4), int8], %p2213: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %2545 = nn.contrib_dense_pack(%p0471, %p1322, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%2545, %p2213) /* ty=Tensor[(128, 4096), int32] */
  };
  %3157 = %3156(%3155, meta[relay.Constant][63] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][64] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %3158 = fn (%p0470: Tensor[(128, 4096), int32], %p1321: Tensor[(4096), float32], Primitive=1, hash="830a6603341d4330") -> Tensor[(128, 4096), uint8] {
    %2529 = reshape(%p0470, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %2530 = cast(%2529, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %2531 = multiply(%2530, 0.000816956f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2532 = add(%2531, %p1321) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2533 = divide(%2532, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2534 = erf(%2533) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2535 = multiply(%2532, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2536 = add(%2534, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2537 = multiply(%2535, %2536) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2538 = divide(%2537, 0.0339606f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2539 = clip(%2538, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2540 = round(%2539) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2541 = cast(%2540, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %2542 = reshape(%2541, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %2543 = cast(%2542, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %2544 = add(%2543, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%2544, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %3159 = %3158(%3157, meta[relay.Constant][65] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %3160 = fn (%p0469: Tensor[(128, 4096), uint8], %p1320: Tensor[(64, 1024, 16, 4), int8], %p2212: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2528 = nn.contrib_dense_pack(%p0469, %p1320, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2528, %p2212) /* ty=Tensor[(128, 1024), int32] */
  };
  %3161 = %3160(%3159, meta[relay.Constant][66] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][67] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3162 = fn (%p0468: Tensor[(128, 1024), int32], %p1319: Tensor[(1024), int32], %p2211: Tensor[(1, 128, 1024), int8], Primitive=1, hash="9576d945fddb39e4") -> Tensor[(1, 128, 1024), float32] {
    %2514 = reshape(%p0468, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2515 = add(%2514, %p1319) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2516 = clip(%2515, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2517 = cast(%2516, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2518 = multiply(0.00666442f /* ty=float32 */, %2517) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2519 = add(%2518, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2520 = floor(%2519) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2521 = cast(%2520, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2522 = clip(%2521, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2523 = cast(%2522, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2524 = cast(%2523, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2525 = cast(%p2211, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2526 = multiply(%2524, 0.0619893f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2527 = multiply(%2525, 0.412015f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2526, %2527) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3163 = %3162(%3161, meta[relay.Constant][68] /* ty=Tensor[(1024), int32] */, %3153) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3164 = fn (%p0560: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0560, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3165 = %3164(%3163) /* ty=Tensor[(1, 128, 1), float32] */;
  %3166 = fn (%p0467: Tensor[(1, 128, 1024), float32], %p1318: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0467, %p1318) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3167 = %3166(%3163, %3165) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3168 = fn (%p0466: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2513 = power(%p0466, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2513, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3169 = %3168(%3167) /* ty=Tensor[(1, 128, 1), float32] */;
  %3170 = fn (%p0465: Tensor[(1, 128, 1), float32], %p1317: Tensor[(1, 128, 1024), float32], %p2210: Tensor[(1024), float32], %p342: Tensor[(1024), float32], Primitive=1, hash="d7623c5e85abf805") -> Tensor[(1, 128, 1024), int8] {
    %2505 = add(%p0465, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2506 = sqrt(%2505) /* ty=Tensor[(1, 128, 1), float32] */;
    %2507 = divide(%p1317, %2506) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2508 = multiply(%2507, %p2210) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2509 = add(%2508, %p342) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2510 = divide(%2509, 0.0925139f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2511 = clip(%2510, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2512 = round(%2511) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2512, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3171 = %3170(%3169, %3167, meta[relay.Constant][69] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][70] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3172 = fn (%p0464: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2502 = reshape(%p0464, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2503 = cast(%2502, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2504 = add(%2503, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2504, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3173 = %3172(%3171) /* ty=Tensor[(128, 1024), uint8] */;
  %3174 = fn (%p0463: Tensor[(128, 1024), uint8], %p1316: Tensor[(64, 256, 16, 4), int8], %p2209: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2501 = nn.contrib_dense_pack(%p0463, %p1316, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2501, %p2209) /* ty=Tensor[(128, 1024), int32] */
  };
  %3175 = %3174(%3173, meta[relay.Constant][71] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][72] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3176 = fn (%p0462: Tensor[(128, 1024), int32], %p1315: Tensor[(1024), int32], Primitive=1, hash="fd6cf5524138f8e4") -> Tensor[(16, 128, 64), uint8] {
    %2485 = reshape(%p0462, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2486 = add(%2485, %p1315) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2487 = clip(%2486, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2488 = reshape(%2487, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2489 = transpose(%2488, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2490 = cast(%2489, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2491 = multiply(0.00400565f /* ty=float32 */, %2490) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2492 = add(%2491, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2493 = floor(%2492) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2494 = cast(%2493, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2495 = clip(%2494, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2496 = cast(%2495, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2497 = broadcast_to(%2496, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2498 = reshape(%2497, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %2499 = cast(%2498, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %2500 = add(%2499, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%2500, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %3192 = fn (%p0562: Tensor[(128, 1024), uint8], %p1378: Tensor[(64, 256, 16, 4), int8], %p2248: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3191 = nn.contrib_dense_pack(%p0562, %p1378, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3191, %p2248) /* ty=Tensor[(128, 1024), int32] */
  };
  %3193 = %3192(%3173, meta[relay.Constant][74] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][75] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3194 = fn (%p0561: Tensor[(128, 1024), int32], %p1377: Tensor[(1024), int32], Primitive=1, hash="0833676fa5d72d18") -> Tensor[(16, 128, 64), int8] {
    %3177 = reshape(%p0561, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3178 = add(%3177, %p1377) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3179 = clip(%3178, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3180 = reshape(%3179, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3181 = transpose(%3180, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3182 = cast(%3181, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3183 = multiply(0.00400565f /* ty=float32 */, %3182) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3184 = add(%3183, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3185 = floor(%3184) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3186 = cast(%3185, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3187 = clip(%3186, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3188 = cast(%3187, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3189 = broadcast_to(%3188, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3190 = reshape(%3189, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%3190, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %3196 = %3194(%3193, meta[relay.Constant][76] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %3197 = fn (%p0563: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %3195 = cast(%p0563, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%3195, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %3198 = %3176(%3175, meta[relay.Constant][73] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %3199 = %3197(%3196) /* ty=Tensor[(16, 128), int32] */;
  %3200 = fn (%p0461: Tensor[(16, 128, 64), uint8], %p1314: Tensor[(16, 128, 64), int8], %p2208: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %2482 = multiply(128 /* ty=int32 */, %p2208) /* ty=Tensor[(16, 128), int32] */;
    %2483 = nn.batch_matmul(%p0461, %p1314, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %2484 = expand_dims(%2482, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%2483, %2484) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %3201 = %3200(%3198, %3196, %3199) /* ty=Tensor[(16, 128, 128), int32] */;
  %3202 = fn (%p0460: Tensor[(16, 128, 128), int32], %p1313: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="a95800e4e93063c0") -> Tensor[(1, 16, 128, 128), float32] {
    %2478 = reshape(%p0460, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %2479 = cast(%2478, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2480 = multiply(%2479, 0.0032026f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2481 = divide(%2480, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%2481, %p1313) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %3203 = %3202(%3201, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %3204 = fn (%p0459: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="2bab550e3b826b80") -> Tensor[(1, 16, 128, 128), int8] {
    %2474 = nn.softmax(%p0459, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2475 = divide(%2474, 0.00731781f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2476 = clip(%2475, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2477 = round(%2476) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%2477, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %3205 = %3204(%3203) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %3206 = fn (%p0458: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %2470 = broadcast_to(%p0458, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %2471 = reshape(%2470, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %2472 = cast(%2471, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %2473 = add(%2472, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%2473, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %3222 = fn (%p0565: Tensor[(128, 1024), uint8], %p1380: Tensor[(64, 256, 16, 4), int8], %p2249: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3221 = nn.contrib_dense_pack(%p0565, %p1380, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3221, %p2249) /* ty=Tensor[(128, 1024), int32] */
  };
  %3223 = %3222(%3173, meta[relay.Constant][77] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][78] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3224 = fn (%p0564: Tensor[(128, 1024), int32], %p1379: Tensor[(1024), int32], Primitive=1, hash="57d093c5c38a98f5") -> Tensor[(16, 64, 128), int8] {
    %3207 = reshape(%p0564, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3208 = add(%3207, %p1379) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3209 = clip(%3208, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3210 = reshape(%3209, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3211 = transpose(%3210, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3212 = cast(%3211, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3213 = multiply(0.00400565f /* ty=float32 */, %3212) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3214 = add(%3213, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3215 = floor(%3214) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3216 = cast(%3215, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3217 = clip(%3216, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3218 = cast(%3217, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3219 = broadcast_to(%3218, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3220 = reshape(%3219, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%3220, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %3226 = %3224(%3223, meta[relay.Constant][79] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %3227 = fn (%p0566: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %3225 = cast(%p0566, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%3225, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %3228 = %3206(%3205) /* ty=Tensor[(16, 128, 128), uint8] */;
  %3229 = %3227(%3226) /* ty=Tensor[(16, 64), int32] */;
  %3230 = fn (%p0457: Tensor[(16, 128, 128), uint8], %p1312: Tensor[(16, 64, 128), int8], %p2207: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %2467 = multiply(128 /* ty=int32 */, %p2207) /* ty=Tensor[(16, 64), int32] */;
    %2468 = nn.batch_matmul(%p0457, %p1312, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %2469 = expand_dims(%2467, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%2468, %2469) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %3231 = %3230(%3228, %3226, %3229) /* ty=Tensor[(16, 128, 64), int32] */;
  %3232 = fn (%p0456: Tensor[(16, 128, 64), int32], Primitive=1, hash="169fbe288cec771f") -> Tensor[(128, 1024), uint8] {
    %2454 = reshape(%p0456, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2455 = transpose(%2454, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2456 = reshape(%2455, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2457 = cast(%2456, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2458 = multiply(0.0271663f /* ty=float32 */, %2457) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2459 = add(%2458, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2460 = floor(%2459) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2461 = cast(%2460, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2462 = clip(%2461, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2463 = cast(%2462, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2464 = reshape(%2463, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2465 = cast(%2464, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2466 = add(%2465, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2466, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3233 = %3232(%3231) /* ty=Tensor[(128, 1024), uint8] */;
  %3234 = fn (%p0455: Tensor[(128, 1024), uint8], %p1311: Tensor[(64, 256, 16, 4), int8], %p2206: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2453 = nn.contrib_dense_pack(%p0455, %p1311, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2453, %p2206) /* ty=Tensor[(128, 1024), int32] */
  };
  %3235 = %3234(%3233, meta[relay.Constant][80] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][81] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3236 = fn (%p0454: Tensor[(128, 1024), int32], %p1310: Tensor[(1024), int32], %p2205: Tensor[(1, 128, 1024), int8], Primitive=1, hash="e96773192eb2284e") -> Tensor[(1, 128, 1024), float32] {
    %2439 = reshape(%p0454, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2440 = add(%2439, %p1310) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2441 = clip(%2440, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2442 = cast(%2441, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2443 = multiply(0.0032064f /* ty=float32 */, %2442) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2444 = add(%2443, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2445 = floor(%2444) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2446 = cast(%2445, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2447 = clip(%2446, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2448 = cast(%2447, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2449 = cast(%2448, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2450 = cast(%p2205, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2451 = multiply(%2449, 0.00857786f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2452 = multiply(%2450, 0.0925139f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2451, %2452) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3237 = %3236(%3235, meta[relay.Constant][82] /* ty=Tensor[(1024), int32] */, %3171) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3238 = fn (%p0567: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0567, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3239 = %3238(%3237) /* ty=Tensor[(1, 128, 1), float32] */;
  %3240 = fn (%p0453: Tensor[(1, 128, 1024), float32], %p1309: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0453, %p1309) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3241 = %3240(%3237, %3239) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3242 = fn (%p0452: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2438 = power(%p0452, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2438, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3243 = %3242(%3241) /* ty=Tensor[(1, 128, 1), float32] */;
  %3244 = fn (%p0451: Tensor[(1, 128, 1), float32], %p1308: Tensor[(1, 128, 1024), float32], %p2204: Tensor[(1024), float32], %p341: Tensor[(1024), float32], Primitive=1, hash="dc882dc0f59c1d4c") -> Tensor[(1, 128, 1024), int8] {
    %2430 = add(%p0451, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2431 = sqrt(%2430) /* ty=Tensor[(1, 128, 1), float32] */;
    %2432 = divide(%p1308, %2431) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2433 = multiply(%2432, %p2204) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2434 = add(%2433, %p341) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2435 = divide(%2434, 0.410529f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2436 = clip(%2435, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2437 = round(%2436) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2437, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3245 = %3244(%3243, %3241, meta[relay.Constant][83] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][84] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3246 = fn (%p0450: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2427 = reshape(%p0450, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2428 = cast(%2427, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2429 = add(%2428, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2429, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3247 = %3246(%3245) /* ty=Tensor[(128, 1024), uint8] */;
  %3248 = fn (%p0449: Tensor[(128, 1024), uint8], %p1307: Tensor[(256, 256, 16, 4), int8], %p2203: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %2426 = nn.contrib_dense_pack(%p0449, %p1307, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%2426, %p2203) /* ty=Tensor[(128, 4096), int32] */
  };
  %3249 = %3248(%3247, meta[relay.Constant][85] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][86] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %3250 = fn (%p0448: Tensor[(128, 4096), int32], %p1306: Tensor[(4096), float32], Primitive=1, hash="2f65f189d6b13f42") -> Tensor[(128, 4096), uint8] {
    %2410 = reshape(%p0448, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %2411 = cast(%2410, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %2412 = multiply(%2411, 0.000686036f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2413 = add(%2412, %p1306) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2414 = divide(%2413, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2415 = erf(%2414) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2416 = multiply(%2413, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2417 = add(%2415, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2418 = multiply(%2416, %2417) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2419 = divide(%2418, 0.0392786f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2420 = clip(%2419, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2421 = round(%2420) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2422 = cast(%2421, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %2423 = reshape(%2422, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %2424 = cast(%2423, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %2425 = add(%2424, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%2425, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %3251 = %3250(%3249, meta[relay.Constant][87] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %3252 = fn (%p0447: Tensor[(128, 4096), uint8], %p1305: Tensor[(64, 1024, 16, 4), int8], %p2202: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2409 = nn.contrib_dense_pack(%p0447, %p1305, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2409, %p2202) /* ty=Tensor[(128, 1024), int32] */
  };
  %3253 = %3252(%3251, meta[relay.Constant][88] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][89] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3254 = fn (%p0446: Tensor[(128, 1024), int32], %p1304: Tensor[(1024), int32], %p2201: Tensor[(1, 128, 1024), int8], Primitive=1, hash="5440cd0fe03461c8") -> Tensor[(1, 128, 1024), float32] {
    %2395 = reshape(%p0446, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2396 = add(%2395, %p1304) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2397 = clip(%2396, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2398 = cast(%2397, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2399 = multiply(0.00410772f /* ty=float32 */, %2398) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2400 = add(%2399, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2401 = floor(%2400) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2402 = cast(%2401, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2403 = clip(%2402, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2404 = cast(%2403, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2405 = cast(%2404, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2406 = cast(%p2201, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2407 = multiply(%2405, 0.0459845f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2408 = multiply(%2406, 0.410529f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2407, %2408) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3255 = %3254(%3253, meta[relay.Constant][90] /* ty=Tensor[(1024), int32] */, %3245) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3256 = fn (%p0568: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0568, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3257 = %3256(%3255) /* ty=Tensor[(1, 128, 1), float32] */;
  %3258 = fn (%p0445: Tensor[(1, 128, 1024), float32], %p1303: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0445, %p1303) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3259 = %3258(%3255, %3257) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3260 = fn (%p0444: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2394 = power(%p0444, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2394, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3261 = %3260(%3259) /* ty=Tensor[(1, 128, 1), float32] */;
  %3262 = fn (%p0443: Tensor[(1, 128, 1), float32], %p1302: Tensor[(1, 128, 1024), float32], %p2200: Tensor[(1024), float32], %p340: Tensor[(1024), float32], Primitive=1, hash="a42fd00b975509ee") -> Tensor[(1, 128, 1024), int8] {
    %2386 = add(%p0443, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2387 = sqrt(%2386) /* ty=Tensor[(1, 128, 1), float32] */;
    %2388 = divide(%p1302, %2387) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2389 = multiply(%2388, %p2200) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2390 = add(%2389, %p340) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2391 = divide(%2390, 0.0723975f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2392 = clip(%2391, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2393 = round(%2392) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2393, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3263 = %3262(%3261, %3259, meta[relay.Constant][91] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][92] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3264 = fn (%p0442: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2383 = reshape(%p0442, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2384 = cast(%2383, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2385 = add(%2384, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2385, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3265 = %3264(%3263) /* ty=Tensor[(128, 1024), uint8] */;
  %3266 = fn (%p0441: Tensor[(128, 1024), uint8], %p1301: Tensor[(64, 256, 16, 4), int8], %p2199: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2382 = nn.contrib_dense_pack(%p0441, %p1301, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2382, %p2199) /* ty=Tensor[(128, 1024), int32] */
  };
  %3267 = %3266(%3265, meta[relay.Constant][93] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][94] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3268 = fn (%p0440: Tensor[(128, 1024), int32], %p1300: Tensor[(1024), int32], Primitive=1, hash="d0739f73548e4521") -> Tensor[(16, 128, 64), uint8] {
    %2366 = reshape(%p0440, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2367 = add(%2366, %p1300) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2368 = clip(%2367, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2369 = reshape(%2368, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2370 = transpose(%2369, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2371 = cast(%2370, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2372 = multiply(0.00354834f /* ty=float32 */, %2371) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2373 = add(%2372, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2374 = floor(%2373) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2375 = cast(%2374, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2376 = clip(%2375, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2377 = cast(%2376, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2378 = broadcast_to(%2377, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2379 = reshape(%2378, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %2380 = cast(%2379, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %2381 = add(%2380, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%2381, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %3284 = fn (%p0570: Tensor[(128, 1024), uint8], %p1382: Tensor[(64, 256, 16, 4), int8], %p2250: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3283 = nn.contrib_dense_pack(%p0570, %p1382, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3283, %p2250) /* ty=Tensor[(128, 1024), int32] */
  };
  %3285 = %3284(%3265, meta[relay.Constant][96] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][97] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3286 = fn (%p0569: Tensor[(128, 1024), int32], %p1381: Tensor[(1024), int32], Primitive=1, hash="c0c02f9f3efe9322") -> Tensor[(16, 128, 64), int8] {
    %3269 = reshape(%p0569, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3270 = add(%3269, %p1381) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3271 = clip(%3270, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3272 = reshape(%3271, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3273 = transpose(%3272, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3274 = cast(%3273, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3275 = multiply(0.00354834f /* ty=float32 */, %3274) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3276 = add(%3275, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3277 = floor(%3276) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3278 = cast(%3277, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3279 = clip(%3278, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3280 = cast(%3279, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3281 = broadcast_to(%3280, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3282 = reshape(%3281, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%3282, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %3288 = %3286(%3285, meta[relay.Constant][98] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %3289 = fn (%p0571: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %3287 = cast(%p0571, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%3287, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %3290 = %3268(%3267, meta[relay.Constant][95] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %3291 = %3289(%3288) /* ty=Tensor[(16, 128), int32] */;
  %3292 = fn (%p0439: Tensor[(16, 128, 64), uint8], %p1299: Tensor[(16, 128, 64), int8], %p2198: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %2363 = multiply(128 /* ty=int32 */, %p2198) /* ty=Tensor[(16, 128), int32] */;
    %2364 = nn.batch_matmul(%p0439, %p1299, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %2365 = expand_dims(%2363, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%2364, %2365) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %3293 = %3292(%3290, %3288, %3291) /* ty=Tensor[(16, 128, 128), int32] */;
  %3294 = fn (%p0438: Tensor[(16, 128, 128), int32], %p1298: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="cf793d2b5abbcc51") -> Tensor[(1, 16, 128, 128), float32] {
    %2359 = reshape(%p0438, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %2360 = cast(%2359, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2361 = multiply(%2360, 0.00272532f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2362 = divide(%2361, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%2362, %p1298) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %3295 = %3294(%3293, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %3296 = fn (%p0437: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="1c72b2d2bf5e7a8e") -> Tensor[(1, 16, 128, 128), int8] {
    %2355 = nn.softmax(%p0437, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2356 = divide(%2355, 0.00633571f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2357 = clip(%2356, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2358 = round(%2357) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%2358, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %3297 = %3296(%3295) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %3298 = fn (%p0436: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %2351 = broadcast_to(%p0436, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %2352 = reshape(%2351, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %2353 = cast(%2352, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %2354 = add(%2353, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%2354, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %3314 = fn (%p0573: Tensor[(128, 1024), uint8], %p1384: Tensor[(64, 256, 16, 4), int8], %p2251: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3313 = nn.contrib_dense_pack(%p0573, %p1384, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3313, %p2251) /* ty=Tensor[(128, 1024), int32] */
  };
  %3315 = %3314(%3265, meta[relay.Constant][99] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][100] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3316 = fn (%p0572: Tensor[(128, 1024), int32], %p1383: Tensor[(1024), int32], Primitive=1, hash="a231710a1de54886") -> Tensor[(16, 64, 128), int8] {
    %3299 = reshape(%p0572, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3300 = add(%3299, %p1383) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3301 = clip(%3300, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3302 = reshape(%3301, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3303 = transpose(%3302, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3304 = cast(%3303, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3305 = multiply(0.00354834f /* ty=float32 */, %3304) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3306 = add(%3305, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3307 = floor(%3306) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3308 = cast(%3307, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3309 = clip(%3308, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3310 = cast(%3309, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3311 = broadcast_to(%3310, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3312 = reshape(%3311, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%3312, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %3318 = %3316(%3315, meta[relay.Constant][101] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %3319 = fn (%p0574: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %3317 = cast(%p0574, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%3317, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %3320 = %3298(%3297) /* ty=Tensor[(16, 128, 128), uint8] */;
  %3321 = %3319(%3318) /* ty=Tensor[(16, 64), int32] */;
  %3322 = fn (%p0435: Tensor[(16, 128, 128), uint8], %p1297: Tensor[(16, 64, 128), int8], %p2197: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %2348 = multiply(128 /* ty=int32 */, %p2197) /* ty=Tensor[(16, 64), int32] */;
    %2349 = nn.batch_matmul(%p0435, %p1297, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %2350 = expand_dims(%2348, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%2349, %2350) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %3323 = %3322(%3320, %3318, %3321) /* ty=Tensor[(16, 128, 64), int32] */;
  %3324 = fn (%p0434: Tensor[(16, 128, 64), int32], Primitive=1, hash="e89736a70192c645") -> Tensor[(128, 1024), uint8] {
    %2335 = reshape(%p0434, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2336 = transpose(%2335, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2337 = reshape(%2336, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2338 = cast(%2337, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2339 = multiply(0.0277699f /* ty=float32 */, %2338) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2340 = add(%2339, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2341 = floor(%2340) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2342 = cast(%2341, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2343 = clip(%2342, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2344 = cast(%2343, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2345 = reshape(%2344, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2346 = cast(%2345, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2347 = add(%2346, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2347, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3325 = %3324(%3323) /* ty=Tensor[(128, 1024), uint8] */;
  %3326 = fn (%p0433: Tensor[(128, 1024), uint8], %p1296: Tensor[(64, 256, 16, 4), int8], %p2196: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2334 = nn.contrib_dense_pack(%p0433, %p1296, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2334, %p2196) /* ty=Tensor[(128, 1024), int32] */
  };
  %3327 = %3326(%3325, meta[relay.Constant][102] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][103] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3328 = fn (%p0432: Tensor[(128, 1024), int32], %p1295: Tensor[(1024), int32], %p2195: Tensor[(1, 128, 1024), int8], Primitive=1, hash="a24ccc9ee9ffef8f") -> Tensor[(1, 128, 1024), float32] {
    %2320 = reshape(%p0432, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2321 = add(%2320, %p1295) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2322 = clip(%2321, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2323 = cast(%2322, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2324 = multiply(0.00294047f /* ty=float32 */, %2323) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2325 = add(%2324, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2326 = floor(%2325) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2327 = cast(%2326, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2328 = clip(%2327, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2329 = cast(%2328, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2330 = cast(%2329, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2331 = cast(%p2195, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2332 = multiply(%2330, 0.00690104f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2333 = multiply(%2331, 0.0723975f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2332, %2333) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3329 = %3328(%3327, meta[relay.Constant][104] /* ty=Tensor[(1024), int32] */, %3263) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3330 = fn (%p0575: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0575, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3331 = %3330(%3329) /* ty=Tensor[(1, 128, 1), float32] */;
  %3332 = fn (%p0431: Tensor[(1, 128, 1024), float32], %p1294: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0431, %p1294) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3333 = %3332(%3329, %3331) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3334 = fn (%p0430: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2319 = power(%p0430, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2319, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3335 = %3334(%3333) /* ty=Tensor[(1, 128, 1), float32] */;
  %3336 = fn (%p0429: Tensor[(1, 128, 1), float32], %p1293: Tensor[(1, 128, 1024), float32], %p2194: Tensor[(1024), float32], %p339: Tensor[(1024), float32], Primitive=1, hash="57f164e9d0a262cc") -> Tensor[(1, 128, 1024), int8] {
    %2311 = add(%p0429, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2312 = sqrt(%2311) /* ty=Tensor[(1, 128, 1), float32] */;
    %2313 = divide(%p1293, %2312) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2314 = multiply(%2313, %p2194) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2315 = add(%2314, %p339) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2316 = divide(%2315, 0.373825f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2317 = clip(%2316, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2318 = round(%2317) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2318, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3337 = %3336(%3335, %3333, meta[relay.Constant][105] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][106] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3338 = fn (%p0428: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2308 = reshape(%p0428, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2309 = cast(%2308, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2310 = add(%2309, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2310, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3339 = %3338(%3337) /* ty=Tensor[(128, 1024), uint8] */;
  %3340 = fn (%p0427: Tensor[(128, 1024), uint8], %p1292: Tensor[(256, 256, 16, 4), int8], %p2193: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %2307 = nn.contrib_dense_pack(%p0427, %p1292, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%2307, %p2193) /* ty=Tensor[(128, 4096), int32] */
  };
  %3341 = %3340(%3339, meta[relay.Constant][107] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][108] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %3342 = fn (%p0426: Tensor[(128, 4096), int32], %p1291: Tensor[(4096), float32], Primitive=1, hash="abd3a834ab65b9e7") -> Tensor[(128, 4096), uint8] {
    %2291 = reshape(%p0426, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %2292 = cast(%2291, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %2293 = multiply(%2292, 0.00104625f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2294 = add(%2293, %p1291) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2295 = divide(%2294, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2296 = erf(%2295) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2297 = multiply(%2294, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2298 = add(%2296, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2299 = multiply(%2297, %2298) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2300 = divide(%2299, 0.0290915f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2301 = clip(%2300, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2302 = round(%2301) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2303 = cast(%2302, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %2304 = reshape(%2303, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %2305 = cast(%2304, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %2306 = add(%2305, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%2306, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %3343 = %3342(%3341, meta[relay.Constant][109] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %3344 = fn (%p0425: Tensor[(128, 4096), uint8], %p1290: Tensor[(64, 1024, 16, 4), int8], %p2192: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2290 = nn.contrib_dense_pack(%p0425, %p1290, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2290, %p2192) /* ty=Tensor[(128, 1024), int32] */
  };
  %3345 = %3344(%3343, meta[relay.Constant][110] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][111] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3346 = fn (%p0424: Tensor[(128, 1024), int32], %p1289: Tensor[(1024), int32], %p2191: Tensor[(1, 128, 1024), int8], Primitive=1, hash="5c5c14f3cfbbe449") -> Tensor[(1, 128, 1024), float32] {
    %2276 = reshape(%p0424, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2277 = add(%2276, %p1289) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2278 = clip(%2277, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2279 = cast(%2278, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2280 = multiply(0.00434206f /* ty=float32 */, %2279) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2281 = add(%2280, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2282 = floor(%2281) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2283 = cast(%2282, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2284 = clip(%2283, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2285 = cast(%2284, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2286 = cast(%2285, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2287 = cast(%p2191, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2288 = multiply(%2286, 0.170751f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2289 = multiply(%2287, 0.373825f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2288, %2289) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3347 = %3346(%3345, meta[relay.Constant][112] /* ty=Tensor[(1024), int32] */, %3337) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3348 = fn (%p0576: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0576, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3349 = %3348(%3347) /* ty=Tensor[(1, 128, 1), float32] */;
  %3350 = fn (%p0423: Tensor[(1, 128, 1024), float32], %p1288: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0423, %p1288) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3351 = %3350(%3347, %3349) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3352 = fn (%p0422: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2275 = power(%p0422, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2275, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3353 = %3352(%3351) /* ty=Tensor[(1, 128, 1), float32] */;
  %3354 = fn (%p0421: Tensor[(1, 128, 1), float32], %p1287: Tensor[(1, 128, 1024), float32], %p2190: Tensor[(1024), float32], %p338: Tensor[(1024), float32], Primitive=1, hash="529621d87bc4ca36") -> Tensor[(1, 128, 1024), int8] {
    %2267 = add(%p0421, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2268 = sqrt(%2267) /* ty=Tensor[(1, 128, 1), float32] */;
    %2269 = divide(%p1287, %2268) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2270 = multiply(%2269, %p2190) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2271 = add(%2270, %p338) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2272 = divide(%2271, 0.0570178f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2273 = clip(%2272, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2274 = round(%2273) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2274, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3355 = %3354(%3353, %3351, meta[relay.Constant][113] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][114] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3356 = fn (%p0420: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2264 = reshape(%p0420, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2265 = cast(%2264, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2266 = add(%2265, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2266, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3357 = %3356(%3355) /* ty=Tensor[(128, 1024), uint8] */;
  %3358 = fn (%p0419: Tensor[(128, 1024), uint8], %p1286: Tensor[(64, 256, 16, 4), int8], %p2189: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2263 = nn.contrib_dense_pack(%p0419, %p1286, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2263, %p2189) /* ty=Tensor[(128, 1024), int32] */
  };
  %3359 = %3358(%3357, meta[relay.Constant][115] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][116] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3360 = fn (%p0418: Tensor[(128, 1024), int32], %p1285: Tensor[(1024), int32], Primitive=1, hash="dc8ead77b5641b7b") -> Tensor[(16, 128, 64), uint8] {
    %2247 = reshape(%p0418, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2248 = add(%2247, %p1285) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2249 = clip(%2248, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2250 = reshape(%2249, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2251 = transpose(%2250, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2252 = cast(%2251, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2253 = multiply(0.00357643f /* ty=float32 */, %2252) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2254 = add(%2253, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2255 = floor(%2254) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2256 = cast(%2255, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2257 = clip(%2256, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2258 = cast(%2257, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2259 = broadcast_to(%2258, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2260 = reshape(%2259, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %2261 = cast(%2260, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %2262 = add(%2261, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%2262, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %3376 = fn (%p0578: Tensor[(128, 1024), uint8], %p1386: Tensor[(64, 256, 16, 4), int8], %p2252: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3375 = nn.contrib_dense_pack(%p0578, %p1386, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3375, %p2252) /* ty=Tensor[(128, 1024), int32] */
  };
  %3377 = %3376(%3357, meta[relay.Constant][118] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][119] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3378 = fn (%p0577: Tensor[(128, 1024), int32], %p1385: Tensor[(1024), int32], Primitive=1, hash="7cc6a02875fa6f39") -> Tensor[(16, 128, 64), int8] {
    %3361 = reshape(%p0577, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3362 = add(%3361, %p1385) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3363 = clip(%3362, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3364 = reshape(%3363, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3365 = transpose(%3364, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3366 = cast(%3365, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3367 = multiply(0.00357643f /* ty=float32 */, %3366) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3368 = add(%3367, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3369 = floor(%3368) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3370 = cast(%3369, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3371 = clip(%3370, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3372 = cast(%3371, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3373 = broadcast_to(%3372, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3374 = reshape(%3373, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%3374, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %3380 = %3378(%3377, meta[relay.Constant][120] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %3381 = fn (%p0579: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %3379 = cast(%p0579, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%3379, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %3382 = %3360(%3359, meta[relay.Constant][117] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %3383 = %3381(%3380) /* ty=Tensor[(16, 128), int32] */;
  %3384 = fn (%p0417: Tensor[(16, 128, 64), uint8], %p1284: Tensor[(16, 128, 64), int8], %p2188: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %2244 = multiply(128 /* ty=int32 */, %p2188) /* ty=Tensor[(16, 128), int32] */;
    %2245 = nn.batch_matmul(%p0417, %p1284, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %2246 = expand_dims(%2244, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%2245, %2246) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %3385 = %3384(%3382, %3380, %3383) /* ty=Tensor[(16, 128, 128), int32] */;
  %3386 = fn (%p0416: Tensor[(16, 128, 128), int32], %p1283: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="596e1e64c797d4d5") -> Tensor[(1, 16, 128, 128), float32] {
    %2240 = reshape(%p0416, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %2241 = cast(%2240, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2242 = multiply(%2241, 0.00195861f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2243 = divide(%2242, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%2243, %p1283) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %3387 = %3386(%3385, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %3388 = fn (%p0415: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="26e145f6a27b9676") -> Tensor[(1, 16, 128, 128), int8] {
    %2236 = nn.softmax(%p0415, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2237 = divide(%2236, 0.00306637f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2238 = clip(%2237, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2239 = round(%2238) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%2239, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %3389 = %3388(%3387) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %3390 = fn (%p0414: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %2232 = broadcast_to(%p0414, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %2233 = reshape(%2232, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %2234 = cast(%2233, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %2235 = add(%2234, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%2235, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %3406 = fn (%p0581: Tensor[(128, 1024), uint8], %p1388: Tensor[(64, 256, 16, 4), int8], %p2253: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3405 = nn.contrib_dense_pack(%p0581, %p1388, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3405, %p2253) /* ty=Tensor[(128, 1024), int32] */
  };
  %3407 = %3406(%3357, meta[relay.Constant][121] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][122] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3408 = fn (%p0580: Tensor[(128, 1024), int32], %p1387: Tensor[(1024), int32], Primitive=1, hash="ff082ea5f5bc8653") -> Tensor[(16, 64, 128), int8] {
    %3391 = reshape(%p0580, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3392 = add(%3391, %p1387) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3393 = clip(%3392, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3394 = reshape(%3393, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3395 = transpose(%3394, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3396 = cast(%3395, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3397 = multiply(0.00357643f /* ty=float32 */, %3396) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3398 = add(%3397, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3399 = floor(%3398) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3400 = cast(%3399, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3401 = clip(%3400, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3402 = cast(%3401, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3403 = broadcast_to(%3402, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3404 = reshape(%3403, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%3404, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %3410 = %3408(%3407, meta[relay.Constant][123] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %3411 = fn (%p0582: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %3409 = cast(%p0582, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%3409, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %3412 = %3390(%3389) /* ty=Tensor[(16, 128, 128), uint8] */;
  %3413 = %3411(%3410) /* ty=Tensor[(16, 64), int32] */;
  %3414 = fn (%p0413: Tensor[(16, 128, 128), uint8], %p1282: Tensor[(16, 64, 128), int8], %p2187: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %2229 = multiply(128 /* ty=int32 */, %p2187) /* ty=Tensor[(16, 64), int32] */;
    %2230 = nn.batch_matmul(%p0413, %p1282, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %2231 = expand_dims(%2229, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%2230, %2231) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %3415 = %3414(%3412, %3410, %3413) /* ty=Tensor[(16, 128, 64), int32] */;
  %3416 = fn (%p0412: Tensor[(16, 128, 64), int32], Primitive=1, hash="ee6b3b702bfca7b3") -> Tensor[(128, 1024), uint8] {
    %2216 = reshape(%p0412, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2217 = transpose(%2216, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2218 = reshape(%2217, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2219 = cast(%2218, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2220 = multiply(0.0109596f /* ty=float32 */, %2219) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2221 = add(%2220, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2222 = floor(%2221) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2223 = cast(%2222, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2224 = clip(%2223, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2225 = cast(%2224, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2226 = reshape(%2225, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2227 = cast(%2226, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2228 = add(%2227, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2228, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3417 = %3416(%3415) /* ty=Tensor[(128, 1024), uint8] */;
  %3418 = fn (%p0411: Tensor[(128, 1024), uint8], %p1281: Tensor[(64, 256, 16, 4), int8], %p2186: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2215 = nn.contrib_dense_pack(%p0411, %p1281, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2215, %p2186) /* ty=Tensor[(128, 1024), int32] */
  };
  %3419 = %3418(%3417, meta[relay.Constant][124] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][125] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3420 = fn (%p0410: Tensor[(128, 1024), int32], %p1280: Tensor[(1024), int32], %p2185: Tensor[(1, 128, 1024), int8], Primitive=1, hash="31ce99f95081264a") -> Tensor[(1, 128, 1024), float32] {
    %2201 = reshape(%p0410, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2202 = add(%2201, %p1280) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2203 = clip(%2202, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2204 = cast(%2203, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2205 = multiply(0.0035612f /* ty=float32 */, %2204) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2206 = add(%2205, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2207 = floor(%2206) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2208 = cast(%2207, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2209 = clip(%2208, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2210 = cast(%2209, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2211 = cast(%2210, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2212 = cast(%p2185, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2213 = multiply(%2211, 0.00689865f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2214 = multiply(%2212, 0.0570178f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2213, %2214) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3421 = %3420(%3419, meta[relay.Constant][126] /* ty=Tensor[(1024), int32] */, %3355) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3422 = fn (%p0583: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0583, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3423 = %3422(%3421) /* ty=Tensor[(1, 128, 1), float32] */;
  %3424 = fn (%p0409: Tensor[(1, 128, 1024), float32], %p1279: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0409, %p1279) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3425 = %3424(%3421, %3423) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3426 = fn (%p0408: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2200 = power(%p0408, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2200, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3427 = %3426(%3425) /* ty=Tensor[(1, 128, 1), float32] */;
  %3428 = fn (%p0407: Tensor[(1, 128, 1), float32], %p1278: Tensor[(1, 128, 1024), float32], %p2184: Tensor[(1024), float32], %p337: Tensor[(1024), float32], Primitive=1, hash="762a54b2de357b25") -> Tensor[(1, 128, 1024), int8] {
    %2192 = add(%p0407, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2193 = sqrt(%2192) /* ty=Tensor[(1, 128, 1), float32] */;
    %2194 = divide(%p1278, %2193) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2195 = multiply(%2194, %p2184) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2196 = add(%2195, %p337) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2197 = divide(%2196, 0.342797f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2198 = clip(%2197, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2199 = round(%2198) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2199, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3429 = %3428(%3427, %3425, meta[relay.Constant][127] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][128] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3430 = fn (%p0406: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2189 = reshape(%p0406, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2190 = cast(%2189, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2191 = add(%2190, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2191, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3431 = %3430(%3429) /* ty=Tensor[(128, 1024), uint8] */;
  %3432 = fn (%p0405: Tensor[(128, 1024), uint8], %p1277: Tensor[(256, 256, 16, 4), int8], %p2183: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %2188 = nn.contrib_dense_pack(%p0405, %p1277, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%2188, %p2183) /* ty=Tensor[(128, 4096), int32] */
  };
  %3433 = %3432(%3431, meta[relay.Constant][129] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][130] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %3434 = fn (%p0404: Tensor[(128, 4096), int32], %p1276: Tensor[(4096), float32], Primitive=1, hash="f6f32f7c904d4a4c") -> Tensor[(128, 4096), uint8] {
    %2172 = reshape(%p0404, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %2173 = cast(%2172, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %2174 = multiply(%2173, 0.000703671f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2175 = add(%2174, %p1276) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2176 = divide(%2175, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2177 = erf(%2176) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2178 = multiply(%2175, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2179 = add(%2177, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2180 = multiply(%2178, %2179) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2181 = divide(%2180, 0.0360953f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2182 = clip(%2181, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2183 = round(%2182) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2184 = cast(%2183, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %2185 = reshape(%2184, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %2186 = cast(%2185, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %2187 = add(%2186, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%2187, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %3435 = %3434(%3433, meta[relay.Constant][131] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %3436 = fn (%p0403: Tensor[(128, 4096), uint8], %p1275: Tensor[(64, 1024, 16, 4), int8], %p2182: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2171 = nn.contrib_dense_pack(%p0403, %p1275, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2171, %p2182) /* ty=Tensor[(128, 1024), int32] */
  };
  %3437 = %3436(%3435, meta[relay.Constant][132] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][133] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3438 = fn (%p0402: Tensor[(128, 1024), int32], %p1274: Tensor[(1024), int32], %p2181: Tensor[(1, 128, 1024), int8], Primitive=1, hash="9394598b9dc4c855") -> Tensor[(1, 128, 1024), float32] {
    %2157 = reshape(%p0402, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2158 = add(%2157, %p1274) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2159 = clip(%2158, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2160 = cast(%2159, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2161 = multiply(0.0185721f /* ty=float32 */, %2160) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2162 = add(%2161, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2163 = floor(%2162) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2164 = cast(%2163, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2165 = clip(%2164, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2166 = cast(%2165, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2167 = cast(%2166, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2168 = cast(%p2181, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2169 = multiply(%2167, 0.0479473f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2170 = multiply(%2168, 0.342797f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2169, %2170) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3439 = %3438(%3437, meta[relay.Constant][134] /* ty=Tensor[(1024), int32] */, %3429) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3440 = fn (%p0584: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0584, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3441 = %3440(%3439) /* ty=Tensor[(1, 128, 1), float32] */;
  %3442 = fn (%p0401: Tensor[(1, 128, 1024), float32], %p1273: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0401, %p1273) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3443 = %3442(%3439, %3441) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3444 = fn (%p0400: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2156 = power(%p0400, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2156, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3445 = %3444(%3443) /* ty=Tensor[(1, 128, 1), float32] */;
  %3446 = fn (%p0399: Tensor[(1, 128, 1), float32], %p1272: Tensor[(1, 128, 1024), float32], %p2180: Tensor[(1024), float32], %p336: Tensor[(1024), float32], Primitive=1, hash="8fb20fee52c950d9") -> Tensor[(1, 128, 1024), int8] {
    %2148 = add(%p0399, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2149 = sqrt(%2148) /* ty=Tensor[(1, 128, 1), float32] */;
    %2150 = divide(%p1272, %2149) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2151 = multiply(%2150, %p2180) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2152 = add(%2151, %p336) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2153 = divide(%2152, 0.0376433f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2154 = clip(%2153, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2155 = round(%2154) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2155, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3447 = %3446(%3445, %3443, meta[relay.Constant][135] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][136] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3448 = fn (%p0398: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2145 = reshape(%p0398, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2146 = cast(%2145, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2147 = add(%2146, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2147, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3449 = %3448(%3447) /* ty=Tensor[(128, 1024), uint8] */;
  %3450 = fn (%p0397: Tensor[(128, 1024), uint8], %p1271: Tensor[(64, 256, 16, 4), int8], %p2179: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2144 = nn.contrib_dense_pack(%p0397, %p1271, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2144, %p2179) /* ty=Tensor[(128, 1024), int32] */
  };
  %3451 = %3450(%3449, meta[relay.Constant][137] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][138] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3452 = fn (%p0396: Tensor[(128, 1024), int32], %p1270: Tensor[(1024), int32], Primitive=1, hash="5a263e10459a738a") -> Tensor[(16, 128, 64), uint8] {
    %2128 = reshape(%p0396, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2129 = add(%2128, %p1270) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2130 = clip(%2129, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2131 = reshape(%2130, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2132 = transpose(%2131, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2133 = cast(%2132, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2134 = multiply(0.00379073f /* ty=float32 */, %2133) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2135 = add(%2134, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2136 = floor(%2135) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2137 = cast(%2136, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2138 = clip(%2137, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2139 = cast(%2138, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2140 = broadcast_to(%2139, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2141 = reshape(%2140, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %2142 = cast(%2141, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %2143 = add(%2142, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%2143, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %3468 = fn (%p0586: Tensor[(128, 1024), uint8], %p1390: Tensor[(64, 256, 16, 4), int8], %p2254: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3467 = nn.contrib_dense_pack(%p0586, %p1390, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3467, %p2254) /* ty=Tensor[(128, 1024), int32] */
  };
  %3469 = %3468(%3449, meta[relay.Constant][140] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][141] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3470 = fn (%p0585: Tensor[(128, 1024), int32], %p1389: Tensor[(1024), int32], Primitive=1, hash="6b044fc8390db17e") -> Tensor[(16, 128, 64), int8] {
    %3453 = reshape(%p0585, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3454 = add(%3453, %p1389) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3455 = clip(%3454, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3456 = reshape(%3455, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3457 = transpose(%3456, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3458 = cast(%3457, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3459 = multiply(0.00379073f /* ty=float32 */, %3458) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3460 = add(%3459, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3461 = floor(%3460) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3462 = cast(%3461, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3463 = clip(%3462, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3464 = cast(%3463, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3465 = broadcast_to(%3464, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3466 = reshape(%3465, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%3466, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %3472 = %3470(%3469, meta[relay.Constant][142] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %3473 = fn (%p0587: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %3471 = cast(%p0587, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%3471, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %3474 = %3452(%3451, meta[relay.Constant][139] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %3475 = %3473(%3472) /* ty=Tensor[(16, 128), int32] */;
  %3476 = fn (%p0395: Tensor[(16, 128, 64), uint8], %p1269: Tensor[(16, 128, 64), int8], %p2178: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %2125 = multiply(128 /* ty=int32 */, %p2178) /* ty=Tensor[(16, 128), int32] */;
    %2126 = nn.batch_matmul(%p0395, %p1269, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %2127 = expand_dims(%2125, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%2126, %2127) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %3477 = %3476(%3474, %3472, %3475) /* ty=Tensor[(16, 128, 128), int32] */;
  %3478 = fn (%p0394: Tensor[(16, 128, 128), int32], %p1268: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="50e4a041f941f209") -> Tensor[(1, 16, 128, 128), float32] {
    %2121 = reshape(%p0394, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %2122 = cast(%2121, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2123 = multiply(%2122, 0.00213611f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2124 = divide(%2123, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%2124, %p1268) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %3479 = %3478(%3477, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %3480 = fn (%p0393: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="b77675ba0fa500fa") -> Tensor[(1, 16, 128, 128), int8] {
    %2117 = nn.softmax(%p0393, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2118 = divide(%2117, 0.00385231f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2119 = clip(%2118, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2120 = round(%2119) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%2120, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %3481 = %3480(%3479) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %3482 = fn (%p0392: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %2113 = broadcast_to(%p0392, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %2114 = reshape(%2113, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %2115 = cast(%2114, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %2116 = add(%2115, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%2116, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %3498 = fn (%p0589: Tensor[(128, 1024), uint8], %p1392: Tensor[(64, 256, 16, 4), int8], %p2255: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3497 = nn.contrib_dense_pack(%p0589, %p1392, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3497, %p2255) /* ty=Tensor[(128, 1024), int32] */
  };
  %3499 = %3498(%3449, meta[relay.Constant][143] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][144] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3500 = fn (%p0588: Tensor[(128, 1024), int32], %p1391: Tensor[(1024), int32], Primitive=1, hash="576e19cad751fd52") -> Tensor[(16, 64, 128), int8] {
    %3483 = reshape(%p0588, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3484 = add(%3483, %p1391) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3485 = clip(%3484, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3486 = reshape(%3485, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3487 = transpose(%3486, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3488 = cast(%3487, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3489 = multiply(0.00379073f /* ty=float32 */, %3488) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3490 = add(%3489, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3491 = floor(%3490) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3492 = cast(%3491, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3493 = clip(%3492, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3494 = cast(%3493, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3495 = broadcast_to(%3494, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3496 = reshape(%3495, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%3496, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %3502 = %3500(%3499, meta[relay.Constant][145] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %3503 = fn (%p0590: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %3501 = cast(%p0590, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%3501, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %3504 = %3482(%3481) /* ty=Tensor[(16, 128, 128), uint8] */;
  %3505 = %3503(%3502) /* ty=Tensor[(16, 64), int32] */;
  %3506 = fn (%p0391: Tensor[(16, 128, 128), uint8], %p1267: Tensor[(16, 64, 128), int8], %p2177: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %2110 = multiply(128 /* ty=int32 */, %p2177) /* ty=Tensor[(16, 64), int32] */;
    %2111 = nn.batch_matmul(%p0391, %p1267, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %2112 = expand_dims(%2110, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%2111, %2112) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %3507 = %3506(%3504, %3502, %3505) /* ty=Tensor[(16, 128, 64), int32] */;
  %3508 = fn (%p0390: Tensor[(16, 128, 64), int32], Primitive=1, hash="745dd99b14c59a14") -> Tensor[(128, 1024), uint8] {
    %2097 = reshape(%p0390, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2098 = transpose(%2097, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2099 = reshape(%2098, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2100 = cast(%2099, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2101 = multiply(0.0151456f /* ty=float32 */, %2100) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2102 = add(%2101, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2103 = floor(%2102) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2104 = cast(%2103, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2105 = clip(%2104, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2106 = cast(%2105, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2107 = reshape(%2106, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2108 = cast(%2107, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2109 = add(%2108, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2109, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3509 = %3508(%3507) /* ty=Tensor[(128, 1024), uint8] */;
  %3510 = fn (%p0389: Tensor[(128, 1024), uint8], %p1266: Tensor[(64, 256, 16, 4), int8], %p2176: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2096 = nn.contrib_dense_pack(%p0389, %p1266, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2096, %p2176) /* ty=Tensor[(128, 1024), int32] */
  };
  %3511 = %3510(%3509, meta[relay.Constant][146] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][147] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3512 = fn (%p0388: Tensor[(128, 1024), int32], %p1265: Tensor[(1024), int32], %p2175: Tensor[(1, 128, 1024), int8], Primitive=1, hash="8b4394a99d04d026") -> Tensor[(1, 128, 1024), float32] {
    %2082 = reshape(%p0388, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2083 = add(%2082, %p1265) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2084 = clip(%2083, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2085 = cast(%2084, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2086 = multiply(0.00341177f /* ty=float32 */, %2085) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2087 = add(%2086, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2088 = floor(%2087) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2089 = cast(%2088, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2090 = clip(%2089, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2091 = cast(%2090, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2092 = cast(%2091, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2093 = cast(%p2175, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2094 = multiply(%2092, 0.00779474f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2095 = multiply(%2093, 0.0376433f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2094, %2095) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3513 = %3512(%3511, meta[relay.Constant][148] /* ty=Tensor[(1024), int32] */, %3447) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3514 = fn (%p0591: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0591, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3515 = %3514(%3513) /* ty=Tensor[(1, 128, 1), float32] */;
  %3516 = fn (%p0387: Tensor[(1, 128, 1024), float32], %p1264: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0387, %p1264) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3517 = %3516(%3513, %3515) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3518 = fn (%p0386: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2081 = power(%p0386, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2081, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3519 = %3518(%3517) /* ty=Tensor[(1, 128, 1), float32] */;
  %3520 = fn (%p0385: Tensor[(1, 128, 1), float32], %p1263: Tensor[(1, 128, 1024), float32], %p2174: Tensor[(1024), float32], %p335: Tensor[(1024), float32], Primitive=1, hash="9916ccbf644359d0") -> Tensor[(1, 128, 1024), int8] {
    %2073 = add(%p0385, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2074 = sqrt(%2073) /* ty=Tensor[(1, 128, 1), float32] */;
    %2075 = divide(%p1263, %2074) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2076 = multiply(%2075, %p2174) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2077 = add(%2076, %p335) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2078 = divide(%2077, 0.308393f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2079 = clip(%2078, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2080 = round(%2079) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2080, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3521 = %3520(%3519, %3517, meta[relay.Constant][149] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][150] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3522 = fn (%p0384: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2070 = reshape(%p0384, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2071 = cast(%2070, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2072 = add(%2071, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2072, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3523 = %3522(%3521) /* ty=Tensor[(128, 1024), uint8] */;
  %3524 = fn (%p0383: Tensor[(128, 1024), uint8], %p1262: Tensor[(256, 256, 16, 4), int8], %p2173: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %2069 = nn.contrib_dense_pack(%p0383, %p1262, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%2069, %p2173) /* ty=Tensor[(128, 4096), int32] */
  };
  %3525 = %3524(%3523, meta[relay.Constant][151] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][152] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %3526 = fn (%p0382: Tensor[(128, 4096), int32], %p1261: Tensor[(4096), float32], Primitive=1, hash="6676d49332243d33") -> Tensor[(128, 4096), uint8] {
    %2053 = reshape(%p0382, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %2054 = cast(%2053, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %2055 = multiply(%2054, 0.000696408f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2056 = add(%2055, %p1261) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2057 = divide(%2056, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2058 = erf(%2057) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2059 = multiply(%2056, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2060 = add(%2058, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2061 = multiply(%2059, %2060) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2062 = divide(%2061, 0.0305913f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2063 = clip(%2062, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2064 = round(%2063) /* ty=Tensor[(1, 128, 4096), float32] */;
    %2065 = cast(%2064, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %2066 = reshape(%2065, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %2067 = cast(%2066, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %2068 = add(%2067, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%2068, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %3527 = %3526(%3525, meta[relay.Constant][153] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %3528 = fn (%p0381: Tensor[(128, 4096), uint8], %p1260: Tensor[(64, 1024, 16, 4), int8], %p2172: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2052 = nn.contrib_dense_pack(%p0381, %p1260, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2052, %p2172) /* ty=Tensor[(128, 1024), int32] */
  };
  %3529 = %3528(%3527, meta[relay.Constant][154] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][155] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3530 = fn (%p0380: Tensor[(128, 1024), int32], %p1259: Tensor[(1024), int32], %p2171: Tensor[(1, 128, 1024), int8], Primitive=1, hash="60900ea9f2cbeada") -> Tensor[(1, 128, 1024), float32] {
    %2038 = reshape(%p0380, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2039 = add(%2038, %p1259) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2040 = clip(%2039, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2041 = cast(%2040, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2042 = multiply(0.00308434f /* ty=float32 */, %2041) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2043 = add(%2042, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2044 = floor(%2043) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2045 = cast(%2044, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %2046 = clip(%2045, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2047 = cast(%2046, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %2048 = cast(%2047, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2049 = cast(%p2171, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %2050 = multiply(%2048, 0.281755f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2051 = multiply(%2049, 0.308393f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%2050, %2051) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3531 = %3530(%3529, meta[relay.Constant][156] /* ty=Tensor[(1024), int32] */, %3521) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3532 = fn (%p0592: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0592, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3533 = %3532(%3531) /* ty=Tensor[(1, 128, 1), float32] */;
  %3534 = fn (%p0379: Tensor[(1, 128, 1024), float32], %p1258: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0379, %p1258) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3535 = %3534(%3531, %3533) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3536 = fn (%p0378: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %2037 = power(%p0378, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%2037, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3537 = %3536(%3535) /* ty=Tensor[(1, 128, 1), float32] */;
  %3538 = fn (%p0377: Tensor[(1, 128, 1), float32], %p1257: Tensor[(1, 128, 1024), float32], %p2170: Tensor[(1024), float32], %p334: Tensor[(1024), float32], Primitive=1, hash="f5377df0b647f3bc") -> Tensor[(1, 128, 1024), int8] {
    %2029 = add(%p0377, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2030 = sqrt(%2029) /* ty=Tensor[(1, 128, 1), float32] */;
    %2031 = divide(%p1257, %2030) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2032 = multiply(%2031, %p2170) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2033 = add(%2032, %p334) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2034 = divide(%2033, 0.0786346f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2035 = clip(%2034, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %2036 = round(%2035) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%2036, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3539 = %3538(%3537, %3535, meta[relay.Constant][157] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][158] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3540 = fn (%p0376: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %2026 = reshape(%p0376, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %2027 = cast(%2026, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %2028 = add(%2027, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%2028, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3541 = %3540(%3539) /* ty=Tensor[(128, 1024), uint8] */;
  %3542 = fn (%p0375: Tensor[(128, 1024), uint8], %p1256: Tensor[(64, 256, 16, 4), int8], %p2169: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %2025 = nn.contrib_dense_pack(%p0375, %p1256, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%2025, %p2169) /* ty=Tensor[(128, 1024), int32] */
  };
  %3543 = %3542(%3541, meta[relay.Constant][159] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][160] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3544 = fn (%p0374: Tensor[(128, 1024), int32], %p1255: Tensor[(1024), int32], Primitive=1, hash="515e26be9441fca9") -> Tensor[(16, 128, 64), uint8] {
    %2009 = reshape(%p0374, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2010 = add(%2009, %p1255) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2011 = clip(%2010, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %2012 = reshape(%2011, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %2013 = transpose(%2012, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2014 = cast(%2013, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2015 = multiply(0.00504965f /* ty=float32 */, %2014) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2016 = add(%2015, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2017 = floor(%2016) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %2018 = cast(%2017, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2019 = clip(%2018, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %2020 = cast(%2019, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2021 = broadcast_to(%2020, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %2022 = reshape(%2021, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %2023 = cast(%2022, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %2024 = add(%2023, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%2024, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %3560 = fn (%p0594: Tensor[(128, 1024), uint8], %p1394: Tensor[(64, 256, 16, 4), int8], %p2256: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3559 = nn.contrib_dense_pack(%p0594, %p1394, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3559, %p2256) /* ty=Tensor[(128, 1024), int32] */
  };
  %3561 = %3560(%3541, meta[relay.Constant][162] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][163] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3562 = fn (%p0593: Tensor[(128, 1024), int32], %p1393: Tensor[(1024), int32], Primitive=1, hash="dfde72fcd00480c4") -> Tensor[(16, 128, 64), int8] {
    %3545 = reshape(%p0593, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3546 = add(%3545, %p1393) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3547 = clip(%3546, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3548 = reshape(%3547, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3549 = transpose(%3548, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3550 = cast(%3549, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3551 = multiply(0.00504965f /* ty=float32 */, %3550) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3552 = add(%3551, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3553 = floor(%3552) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3554 = cast(%3553, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3555 = clip(%3554, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3556 = cast(%3555, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3557 = broadcast_to(%3556, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3558 = reshape(%3557, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%3558, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %3564 = %3562(%3561, meta[relay.Constant][164] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %3565 = fn (%p0595: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %3563 = cast(%p0595, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%3563, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %3566 = %3544(%3543, meta[relay.Constant][161] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %3567 = %3565(%3564) /* ty=Tensor[(16, 128), int32] */;
  %3568 = fn (%p0373: Tensor[(16, 128, 64), uint8], %p1254: Tensor[(16, 128, 64), int8], %p2168: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %2006 = multiply(128 /* ty=int32 */, %p2168) /* ty=Tensor[(16, 128), int32] */;
    %2007 = nn.batch_matmul(%p0373, %p1254, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %2008 = expand_dims(%2006, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%2007, %2008) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %3569 = %3568(%3566, %3564, %3567) /* ty=Tensor[(16, 128, 128), int32] */;
  %3570 = fn (%p0372: Tensor[(16, 128, 128), int32], %p1253: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="3e87b09275f13de7") -> Tensor[(1, 16, 128, 128), float32] {
    %2002 = reshape(%p0372, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %2003 = cast(%2002, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2004 = multiply(%2003, 0.00213861f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2005 = divide(%2004, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%2005, %p1253) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %3571 = %3570(%3569, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %3572 = fn (%p0371: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="09b9720ba25c09ae") -> Tensor[(1, 16, 128, 128), int8] {
    %1998 = nn.softmax(%p0371, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1999 = divide(%1998, 0.0039589f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2000 = clip(%1999, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %2001 = round(%2000) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%2001, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %3573 = %3572(%3571) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %3574 = fn (%p0370: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %1994 = broadcast_to(%p0370, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %1995 = reshape(%1994, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %1996 = cast(%1995, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %1997 = add(%1996, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%1997, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %3590 = fn (%p0597: Tensor[(128, 1024), uint8], %p1396: Tensor[(64, 256, 16, 4), int8], %p2257: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3589 = nn.contrib_dense_pack(%p0597, %p1396, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3589, %p2257) /* ty=Tensor[(128, 1024), int32] */
  };
  %3591 = %3590(%3541, meta[relay.Constant][165] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][166] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3592 = fn (%p0596: Tensor[(128, 1024), int32], %p1395: Tensor[(1024), int32], Primitive=1, hash="7f3f46c1506d9ddd") -> Tensor[(16, 64, 128), int8] {
    %3575 = reshape(%p0596, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3576 = add(%3575, %p1395) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3577 = clip(%3576, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3578 = reshape(%3577, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3579 = transpose(%3578, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3580 = cast(%3579, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3581 = multiply(0.00504965f /* ty=float32 */, %3580) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3582 = add(%3581, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3583 = floor(%3582) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3584 = cast(%3583, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3585 = clip(%3584, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3586 = cast(%3585, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3587 = broadcast_to(%3586, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3588 = reshape(%3587, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%3588, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %3594 = %3592(%3591, meta[relay.Constant][167] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %3595 = fn (%p0598: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %3593 = cast(%p0598, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%3593, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %3596 = %3574(%3573) /* ty=Tensor[(16, 128, 128), uint8] */;
  %3597 = %3595(%3594) /* ty=Tensor[(16, 64), int32] */;
  %3598 = fn (%p0369: Tensor[(16, 128, 128), uint8], %p1252: Tensor[(16, 64, 128), int8], %p2167: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %1991 = multiply(128 /* ty=int32 */, %p2167) /* ty=Tensor[(16, 64), int32] */;
    %1992 = nn.batch_matmul(%p0369, %p1252, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %1993 = expand_dims(%1991, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%1992, %1993) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %3599 = %3598(%3596, %3594, %3597) /* ty=Tensor[(16, 128, 64), int32] */;
  %3600 = fn (%p0368: Tensor[(16, 128, 64), int32], Primitive=1, hash="818f38eb7d3cc32c") -> Tensor[(128, 1024), uint8] {
    %1978 = reshape(%p0368, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1979 = transpose(%1978, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1980 = reshape(%1979, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1981 = cast(%1980, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1982 = multiply(0.0152591f /* ty=float32 */, %1981) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1983 = add(%1982, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1984 = floor(%1983) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1985 = cast(%1984, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1986 = clip(%1985, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1987 = cast(%1986, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1988 = reshape(%1987, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1989 = cast(%1988, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1990 = add(%1989, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1990, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3601 = %3600(%3599) /* ty=Tensor[(128, 1024), uint8] */;
  %3602 = fn (%p0367: Tensor[(128, 1024), uint8], %p1251: Tensor[(64, 256, 16, 4), int8], %p2166: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1977 = nn.contrib_dense_pack(%p0367, %p1251, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1977, %p2166) /* ty=Tensor[(128, 1024), int32] */
  };
  %3603 = %3602(%3601, meta[relay.Constant][168] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][169] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3604 = fn (%p0366: Tensor[(128, 1024), int32], %p1250: Tensor[(1024), int32], %p2165: Tensor[(1, 128, 1024), int8], Primitive=1, hash="fc546beb13b073d1") -> Tensor[(1, 128, 1024), float32] {
    %1963 = reshape(%p0366, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1964 = add(%1963, %p1250) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1965 = clip(%1964, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1966 = cast(%1965, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1967 = multiply(0.00308418f /* ty=float32 */, %1966) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1968 = add(%1967, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1969 = floor(%1968) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1970 = cast(%1969, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1971 = clip(%1970, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1972 = cast(%1971, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1973 = cast(%1972, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1974 = cast(%p2165, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1975 = multiply(%1973, 0.00774295f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1976 = multiply(%1974, 0.0786346f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1975, %1976) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3605 = %3604(%3603, meta[relay.Constant][170] /* ty=Tensor[(1024), int32] */, %3539) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3606 = fn (%p0599: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0599, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3607 = %3606(%3605) /* ty=Tensor[(1, 128, 1), float32] */;
  %3608 = fn (%p0365: Tensor[(1, 128, 1024), float32], %p1249: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0365, %p1249) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3609 = %3608(%3605, %3607) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3610 = fn (%p0364: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1962 = power(%p0364, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1962, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3611 = %3610(%3609) /* ty=Tensor[(1, 128, 1), float32] */;
  %3612 = fn (%p0363: Tensor[(1, 128, 1), float32], %p1248: Tensor[(1, 128, 1024), float32], %p2164: Tensor[(1024), float32], %p333: Tensor[(1024), float32], Primitive=1, hash="c507c839958533dc") -> Tensor[(1, 128, 1024), int8] {
    %1954 = add(%p0363, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1955 = sqrt(%1954) /* ty=Tensor[(1, 128, 1), float32] */;
    %1956 = divide(%p1248, %1955) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1957 = multiply(%1956, %p2164) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1958 = add(%1957, %p333) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1959 = divide(%1958, 0.391564f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1960 = clip(%1959, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1961 = round(%1960) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1961, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3613 = %3612(%3611, %3609, meta[relay.Constant][171] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][172] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3614 = fn (%p0362: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1951 = reshape(%p0362, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1952 = cast(%1951, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1953 = add(%1952, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1953, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3615 = %3614(%3613) /* ty=Tensor[(128, 1024), uint8] */;
  %3616 = fn (%p0361: Tensor[(128, 1024), uint8], %p1247: Tensor[(256, 256, 16, 4), int8], %p2163: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %1950 = nn.contrib_dense_pack(%p0361, %p1247, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%1950, %p2163) /* ty=Tensor[(128, 4096), int32] */
  };
  %3617 = %3616(%3615, meta[relay.Constant][173] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][174] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %3618 = fn (%p0360: Tensor[(128, 4096), int32], %p1246: Tensor[(4096), float32], Primitive=1, hash="7dccc996b9f30037") -> Tensor[(128, 4096), uint8] {
    %1934 = reshape(%p0360, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %1935 = cast(%1934, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %1936 = multiply(%1935, 0.000803569f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1937 = add(%1936, %p1246) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1938 = divide(%1937, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1939 = erf(%1938) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1940 = multiply(%1937, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1941 = add(%1939, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1942 = multiply(%1940, %1941) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1943 = divide(%1942, 0.0300526f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1944 = clip(%1943, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1945 = round(%1944) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1946 = cast(%1945, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %1947 = reshape(%1946, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %1948 = cast(%1947, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %1949 = add(%1948, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%1949, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %3619 = %3618(%3617, meta[relay.Constant][175] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %3620 = fn (%p0359: Tensor[(128, 4096), uint8], %p1245: Tensor[(64, 1024, 16, 4), int8], %p2162: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1933 = nn.contrib_dense_pack(%p0359, %p1245, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1933, %p2162) /* ty=Tensor[(128, 1024), int32] */
  };
  %3621 = %3620(%3619, meta[relay.Constant][176] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][177] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3622 = fn (%p0358: Tensor[(128, 1024), int32], %p1244: Tensor[(1024), int32], %p2161: Tensor[(1, 128, 1024), int8], Primitive=1, hash="a13cd41347aa5b36") -> Tensor[(1, 128, 1024), float32] {
    %1919 = reshape(%p0358, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1920 = add(%1919, %p1244) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1921 = clip(%1920, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1922 = cast(%1921, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1923 = multiply(0.00221246f /* ty=float32 */, %1922) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1924 = add(%1923, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1925 = floor(%1924) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1926 = cast(%1925, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1927 = clip(%1926, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1928 = cast(%1927, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1929 = cast(%1928, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1930 = cast(%p2161, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1931 = multiply(%1929, 0.303068f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1932 = multiply(%1930, 0.391564f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1931, %1932) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3623 = %3622(%3621, meta[relay.Constant][178] /* ty=Tensor[(1024), int32] */, %3613) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3624 = fn (%p0600: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0600, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3625 = %3624(%3623) /* ty=Tensor[(1, 128, 1), float32] */;
  %3626 = fn (%p0357: Tensor[(1, 128, 1024), float32], %p1243: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0357, %p1243) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3627 = %3626(%3623, %3625) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3628 = fn (%p0356: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1918 = power(%p0356, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1918, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3629 = %3628(%3627) /* ty=Tensor[(1, 128, 1), float32] */;
  %3630 = fn (%p0355: Tensor[(1, 128, 1), float32], %p1242: Tensor[(1, 128, 1024), float32], %p2160: Tensor[(1024), float32], %p332: Tensor[(1024), float32], Primitive=1, hash="724378cb4e7c2abb") -> Tensor[(1, 128, 1024), int8] {
    %1910 = add(%p0355, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1911 = sqrt(%1910) /* ty=Tensor[(1, 128, 1), float32] */;
    %1912 = divide(%p1242, %1911) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1913 = multiply(%1912, %p2160) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1914 = add(%1913, %p332) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1915 = divide(%1914, 0.0886639f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1916 = clip(%1915, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1917 = round(%1916) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1917, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3631 = %3630(%3629, %3627, meta[relay.Constant][179] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][180] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3632 = fn (%p0354: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1907 = reshape(%p0354, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1908 = cast(%1907, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1909 = add(%1908, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1909, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3633 = %3632(%3631) /* ty=Tensor[(128, 1024), uint8] */;
  %3634 = fn (%p0353: Tensor[(128, 1024), uint8], %p1241: Tensor[(64, 256, 16, 4), int8], %p2159: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1906 = nn.contrib_dense_pack(%p0353, %p1241, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1906, %p2159) /* ty=Tensor[(128, 1024), int32] */
  };
  %3635 = %3634(%3633, meta[relay.Constant][181] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][182] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3636 = fn (%p0352: Tensor[(128, 1024), int32], %p1240: Tensor[(1024), int32], Primitive=1, hash="519b90b08018776d") -> Tensor[(16, 128, 64), uint8] {
    %1890 = reshape(%p0352, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1891 = add(%1890, %p1240) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1892 = clip(%1891, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1893 = reshape(%1892, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1894 = transpose(%1893, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1895 = cast(%1894, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1896 = multiply(0.00795595f /* ty=float32 */, %1895) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1897 = add(%1896, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1898 = floor(%1897) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1899 = cast(%1898, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1900 = clip(%1899, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1901 = cast(%1900, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1902 = broadcast_to(%1901, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1903 = reshape(%1902, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %1904 = cast(%1903, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %1905 = add(%1904, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%1905, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %3652 = fn (%p0602: Tensor[(128, 1024), uint8], %p1398: Tensor[(64, 256, 16, 4), int8], %p2258: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3651 = nn.contrib_dense_pack(%p0602, %p1398, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3651, %p2258) /* ty=Tensor[(128, 1024), int32] */
  };
  %3653 = %3652(%3633, meta[relay.Constant][184] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][185] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3654 = fn (%p0601: Tensor[(128, 1024), int32], %p1397: Tensor[(1024), int32], Primitive=1, hash="96dba260cec98028") -> Tensor[(16, 128, 64), int8] {
    %3637 = reshape(%p0601, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3638 = add(%3637, %p1397) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3639 = clip(%3638, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3640 = reshape(%3639, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3641 = transpose(%3640, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3642 = cast(%3641, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3643 = multiply(0.00795595f /* ty=float32 */, %3642) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3644 = add(%3643, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3645 = floor(%3644) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3646 = cast(%3645, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3647 = clip(%3646, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3648 = cast(%3647, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3649 = broadcast_to(%3648, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3650 = reshape(%3649, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%3650, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %3656 = %3654(%3653, meta[relay.Constant][186] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %3657 = fn (%p0603: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %3655 = cast(%p0603, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%3655, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %3658 = %3636(%3635, meta[relay.Constant][183] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %3659 = %3657(%3656) /* ty=Tensor[(16, 128), int32] */;
  %3660 = fn (%p0351: Tensor[(16, 128, 64), uint8], %p1239: Tensor[(16, 128, 64), int8], %p2158: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %1887 = multiply(128 /* ty=int32 */, %p2158) /* ty=Tensor[(16, 128), int32] */;
    %1888 = nn.batch_matmul(%p0351, %p1239, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %1889 = expand_dims(%1887, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%1888, %1889) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %3661 = %3660(%3658, %3656, %3659) /* ty=Tensor[(16, 128, 128), int32] */;
  %3662 = fn (%p0350: Tensor[(16, 128, 128), int32], %p1238: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="8383ea03a0b33c3b") -> Tensor[(1, 16, 128, 128), float32] {
    %1883 = reshape(%p0350, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %1884 = cast(%1883, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1885 = multiply(%1884, 0.001807f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1886 = divide(%1885, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%1886, %p1238) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %3663 = %3662(%3661, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %3664 = fn (%p0349: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="117e05b102c75d76") -> Tensor[(1, 16, 128, 128), int8] {
    %1879 = nn.softmax(%p0349, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1880 = divide(%1879, 0.00459393f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1881 = clip(%1880, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1882 = round(%1881) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%1882, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %3665 = %3664(%3663) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %3666 = fn (%p0348: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %1875 = broadcast_to(%p0348, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %1876 = reshape(%1875, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %1877 = cast(%1876, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %1878 = add(%1877, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%1878, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %3682 = fn (%p0605: Tensor[(128, 1024), uint8], %p1400: Tensor[(64, 256, 16, 4), int8], %p2259: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3681 = nn.contrib_dense_pack(%p0605, %p1400, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3681, %p2259) /* ty=Tensor[(128, 1024), int32] */
  };
  %3683 = %3682(%3633, meta[relay.Constant][187] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][188] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3684 = fn (%p0604: Tensor[(128, 1024), int32], %p1399: Tensor[(1024), int32], Primitive=1, hash="1c7f1328115e401d") -> Tensor[(16, 64, 128), int8] {
    %3667 = reshape(%p0604, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3668 = add(%3667, %p1399) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3669 = clip(%3668, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3670 = reshape(%3669, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3671 = transpose(%3670, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3672 = cast(%3671, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3673 = multiply(0.00795595f /* ty=float32 */, %3672) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3674 = add(%3673, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3675 = floor(%3674) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3676 = cast(%3675, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3677 = clip(%3676, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3678 = cast(%3677, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3679 = broadcast_to(%3678, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3680 = reshape(%3679, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%3680, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %3686 = %3684(%3683, meta[relay.Constant][189] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %3687 = fn (%p0606: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %3685 = cast(%p0606, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%3685, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %3688 = %3666(%3665) /* ty=Tensor[(16, 128, 128), uint8] */;
  %3689 = %3687(%3686) /* ty=Tensor[(16, 64), int32] */;
  %3690 = fn (%p0347: Tensor[(16, 128, 128), uint8], %p1237: Tensor[(16, 64, 128), int8], %p2157: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %1872 = multiply(128 /* ty=int32 */, %p2157) /* ty=Tensor[(16, 64), int32] */;
    %1873 = nn.batch_matmul(%p0347, %p1237, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %1874 = expand_dims(%1872, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%1873, %1874) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %3691 = %3690(%3688, %3686, %3689) /* ty=Tensor[(16, 128, 64), int32] */;
  %3692 = fn (%p0346: Tensor[(16, 128, 64), int32], Primitive=1, hash="d03133e63b1cab0c") -> Tensor[(128, 1024), uint8] {
    %1859 = reshape(%p0346, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1860 = transpose(%1859, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1861 = reshape(%1860, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1862 = cast(%1861, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1863 = multiply(0.0159937f /* ty=float32 */, %1862) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1864 = add(%1863, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1865 = floor(%1864) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1866 = cast(%1865, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1867 = clip(%1866, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1868 = cast(%1867, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1869 = reshape(%1868, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1870 = cast(%1869, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1871 = add(%1870, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1871, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3693 = %3692(%3691) /* ty=Tensor[(128, 1024), uint8] */;
  %3694 = fn (%p0345: Tensor[(128, 1024), uint8], %p1236: Tensor[(64, 256, 16, 4), int8], %p2156: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1858 = nn.contrib_dense_pack(%p0345, %p1236, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1858, %p2156) /* ty=Tensor[(128, 1024), int32] */
  };
  %3695 = %3694(%3693, meta[relay.Constant][190] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][191] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3696 = fn (%p0344: Tensor[(128, 1024), int32], %p1235: Tensor[(1024), int32], %p2155: Tensor[(1, 128, 1024), int8], Primitive=1, hash="51f1a449125410f7") -> Tensor[(1, 128, 1024), float32] {
    %1844 = reshape(%p0344, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1845 = add(%1844, %p1235) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1846 = clip(%1845, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1847 = cast(%1846, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1848 = multiply(0.00619742f /* ty=float32 */, %1847) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1849 = add(%1848, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1850 = floor(%1849) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1851 = cast(%1850, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1852 = clip(%1851, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1853 = cast(%1852, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1854 = cast(%1853, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1855 = cast(%p2155, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1856 = multiply(%1854, 0.00903966f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1857 = multiply(%1855, 0.0886639f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1856, %1857) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3697 = %3696(%3695, meta[relay.Constant][192] /* ty=Tensor[(1024), int32] */, %3631) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3698 = fn (%p0607: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0607, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3699 = %3698(%3697) /* ty=Tensor[(1, 128, 1), float32] */;
  %3700 = fn (%p0343: Tensor[(1, 128, 1024), float32], %p1234: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0343, %p1234) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3701 = %3700(%3697, %3699) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3702 = fn (%p0342: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1843 = power(%p0342, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1843, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3703 = %3702(%3701) /* ty=Tensor[(1, 128, 1), float32] */;
  %3704 = fn (%p0341: Tensor[(1, 128, 1), float32], %p1233: Tensor[(1, 128, 1024), float32], %p2154: Tensor[(1024), float32], %p331: Tensor[(1024), float32], Primitive=1, hash="c825eb78d95f61b5") -> Tensor[(1, 128, 1024), int8] {
    %1835 = add(%p0341, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1836 = sqrt(%1835) /* ty=Tensor[(1, 128, 1), float32] */;
    %1837 = divide(%p1233, %1836) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1838 = multiply(%1837, %p2154) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1839 = add(%1838, %p331) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1840 = divide(%1839, 0.501616f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1841 = clip(%1840, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1842 = round(%1841) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1842, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3705 = %3704(%3703, %3701, meta[relay.Constant][193] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][194] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3706 = fn (%p0340: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1832 = reshape(%p0340, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1833 = cast(%1832, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1834 = add(%1833, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1834, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3707 = %3706(%3705) /* ty=Tensor[(128, 1024), uint8] */;
  %3708 = fn (%p0339: Tensor[(128, 1024), uint8], %p1232: Tensor[(256, 256, 16, 4), int8], %p2153: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %1831 = nn.contrib_dense_pack(%p0339, %p1232, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%1831, %p2153) /* ty=Tensor[(128, 4096), int32] */
  };
  %3709 = %3708(%3707, meta[relay.Constant][195] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][196] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %3710 = fn (%p0338: Tensor[(128, 4096), int32], %p1231: Tensor[(4096), float32], Primitive=1, hash="c0b96c14d3bdd67b") -> Tensor[(128, 4096), uint8] {
    %1815 = reshape(%p0338, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %1816 = cast(%1815, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %1817 = multiply(%1816, 0.0011071f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1818 = add(%1817, %p1231) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1819 = divide(%1818, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1820 = erf(%1819) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1821 = multiply(%1818, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1822 = add(%1820, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1823 = multiply(%1821, %1822) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1824 = divide(%1823, 0.0257185f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1825 = clip(%1824, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1826 = round(%1825) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1827 = cast(%1826, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %1828 = reshape(%1827, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %1829 = cast(%1828, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %1830 = add(%1829, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%1830, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %3711 = %3710(%3709, meta[relay.Constant][197] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %3712 = fn (%p0337: Tensor[(128, 4096), uint8], %p1230: Tensor[(64, 1024, 16, 4), int8], %p2152: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1814 = nn.contrib_dense_pack(%p0337, %p1230, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1814, %p2152) /* ty=Tensor[(128, 1024), int32] */
  };
  %3713 = %3712(%3711, meta[relay.Constant][198] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][199] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3714 = fn (%p0336: Tensor[(128, 1024), int32], %p1229: Tensor[(1024), int32], %p2151: Tensor[(1, 128, 1024), int8], Primitive=1, hash="ede5c0b268845db9") -> Tensor[(1, 128, 1024), float32] {
    %1800 = reshape(%p0336, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1801 = add(%1800, %p1229) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1802 = clip(%1801, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1803 = cast(%1802, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1804 = multiply(0.011384f /* ty=float32 */, %1803) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1805 = add(%1804, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1806 = floor(%1805) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1807 = cast(%1806, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1808 = clip(%1807, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1809 = cast(%1808, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1810 = cast(%1809, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1811 = cast(%p2151, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1812 = multiply(%1810, 0.0416904f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1813 = multiply(%1811, 0.501616f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1812, %1813) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3715 = %3714(%3713, meta[relay.Constant][200] /* ty=Tensor[(1024), int32] */, %3705) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3716 = fn (%p0608: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0608, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3717 = %3716(%3715) /* ty=Tensor[(1, 128, 1), float32] */;
  %3718 = fn (%p0335: Tensor[(1, 128, 1024), float32], %p1228: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0335, %p1228) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3719 = %3718(%3715, %3717) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3720 = fn (%p0334: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1799 = power(%p0334, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1799, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3721 = %3720(%3719) /* ty=Tensor[(1, 128, 1), float32] */;
  %3722 = fn (%p0333: Tensor[(1, 128, 1), float32], %p1227: Tensor[(1, 128, 1024), float32], %p2150: Tensor[(1024), float32], %p330: Tensor[(1024), float32], Primitive=1, hash="77f2e048af0b622d") -> Tensor[(1, 128, 1024), int8] {
    %1791 = add(%p0333, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1792 = sqrt(%1791) /* ty=Tensor[(1, 128, 1), float32] */;
    %1793 = divide(%p1227, %1792) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1794 = multiply(%1793, %p2150) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1795 = add(%1794, %p330) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1796 = divide(%1795, 0.12236f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1797 = clip(%1796, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1798 = round(%1797) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1798, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3723 = %3722(%3721, %3719, meta[relay.Constant][201] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][202] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3724 = fn (%p0332: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1788 = reshape(%p0332, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1789 = cast(%1788, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1790 = add(%1789, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1790, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3725 = %3724(%3723) /* ty=Tensor[(128, 1024), uint8] */;
  %3726 = fn (%p0331: Tensor[(128, 1024), uint8], %p1226: Tensor[(64, 256, 16, 4), int8], %p2149: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1787 = nn.contrib_dense_pack(%p0331, %p1226, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1787, %p2149) /* ty=Tensor[(128, 1024), int32] */
  };
  %3727 = %3726(%3725, meta[relay.Constant][203] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][204] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3728 = fn (%p0330: Tensor[(128, 1024), int32], %p1225: Tensor[(1024), int32], Primitive=1, hash="8c0336ce56bfcb08") -> Tensor[(16, 128, 64), uint8] {
    %1771 = reshape(%p0330, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1772 = add(%1771, %p1225) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1773 = clip(%1772, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1774 = reshape(%1773, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1775 = transpose(%1774, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1776 = cast(%1775, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1777 = multiply(0.00538294f /* ty=float32 */, %1776) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1778 = add(%1777, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1779 = floor(%1778) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1780 = cast(%1779, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1781 = clip(%1780, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1782 = cast(%1781, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1783 = broadcast_to(%1782, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1784 = reshape(%1783, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %1785 = cast(%1784, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %1786 = add(%1785, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%1786, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %3744 = fn (%p0610: Tensor[(128, 1024), uint8], %p1402: Tensor[(64, 256, 16, 4), int8], %p2260: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3743 = nn.contrib_dense_pack(%p0610, %p1402, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3743, %p2260) /* ty=Tensor[(128, 1024), int32] */
  };
  %3745 = %3744(%3725, meta[relay.Constant][206] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][207] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3746 = fn (%p0609: Tensor[(128, 1024), int32], %p1401: Tensor[(1024), int32], Primitive=1, hash="88504ba64ffd5383") -> Tensor[(16, 128, 64), int8] {
    %3729 = reshape(%p0609, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3730 = add(%3729, %p1401) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3731 = clip(%3730, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3732 = reshape(%3731, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3733 = transpose(%3732, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3734 = cast(%3733, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3735 = multiply(0.00538294f /* ty=float32 */, %3734) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3736 = add(%3735, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3737 = floor(%3736) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3738 = cast(%3737, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3739 = clip(%3738, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3740 = cast(%3739, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3741 = broadcast_to(%3740, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3742 = reshape(%3741, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%3742, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %3748 = %3746(%3745, meta[relay.Constant][208] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %3749 = fn (%p0611: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %3747 = cast(%p0611, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%3747, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %3750 = %3728(%3727, meta[relay.Constant][205] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %3751 = %3749(%3748) /* ty=Tensor[(16, 128), int32] */;
  %3752 = fn (%p0329: Tensor[(16, 128, 64), uint8], %p1224: Tensor[(16, 128, 64), int8], %p2148: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %1768 = multiply(128 /* ty=int32 */, %p2148) /* ty=Tensor[(16, 128), int32] */;
    %1769 = nn.batch_matmul(%p0329, %p1224, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %1770 = expand_dims(%1768, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%1769, %1770) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %3753 = %3752(%3750, %3748, %3751) /* ty=Tensor[(16, 128, 128), int32] */;
  %3754 = fn (%p0328: Tensor[(16, 128, 128), int32], %p1223: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="4758e612535ed3cb") -> Tensor[(1, 16, 128, 128), float32] {
    %1764 = reshape(%p0328, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %1765 = cast(%1764, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1766 = multiply(%1765, 0.00338654f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1767 = divide(%1766, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%1767, %p1223) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %3755 = %3754(%3753, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %3756 = fn (%p0327: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="4a00e5ca77b0f132") -> Tensor[(1, 16, 128, 128), int8] {
    %1760 = nn.softmax(%p0327, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1761 = divide(%1760, 0.00658304f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1762 = clip(%1761, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1763 = round(%1762) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%1763, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %3757 = %3756(%3755) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %3758 = fn (%p0326: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %1756 = broadcast_to(%p0326, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %1757 = reshape(%1756, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %1758 = cast(%1757, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %1759 = add(%1758, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%1759, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %3774 = fn (%p0613: Tensor[(128, 1024), uint8], %p1404: Tensor[(64, 256, 16, 4), int8], %p2261: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3773 = nn.contrib_dense_pack(%p0613, %p1404, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3773, %p2261) /* ty=Tensor[(128, 1024), int32] */
  };
  %3775 = %3774(%3725, meta[relay.Constant][209] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][210] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3776 = fn (%p0612: Tensor[(128, 1024), int32], %p1403: Tensor[(1024), int32], Primitive=1, hash="588f18d1c4cadaab") -> Tensor[(16, 64, 128), int8] {
    %3759 = reshape(%p0612, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3760 = add(%3759, %p1403) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3761 = clip(%3760, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3762 = reshape(%3761, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3763 = transpose(%3762, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3764 = cast(%3763, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3765 = multiply(0.00538294f /* ty=float32 */, %3764) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3766 = add(%3765, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3767 = floor(%3766) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3768 = cast(%3767, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3769 = clip(%3768, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3770 = cast(%3769, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3771 = broadcast_to(%3770, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3772 = reshape(%3771, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%3772, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %3778 = %3776(%3775, meta[relay.Constant][211] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %3779 = fn (%p0614: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %3777 = cast(%p0614, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%3777, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %3780 = %3758(%3757) /* ty=Tensor[(16, 128, 128), uint8] */;
  %3781 = %3779(%3778) /* ty=Tensor[(16, 64), int32] */;
  %3782 = fn (%p0325: Tensor[(16, 128, 128), uint8], %p1222: Tensor[(16, 64, 128), int8], %p2147: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %1753 = multiply(128 /* ty=int32 */, %p2147) /* ty=Tensor[(16, 64), int32] */;
    %1754 = nn.batch_matmul(%p0325, %p1222, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %1755 = expand_dims(%1753, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%1754, %1755) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %3783 = %3782(%3780, %3778, %3781) /* ty=Tensor[(16, 128, 64), int32] */;
  %3784 = fn (%p0324: Tensor[(16, 128, 64), int32], Primitive=1, hash="8e1a25fbf3dbc2c5") -> Tensor[(128, 1024), uint8] {
    %1740 = reshape(%p0324, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1741 = transpose(%1740, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1742 = reshape(%1741, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1743 = cast(%1742, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1744 = multiply(0.0222038f /* ty=float32 */, %1743) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1745 = add(%1744, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1746 = floor(%1745) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1747 = cast(%1746, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1748 = clip(%1747, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1749 = cast(%1748, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1750 = reshape(%1749, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1751 = cast(%1750, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1752 = add(%1751, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1752, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3785 = %3784(%3783) /* ty=Tensor[(128, 1024), uint8] */;
  %3786 = fn (%p0323: Tensor[(128, 1024), uint8], %p1221: Tensor[(64, 256, 16, 4), int8], %p2146: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1739 = nn.contrib_dense_pack(%p0323, %p1221, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1739, %p2146) /* ty=Tensor[(128, 1024), int32] */
  };
  %3787 = %3786(%3785, meta[relay.Constant][212] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][213] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3788 = fn (%p0322: Tensor[(128, 1024), int32], %p1220: Tensor[(1024), int32], %p2145: Tensor[(1, 128, 1024), int8], Primitive=1, hash="3c411094f4c1b882") -> Tensor[(1, 128, 1024), float32] {
    %1725 = reshape(%p0322, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1726 = add(%1725, %p1220) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1727 = clip(%1726, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1728 = cast(%1727, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1729 = multiply(0.00833748f /* ty=float32 */, %1728) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1730 = add(%1729, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1731 = floor(%1730) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1732 = cast(%1731, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1733 = clip(%1732, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1734 = cast(%1733, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1735 = cast(%1734, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1736 = cast(%p2145, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1737 = multiply(%1735, 0.00794117f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1738 = multiply(%1736, 0.12236f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1737, %1738) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3789 = %3788(%3787, meta[relay.Constant][214] /* ty=Tensor[(1024), int32] */, %3723) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3790 = fn (%p0615: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0615, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3791 = %3790(%3789) /* ty=Tensor[(1, 128, 1), float32] */;
  %3792 = fn (%p0321: Tensor[(1, 128, 1024), float32], %p1219: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0321, %p1219) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3793 = %3792(%3789, %3791) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3794 = fn (%p0320: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1724 = power(%p0320, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1724, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3795 = %3794(%3793) /* ty=Tensor[(1, 128, 1), float32] */;
  %3796 = fn (%p0319: Tensor[(1, 128, 1), float32], %p1218: Tensor[(1, 128, 1024), float32], %p2144: Tensor[(1024), float32], %p329: Tensor[(1024), float32], Primitive=1, hash="8b71f7d97788a0b1") -> Tensor[(1, 128, 1024), int8] {
    %1716 = add(%p0319, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1717 = sqrt(%1716) /* ty=Tensor[(1, 128, 1), float32] */;
    %1718 = divide(%p1218, %1717) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1719 = multiply(%1718, %p2144) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1720 = add(%1719, %p329) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1721 = divide(%1720, 0.491362f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1722 = clip(%1721, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1723 = round(%1722) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1723, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3797 = %3796(%3795, %3793, meta[relay.Constant][215] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][216] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3798 = fn (%p0318: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1713 = reshape(%p0318, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1714 = cast(%1713, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1715 = add(%1714, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1715, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3799 = %3798(%3797) /* ty=Tensor[(128, 1024), uint8] */;
  %3800 = fn (%p0317: Tensor[(128, 1024), uint8], %p1217: Tensor[(256, 256, 16, 4), int8], %p2143: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %1712 = nn.contrib_dense_pack(%p0317, %p1217, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%1712, %p2143) /* ty=Tensor[(128, 4096), int32] */
  };
  %3801 = %3800(%3799, meta[relay.Constant][217] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][218] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %3802 = fn (%p0316: Tensor[(128, 4096), int32], %p1216: Tensor[(4096), float32], Primitive=1, hash="b86d47655360e53f") -> Tensor[(128, 4096), uint8] {
    %1696 = reshape(%p0316, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %1697 = cast(%1696, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %1698 = multiply(%1697, 0.00130177f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1699 = add(%1698, %p1216) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1700 = divide(%1699, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1701 = erf(%1700) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1702 = multiply(%1699, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1703 = add(%1701, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1704 = multiply(%1702, %1703) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1705 = divide(%1704, 0.0537966f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1706 = clip(%1705, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1707 = round(%1706) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1708 = cast(%1707, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %1709 = reshape(%1708, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %1710 = cast(%1709, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %1711 = add(%1710, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%1711, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %3803 = %3802(%3801, meta[relay.Constant][219] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %3804 = fn (%p0315: Tensor[(128, 4096), uint8], %p1215: Tensor[(64, 1024, 16, 4), int8], %p2142: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1695 = nn.contrib_dense_pack(%p0315, %p1215, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1695, %p2142) /* ty=Tensor[(128, 1024), int32] */
  };
  %3805 = %3804(%3803, meta[relay.Constant][220] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][221] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3806 = fn (%p0314: Tensor[(128, 1024), int32], %p1214: Tensor[(1024), int32], %p2141: Tensor[(1, 128, 1024), int8], Primitive=1, hash="3e777c423ed3db17") -> Tensor[(1, 128, 1024), float32] {
    %1681 = reshape(%p0314, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1682 = add(%1681, %p1214) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1683 = clip(%1682, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1684 = cast(%1683, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1685 = multiply(0.0516885f /* ty=float32 */, %1684) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1686 = add(%1685, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1687 = floor(%1686) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1688 = cast(%1687, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1689 = clip(%1688, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1690 = cast(%1689, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1691 = cast(%1690, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1692 = cast(%p2141, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1693 = multiply(%1691, 0.0225346f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1694 = multiply(%1692, 0.491362f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1693, %1694) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3807 = %3806(%3805, meta[relay.Constant][222] /* ty=Tensor[(1024), int32] */, %3797) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3808 = fn (%p0616: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0616, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3809 = %3808(%3807) /* ty=Tensor[(1, 128, 1), float32] */;
  %3810 = fn (%p0313: Tensor[(1, 128, 1024), float32], %p1213: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0313, %p1213) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3811 = %3810(%3807, %3809) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3812 = fn (%p0312: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1680 = power(%p0312, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1680, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3813 = %3812(%3811) /* ty=Tensor[(1, 128, 1), float32] */;
  %3814 = fn (%p0311: Tensor[(1, 128, 1), float32], %p1212: Tensor[(1, 128, 1024), float32], %p2140: Tensor[(1024), float32], %p328: Tensor[(1024), float32], Primitive=1, hash="1e93f41814e64386") -> Tensor[(1, 128, 1024), int8] {
    %1672 = add(%p0311, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1673 = sqrt(%1672) /* ty=Tensor[(1, 128, 1), float32] */;
    %1674 = divide(%p1212, %1673) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1675 = multiply(%1674, %p2140) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1676 = add(%1675, %p328) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1677 = divide(%1676, 0.117269f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1678 = clip(%1677, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1679 = round(%1678) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1679, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3815 = %3814(%3813, %3811, meta[relay.Constant][223] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][224] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3816 = fn (%p0310: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1669 = reshape(%p0310, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1670 = cast(%1669, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1671 = add(%1670, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1671, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3817 = %3816(%3815) /* ty=Tensor[(128, 1024), uint8] */;
  %3818 = fn (%p0309: Tensor[(128, 1024), uint8], %p1211: Tensor[(64, 256, 16, 4), int8], %p2139: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1668 = nn.contrib_dense_pack(%p0309, %p1211, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1668, %p2139) /* ty=Tensor[(128, 1024), int32] */
  };
  %3819 = %3818(%3817, meta[relay.Constant][225] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][226] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3820 = fn (%p0308: Tensor[(128, 1024), int32], %p1210: Tensor[(1024), int32], Primitive=1, hash="0c3290505268e2bf") -> Tensor[(16, 128, 64), uint8] {
    %1652 = reshape(%p0308, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1653 = add(%1652, %p1210) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1654 = clip(%1653, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1655 = reshape(%1654, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1656 = transpose(%1655, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1657 = cast(%1656, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1658 = multiply(0.0047472f /* ty=float32 */, %1657) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1659 = add(%1658, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1660 = floor(%1659) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1661 = cast(%1660, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1662 = clip(%1661, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1663 = cast(%1662, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1664 = broadcast_to(%1663, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1665 = reshape(%1664, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %1666 = cast(%1665, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %1667 = add(%1666, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%1667, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %3836 = fn (%p0618: Tensor[(128, 1024), uint8], %p1406: Tensor[(64, 256, 16, 4), int8], %p2262: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3835 = nn.contrib_dense_pack(%p0618, %p1406, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3835, %p2262) /* ty=Tensor[(128, 1024), int32] */
  };
  %3837 = %3836(%3817, meta[relay.Constant][228] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][229] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3838 = fn (%p0617: Tensor[(128, 1024), int32], %p1405: Tensor[(1024), int32], Primitive=1, hash="1fa80e3494520bf1") -> Tensor[(16, 128, 64), int8] {
    %3821 = reshape(%p0617, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3822 = add(%3821, %p1405) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3823 = clip(%3822, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3824 = reshape(%3823, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3825 = transpose(%3824, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3826 = cast(%3825, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3827 = multiply(0.0047472f /* ty=float32 */, %3826) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3828 = add(%3827, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3829 = floor(%3828) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3830 = cast(%3829, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3831 = clip(%3830, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3832 = cast(%3831, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3833 = broadcast_to(%3832, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3834 = reshape(%3833, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%3834, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %3840 = %3838(%3837, meta[relay.Constant][230] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %3841 = fn (%p0619: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %3839 = cast(%p0619, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%3839, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %3842 = %3820(%3819, meta[relay.Constant][227] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %3843 = %3841(%3840) /* ty=Tensor[(16, 128), int32] */;
  %3844 = fn (%p0307: Tensor[(16, 128, 64), uint8], %p1209: Tensor[(16, 128, 64), int8], %p2138: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %1649 = multiply(128 /* ty=int32 */, %p2138) /* ty=Tensor[(16, 128), int32] */;
    %1650 = nn.batch_matmul(%p0307, %p1209, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %1651 = expand_dims(%1649, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%1650, %1651) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %3845 = %3844(%3842, %3840, %3843) /* ty=Tensor[(16, 128, 128), int32] */;
  %3846 = fn (%p0306: Tensor[(16, 128, 128), int32], %p1208: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="ee67f2da1bc28e1a") -> Tensor[(1, 16, 128, 128), float32] {
    %1645 = reshape(%p0306, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %1646 = cast(%1645, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1647 = multiply(%1646, 0.00327726f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1648 = divide(%1647, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%1648, %p1208) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %3847 = %3846(%3845, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %3848 = fn (%p0305: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="4c4edbcf88279ad5") -> Tensor[(1, 16, 128, 128), int8] {
    %1641 = nn.softmax(%p0305, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1642 = divide(%1641, 0.00761257f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1643 = clip(%1642, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1644 = round(%1643) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%1644, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %3849 = %3848(%3847) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %3850 = fn (%p0304: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %1637 = broadcast_to(%p0304, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %1638 = reshape(%1637, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %1639 = cast(%1638, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %1640 = add(%1639, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%1640, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %3866 = fn (%p0621: Tensor[(128, 1024), uint8], %p1408: Tensor[(64, 256, 16, 4), int8], %p2263: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3865 = nn.contrib_dense_pack(%p0621, %p1408, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3865, %p2263) /* ty=Tensor[(128, 1024), int32] */
  };
  %3867 = %3866(%3817, meta[relay.Constant][231] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][232] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3868 = fn (%p0620: Tensor[(128, 1024), int32], %p1407: Tensor[(1024), int32], Primitive=1, hash="e00963804d04031d") -> Tensor[(16, 64, 128), int8] {
    %3851 = reshape(%p0620, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3852 = add(%3851, %p1407) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3853 = clip(%3852, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3854 = reshape(%3853, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3855 = transpose(%3854, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3856 = cast(%3855, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3857 = multiply(0.0047472f /* ty=float32 */, %3856) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3858 = add(%3857, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3859 = floor(%3858) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3860 = cast(%3859, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3861 = clip(%3860, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3862 = cast(%3861, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3863 = broadcast_to(%3862, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3864 = reshape(%3863, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%3864, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %3870 = %3868(%3867, meta[relay.Constant][233] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %3871 = fn (%p0622: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %3869 = cast(%p0622, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%3869, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %3872 = %3850(%3849) /* ty=Tensor[(16, 128, 128), uint8] */;
  %3873 = %3871(%3870) /* ty=Tensor[(16, 64), int32] */;
  %3874 = fn (%p0303: Tensor[(16, 128, 128), uint8], %p1207: Tensor[(16, 64, 128), int8], %p2137: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %1634 = multiply(128 /* ty=int32 */, %p2137) /* ty=Tensor[(16, 64), int32] */;
    %1635 = nn.batch_matmul(%p0303, %p1207, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %1636 = expand_dims(%1634, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%1635, %1636) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %3875 = %3874(%3872, %3870, %3873) /* ty=Tensor[(16, 128, 64), int32] */;
  %3876 = fn (%p0302: Tensor[(16, 128, 64), int32], Primitive=1, hash="adc87603354bdf78") -> Tensor[(128, 1024), uint8] {
    %1621 = reshape(%p0302, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1622 = transpose(%1621, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1623 = reshape(%1622, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1624 = cast(%1623, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1625 = multiply(0.0255026f /* ty=float32 */, %1624) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1626 = add(%1625, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1627 = floor(%1626) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1628 = cast(%1627, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1629 = clip(%1628, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1630 = cast(%1629, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1631 = reshape(%1630, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1632 = cast(%1631, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1633 = add(%1632, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1633, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3877 = %3876(%3875) /* ty=Tensor[(128, 1024), uint8] */;
  %3878 = fn (%p0301: Tensor[(128, 1024), uint8], %p1206: Tensor[(64, 256, 16, 4), int8], %p2136: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1620 = nn.contrib_dense_pack(%p0301, %p1206, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1620, %p2136) /* ty=Tensor[(128, 1024), int32] */
  };
  %3879 = %3878(%3877, meta[relay.Constant][234] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][235] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3880 = fn (%p0300: Tensor[(128, 1024), int32], %p1205: Tensor[(1024), int32], %p2135: Tensor[(1, 128, 1024), int8], Primitive=1, hash="a9249a499947b6dd") -> Tensor[(1, 128, 1024), float32] {
    %1606 = reshape(%p0300, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1607 = add(%1606, %p1205) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1608 = clip(%1607, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1609 = cast(%1608, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1610 = multiply(0.0055785f /* ty=float32 */, %1609) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1611 = add(%1610, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1612 = floor(%1611) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1613 = cast(%1612, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1614 = clip(%1613, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1615 = cast(%1614, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1616 = cast(%1615, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1617 = cast(%p2135, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1618 = multiply(%1616, 0.00975181f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1619 = multiply(%1617, 0.117269f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1618, %1619) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3881 = %3880(%3879, meta[relay.Constant][236] /* ty=Tensor[(1024), int32] */, %3815) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3882 = fn (%p0623: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0623, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3883 = %3882(%3881) /* ty=Tensor[(1, 128, 1), float32] */;
  %3884 = fn (%p0299: Tensor[(1, 128, 1024), float32], %p1204: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0299, %p1204) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3885 = %3884(%3881, %3883) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3886 = fn (%p0298: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1605 = power(%p0298, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1605, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3887 = %3886(%3885) /* ty=Tensor[(1, 128, 1), float32] */;
  %3888 = fn (%p0297: Tensor[(1, 128, 1), float32], %p1203: Tensor[(1, 128, 1024), float32], %p2134: Tensor[(1024), float32], %p327: Tensor[(1024), float32], Primitive=1, hash="4b4c86b384e09528") -> Tensor[(1, 128, 1024), int8] {
    %1597 = add(%p0297, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1598 = sqrt(%1597) /* ty=Tensor[(1, 128, 1), float32] */;
    %1599 = divide(%p1203, %1598) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1600 = multiply(%1599, %p2134) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1601 = add(%1600, %p327) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1602 = divide(%1601, 0.377333f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1603 = clip(%1602, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1604 = round(%1603) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1604, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3889 = %3888(%3887, %3885, meta[relay.Constant][237] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][238] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3890 = fn (%p0296: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1594 = reshape(%p0296, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1595 = cast(%1594, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1596 = add(%1595, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1596, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3891 = %3890(%3889) /* ty=Tensor[(128, 1024), uint8] */;
  %3892 = fn (%p0295: Tensor[(128, 1024), uint8], %p1202: Tensor[(256, 256, 16, 4), int8], %p2133: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %1593 = nn.contrib_dense_pack(%p0295, %p1202, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%1593, %p2133) /* ty=Tensor[(128, 4096), int32] */
  };
  %3893 = %3892(%3891, meta[relay.Constant][239] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][240] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %3894 = fn (%p0294: Tensor[(128, 4096), int32], %p1201: Tensor[(4096), float32], Primitive=1, hash="9952374671567830") -> Tensor[(128, 4096), uint8] {
    %1577 = reshape(%p0294, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %1578 = cast(%1577, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %1579 = multiply(%1578, 0.00134769f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1580 = add(%1579, %p1201) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1581 = divide(%1580, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1582 = erf(%1581) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1583 = multiply(%1580, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1584 = add(%1582, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1585 = multiply(%1583, %1584) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1586 = divide(%1585, 0.0600529f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1587 = clip(%1586, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1588 = round(%1587) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1589 = cast(%1588, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %1590 = reshape(%1589, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %1591 = cast(%1590, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %1592 = add(%1591, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%1592, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %3895 = %3894(%3893, meta[relay.Constant][241] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %3896 = fn (%p0293: Tensor[(128, 4096), uint8], %p1200: Tensor[(64, 1024, 16, 4), int8], %p2132: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1576 = nn.contrib_dense_pack(%p0293, %p1200, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1576, %p2132) /* ty=Tensor[(128, 1024), int32] */
  };
  %3897 = %3896(%3895, meta[relay.Constant][242] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][243] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3898 = fn (%p0292: Tensor[(128, 1024), int32], %p1199: Tensor[(1024), int32], %p2131: Tensor[(1, 128, 1024), int8], Primitive=1, hash="835b1443f7869d9c") -> Tensor[(1, 128, 1024), float32] {
    %1562 = reshape(%p0292, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1563 = add(%1562, %p1199) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1564 = clip(%1563, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1565 = cast(%1564, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1566 = multiply(0.0963078f /* ty=float32 */, %1565) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1567 = add(%1566, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1568 = floor(%1567) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1569 = cast(%1568, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1570 = clip(%1569, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1571 = cast(%1570, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1572 = cast(%1571, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1573 = cast(%p2131, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1574 = multiply(%1572, 0.0211071f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1575 = multiply(%1573, 0.377333f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1574, %1575) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3899 = %3898(%3897, meta[relay.Constant][244] /* ty=Tensor[(1024), int32] */, %3889) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3900 = fn (%p0624: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0624, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3901 = %3900(%3899) /* ty=Tensor[(1, 128, 1), float32] */;
  %3902 = fn (%p0291: Tensor[(1, 128, 1024), float32], %p1198: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0291, %p1198) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3903 = %3902(%3899, %3901) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3904 = fn (%p0290: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1561 = power(%p0290, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1561, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3905 = %3904(%3903) /* ty=Tensor[(1, 128, 1), float32] */;
  %3906 = fn (%p0289: Tensor[(1, 128, 1), float32], %p1197: Tensor[(1, 128, 1024), float32], %p2130: Tensor[(1024), float32], %p326: Tensor[(1024), float32], Primitive=1, hash="8d67ecafd319cf1f") -> Tensor[(1, 128, 1024), int8] {
    %1553 = add(%p0289, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1554 = sqrt(%1553) /* ty=Tensor[(1, 128, 1), float32] */;
    %1555 = divide(%p1197, %1554) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1556 = multiply(%1555, %p2130) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1557 = add(%1556, %p326) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1558 = divide(%1557, 0.134929f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1559 = clip(%1558, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1560 = round(%1559) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1560, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3907 = %3906(%3905, %3903, meta[relay.Constant][245] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][246] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3908 = fn (%p0288: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1550 = reshape(%p0288, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1551 = cast(%1550, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1552 = add(%1551, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1552, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3909 = %3908(%3907) /* ty=Tensor[(128, 1024), uint8] */;
  %3910 = fn (%p0287: Tensor[(128, 1024), uint8], %p1196: Tensor[(64, 256, 16, 4), int8], %p2129: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1549 = nn.contrib_dense_pack(%p0287, %p1196, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1549, %p2129) /* ty=Tensor[(128, 1024), int32] */
  };
  %3911 = %3910(%3909, meta[relay.Constant][247] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][248] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3912 = fn (%p0286: Tensor[(128, 1024), int32], %p1195: Tensor[(1024), int32], Primitive=1, hash="15c03255f4994a7e") -> Tensor[(16, 128, 64), uint8] {
    %1533 = reshape(%p0286, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1534 = add(%1533, %p1195) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1535 = clip(%1534, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1536 = reshape(%1535, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1537 = transpose(%1536, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1538 = cast(%1537, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1539 = multiply(0.00724908f /* ty=float32 */, %1538) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1540 = add(%1539, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1541 = floor(%1540) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1542 = cast(%1541, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1543 = clip(%1542, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1544 = cast(%1543, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1545 = broadcast_to(%1544, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1546 = reshape(%1545, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %1547 = cast(%1546, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %1548 = add(%1547, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%1548, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %3928 = fn (%p0626: Tensor[(128, 1024), uint8], %p1410: Tensor[(64, 256, 16, 4), int8], %p2264: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3927 = nn.contrib_dense_pack(%p0626, %p1410, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3927, %p2264) /* ty=Tensor[(128, 1024), int32] */
  };
  %3929 = %3928(%3909, meta[relay.Constant][250] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][251] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3930 = fn (%p0625: Tensor[(128, 1024), int32], %p1409: Tensor[(1024), int32], Primitive=1, hash="030555a53d38a519") -> Tensor[(16, 128, 64), int8] {
    %3913 = reshape(%p0625, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3914 = add(%3913, %p1409) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3915 = clip(%3914, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3916 = reshape(%3915, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3917 = transpose(%3916, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3918 = cast(%3917, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3919 = multiply(0.00724908f /* ty=float32 */, %3918) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3920 = add(%3919, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3921 = floor(%3920) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %3922 = cast(%3921, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3923 = clip(%3922, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %3924 = cast(%3923, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3925 = broadcast_to(%3924, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %3926 = reshape(%3925, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%3926, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %3932 = %3930(%3929, meta[relay.Constant][252] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %3933 = fn (%p0627: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %3931 = cast(%p0627, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%3931, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %3934 = %3912(%3911, meta[relay.Constant][249] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %3935 = %3933(%3932) /* ty=Tensor[(16, 128), int32] */;
  %3936 = fn (%p0285: Tensor[(16, 128, 64), uint8], %p1194: Tensor[(16, 128, 64), int8], %p2128: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %1530 = multiply(128 /* ty=int32 */, %p2128) /* ty=Tensor[(16, 128), int32] */;
    %1531 = nn.batch_matmul(%p0285, %p1194, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %1532 = expand_dims(%1530, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%1531, %1532) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %3937 = %3936(%3934, %3932, %3935) /* ty=Tensor[(16, 128, 128), int32] */;
  %3938 = fn (%p0284: Tensor[(16, 128, 128), int32], %p1193: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="84b3cbef05c00a2a") -> Tensor[(1, 16, 128, 128), float32] {
    %1526 = reshape(%p0284, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %1527 = cast(%1526, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1528 = multiply(%1527, 0.00264764f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1529 = divide(%1528, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%1529, %p1193) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %3939 = %3938(%3937, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %3940 = fn (%p0283: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="c7a22932964d39b3") -> Tensor[(1, 16, 128, 128), int8] {
    %1522 = nn.softmax(%p0283, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1523 = divide(%1522, 0.00542341f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1524 = clip(%1523, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1525 = round(%1524) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%1525, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %3941 = %3940(%3939) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %3942 = fn (%p0282: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %1518 = broadcast_to(%p0282, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %1519 = reshape(%1518, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %1520 = cast(%1519, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %1521 = add(%1520, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%1521, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %3958 = fn (%p0629: Tensor[(128, 1024), uint8], %p1412: Tensor[(64, 256, 16, 4), int8], %p2265: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %3957 = nn.contrib_dense_pack(%p0629, %p1412, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%3957, %p2265) /* ty=Tensor[(128, 1024), int32] */
  };
  %3959 = %3958(%3909, meta[relay.Constant][253] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][254] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3960 = fn (%p0628: Tensor[(128, 1024), int32], %p1411: Tensor[(1024), int32], Primitive=1, hash="d63782adab063bf4") -> Tensor[(16, 64, 128), int8] {
    %3943 = reshape(%p0628, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3944 = add(%3943, %p1411) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3945 = clip(%3944, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %3946 = reshape(%3945, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %3947 = transpose(%3946, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3948 = cast(%3947, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3949 = multiply(0.00724908f /* ty=float32 */, %3948) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3950 = add(%3949, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3951 = floor(%3950) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %3952 = cast(%3951, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3953 = clip(%3952, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %3954 = cast(%3953, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3955 = broadcast_to(%3954, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %3956 = reshape(%3955, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%3956, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %3962 = %3960(%3959, meta[relay.Constant][255] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %3963 = fn (%p0630: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %3961 = cast(%p0630, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%3961, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %3964 = %3942(%3941) /* ty=Tensor[(16, 128, 128), uint8] */;
  %3965 = %3963(%3962) /* ty=Tensor[(16, 64), int32] */;
  %3966 = fn (%p0281: Tensor[(16, 128, 128), uint8], %p1192: Tensor[(16, 64, 128), int8], %p2127: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %1515 = multiply(128 /* ty=int32 */, %p2127) /* ty=Tensor[(16, 64), int32] */;
    %1516 = nn.batch_matmul(%p0281, %p1192, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %1517 = expand_dims(%1515, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%1516, %1517) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %3967 = %3966(%3964, %3962, %3965) /* ty=Tensor[(16, 128, 64), int32] */;
  %3968 = fn (%p0280: Tensor[(16, 128, 64), int32], Primitive=1, hash="a54043882766fab5") -> Tensor[(128, 1024), uint8] {
    %1502 = reshape(%p0280, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1503 = transpose(%1502, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1504 = reshape(%1503, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1505 = cast(%1504, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1506 = multiply(0.016494f /* ty=float32 */, %1505) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1507 = add(%1506, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1508 = floor(%1507) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1509 = cast(%1508, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1510 = clip(%1509, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1511 = cast(%1510, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1512 = reshape(%1511, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1513 = cast(%1512, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1514 = add(%1513, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1514, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3969 = %3968(%3967) /* ty=Tensor[(128, 1024), uint8] */;
  %3970 = fn (%p0279: Tensor[(128, 1024), uint8], %p1191: Tensor[(64, 256, 16, 4), int8], %p2126: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1501 = nn.contrib_dense_pack(%p0279, %p1191, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1501, %p2126) /* ty=Tensor[(128, 1024), int32] */
  };
  %3971 = %3970(%3969, meta[relay.Constant][256] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][257] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3972 = fn (%p0278: Tensor[(128, 1024), int32], %p1190: Tensor[(1024), int32], %p2125: Tensor[(1, 128, 1024), int8], Primitive=1, hash="4d806c7c93eaa017") -> Tensor[(1, 128, 1024), float32] {
    %1487 = reshape(%p0278, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1488 = add(%1487, %p1190) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1489 = clip(%1488, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1490 = cast(%1489, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1491 = multiply(0.00419701f /* ty=float32 */, %1490) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1492 = add(%1491, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1493 = floor(%1492) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1494 = cast(%1493, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1495 = clip(%1494, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1496 = cast(%1495, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1497 = cast(%1496, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1498 = cast(%p2125, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1499 = multiply(%1497, 0.0122462f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1500 = multiply(%1498, 0.134929f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1499, %1500) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3973 = %3972(%3971, meta[relay.Constant][258] /* ty=Tensor[(1024), int32] */, %3907) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3974 = fn (%p0631: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0631, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3975 = %3974(%3973) /* ty=Tensor[(1, 128, 1), float32] */;
  %3976 = fn (%p0277: Tensor[(1, 128, 1024), float32], %p1189: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0277, %p1189) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3977 = %3976(%3973, %3975) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3978 = fn (%p0276: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1486 = power(%p0276, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1486, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3979 = %3978(%3977) /* ty=Tensor[(1, 128, 1), float32] */;
  %3980 = fn (%p0275: Tensor[(1, 128, 1), float32], %p1188: Tensor[(1, 128, 1024), float32], %p2124: Tensor[(1024), float32], %p325: Tensor[(1024), float32], Primitive=1, hash="e4261c86f55099c0") -> Tensor[(1, 128, 1024), int8] {
    %1478 = add(%p0275, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1479 = sqrt(%1478) /* ty=Tensor[(1, 128, 1), float32] */;
    %1480 = divide(%p1188, %1479) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1481 = multiply(%1480, %p2124) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1482 = add(%1481, %p325) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1483 = divide(%1482, 0.340672f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1484 = clip(%1483, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1485 = round(%1484) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1485, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3981 = %3980(%3979, %3977, meta[relay.Constant][259] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][260] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %3982 = fn (%p0274: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1475 = reshape(%p0274, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1476 = cast(%1475, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1477 = add(%1476, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1477, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %3983 = %3982(%3981) /* ty=Tensor[(128, 1024), uint8] */;
  %3984 = fn (%p0273: Tensor[(128, 1024), uint8], %p1187: Tensor[(256, 256, 16, 4), int8], %p2123: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %1474 = nn.contrib_dense_pack(%p0273, %p1187, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%1474, %p2123) /* ty=Tensor[(128, 4096), int32] */
  };
  %3985 = %3984(%3983, meta[relay.Constant][261] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][262] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %3986 = fn (%p0272: Tensor[(128, 4096), int32], %p1186: Tensor[(4096), float32], Primitive=1, hash="8db8c504ea18d984") -> Tensor[(128, 4096), uint8] {
    %1458 = reshape(%p0272, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %1459 = cast(%1458, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %1460 = multiply(%1459, 0.00145675f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1461 = add(%1460, %p1186) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1462 = divide(%1461, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1463 = erf(%1462) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1464 = multiply(%1461, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1465 = add(%1463, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1466 = multiply(%1464, %1465) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1467 = divide(%1466, 0.0591675f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1468 = clip(%1467, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1469 = round(%1468) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1470 = cast(%1469, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %1471 = reshape(%1470, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %1472 = cast(%1471, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %1473 = add(%1472, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%1473, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %3987 = %3986(%3985, meta[relay.Constant][263] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %3988 = fn (%p0271: Tensor[(128, 4096), uint8], %p1185: Tensor[(64, 1024, 16, 4), int8], %p2122: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1457 = nn.contrib_dense_pack(%p0271, %p1185, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1457, %p2122) /* ty=Tensor[(128, 1024), int32] */
  };
  %3989 = %3988(%3987, meta[relay.Constant][264] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][265] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %3990 = fn (%p0270: Tensor[(128, 1024), int32], %p1184: Tensor[(1024), int32], %p2121: Tensor[(1, 128, 1024), int8], Primitive=1, hash="3ab15fd18e49fac1") -> Tensor[(1, 128, 1024), float32] {
    %1443 = reshape(%p0270, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1444 = add(%1443, %p1184) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1445 = clip(%1444, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1446 = cast(%1445, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1447 = multiply(0.128946f /* ty=float32 */, %1446) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1448 = add(%1447, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1449 = floor(%1448) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1450 = cast(%1449, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1451 = clip(%1450, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1452 = cast(%1451, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1453 = cast(%1452, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1454 = cast(%p2121, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1455 = multiply(%1453, 0.0199728f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1456 = multiply(%1454, 0.340672f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1455, %1456) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3991 = %3990(%3989, meta[relay.Constant][266] /* ty=Tensor[(1024), int32] */, %3981) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3992 = fn (%p0632: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0632, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3993 = %3992(%3991) /* ty=Tensor[(1, 128, 1), float32] */;
  %3994 = fn (%p0269: Tensor[(1, 128, 1024), float32], %p1183: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0269, %p1183) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %3995 = %3994(%3991, %3993) /* ty=Tensor[(1, 128, 1024), float32] */;
  %3996 = fn (%p0268: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1442 = power(%p0268, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1442, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %3997 = %3996(%3995) /* ty=Tensor[(1, 128, 1), float32] */;
  %3998 = fn (%p0267: Tensor[(1, 128, 1), float32], %p1182: Tensor[(1, 128, 1024), float32], %p2120: Tensor[(1024), float32], %p324: Tensor[(1024), float32], Primitive=1, hash="4a8966ac27535a4d") -> Tensor[(1, 128, 1024), int8] {
    %1434 = add(%p0267, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1435 = sqrt(%1434) /* ty=Tensor[(1, 128, 1), float32] */;
    %1436 = divide(%p1182, %1435) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1437 = multiply(%1436, %p2120) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1438 = add(%1437, %p324) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1439 = divide(%1438, 0.124457f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1440 = clip(%1439, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1441 = round(%1440) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1441, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %3999 = %3998(%3997, %3995, meta[relay.Constant][267] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][268] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4000 = fn (%p0266: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1431 = reshape(%p0266, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1432 = cast(%1431, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1433 = add(%1432, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1433, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4001 = %4000(%3999) /* ty=Tensor[(128, 1024), uint8] */;
  %4002 = fn (%p0265: Tensor[(128, 1024), uint8], %p1181: Tensor[(64, 256, 16, 4), int8], %p2119: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1430 = nn.contrib_dense_pack(%p0265, %p1181, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1430, %p2119) /* ty=Tensor[(128, 1024), int32] */
  };
  %4003 = %4002(%4001, meta[relay.Constant][269] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][270] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4004 = fn (%p0264: Tensor[(128, 1024), int32], %p1180: Tensor[(1024), int32], Primitive=1, hash="0e971ec81a126203") -> Tensor[(16, 128, 64), uint8] {
    %1414 = reshape(%p0264, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1415 = add(%1414, %p1180) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1416 = clip(%1415, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1417 = reshape(%1416, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1418 = transpose(%1417, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1419 = cast(%1418, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1420 = multiply(0.00660094f /* ty=float32 */, %1419) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1421 = add(%1420, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1422 = floor(%1421) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1423 = cast(%1422, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1424 = clip(%1423, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1425 = cast(%1424, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1426 = broadcast_to(%1425, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1427 = reshape(%1426, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %1428 = cast(%1427, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %1429 = add(%1428, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%1429, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %4020 = fn (%p0634: Tensor[(128, 1024), uint8], %p1414: Tensor[(64, 256, 16, 4), int8], %p2266: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4019 = nn.contrib_dense_pack(%p0634, %p1414, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4019, %p2266) /* ty=Tensor[(128, 1024), int32] */
  };
  %4021 = %4020(%4001, meta[relay.Constant][272] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][273] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4022 = fn (%p0633: Tensor[(128, 1024), int32], %p1413: Tensor[(1024), int32], Primitive=1, hash="0ec779ae1c0b74e2") -> Tensor[(16, 128, 64), int8] {
    %4005 = reshape(%p0633, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4006 = add(%4005, %p1413) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4007 = clip(%4006, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4008 = reshape(%4007, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4009 = transpose(%4008, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4010 = cast(%4009, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4011 = multiply(0.00660094f /* ty=float32 */, %4010) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4012 = add(%4011, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4013 = floor(%4012) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4014 = cast(%4013, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4015 = clip(%4014, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4016 = cast(%4015, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4017 = broadcast_to(%4016, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4018 = reshape(%4017, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%4018, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %4024 = %4022(%4021, meta[relay.Constant][274] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %4025 = fn (%p0635: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %4023 = cast(%p0635, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%4023, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %4026 = %4004(%4003, meta[relay.Constant][271] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %4027 = %4025(%4024) /* ty=Tensor[(16, 128), int32] */;
  %4028 = fn (%p0263: Tensor[(16, 128, 64), uint8], %p1179: Tensor[(16, 128, 64), int8], %p2118: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %1411 = multiply(128 /* ty=int32 */, %p2118) /* ty=Tensor[(16, 128), int32] */;
    %1412 = nn.batch_matmul(%p0263, %p1179, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %1413 = expand_dims(%1411, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%1412, %1413) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %4029 = %4028(%4026, %4024, %4027) /* ty=Tensor[(16, 128, 128), int32] */;
  %4030 = fn (%p0262: Tensor[(16, 128, 128), int32], %p1178: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="023b2b958b430acc") -> Tensor[(1, 16, 128, 128), float32] {
    %1407 = reshape(%p0262, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %1408 = cast(%1407, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1409 = multiply(%1408, 0.00288305f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1410 = divide(%1409, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%1410, %p1178) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %4031 = %4030(%4029, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %4032 = fn (%p0261: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="945b3ff8765730df") -> Tensor[(1, 16, 128, 128), int8] {
    %1403 = nn.softmax(%p0261, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1404 = divide(%1403, 0.00636506f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1405 = clip(%1404, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1406 = round(%1405) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%1406, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %4033 = %4032(%4031) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %4034 = fn (%p0260: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %1399 = broadcast_to(%p0260, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %1400 = reshape(%1399, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %1401 = cast(%1400, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %1402 = add(%1401, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%1402, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %4050 = fn (%p0637: Tensor[(128, 1024), uint8], %p1416: Tensor[(64, 256, 16, 4), int8], %p2267: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4049 = nn.contrib_dense_pack(%p0637, %p1416, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4049, %p2267) /* ty=Tensor[(128, 1024), int32] */
  };
  %4051 = %4050(%4001, meta[relay.Constant][275] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][276] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4052 = fn (%p0636: Tensor[(128, 1024), int32], %p1415: Tensor[(1024), int32], Primitive=1, hash="e82a02b60a40fb74") -> Tensor[(16, 64, 128), int8] {
    %4035 = reshape(%p0636, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4036 = add(%4035, %p1415) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4037 = clip(%4036, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4038 = reshape(%4037, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4039 = transpose(%4038, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4040 = cast(%4039, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4041 = multiply(0.00660094f /* ty=float32 */, %4040) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4042 = add(%4041, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4043 = floor(%4042) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4044 = cast(%4043, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4045 = clip(%4044, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4046 = cast(%4045, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4047 = broadcast_to(%4046, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4048 = reshape(%4047, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%4048, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %4054 = %4052(%4051, meta[relay.Constant][277] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %4055 = fn (%p0638: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %4053 = cast(%p0638, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%4053, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %4056 = %4034(%4033) /* ty=Tensor[(16, 128, 128), uint8] */;
  %4057 = %4055(%4054) /* ty=Tensor[(16, 64), int32] */;
  %4058 = fn (%p0259: Tensor[(16, 128, 128), uint8], %p1177: Tensor[(16, 64, 128), int8], %p2117: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %1396 = multiply(128 /* ty=int32 */, %p2117) /* ty=Tensor[(16, 64), int32] */;
    %1397 = nn.batch_matmul(%p0259, %p1177, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %1398 = expand_dims(%1396, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%1397, %1398) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %4059 = %4058(%4056, %4054, %4057) /* ty=Tensor[(16, 128, 64), int32] */;
  %4060 = fn (%p0258: Tensor[(16, 128, 64), int32], Primitive=1, hash="2ed61e1b849c4423") -> Tensor[(128, 1024), uint8] {
    %1383 = reshape(%p0258, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1384 = transpose(%1383, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1385 = reshape(%1384, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1386 = cast(%1385, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1387 = multiply(0.0199743f /* ty=float32 */, %1386) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1388 = add(%1387, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1389 = floor(%1388) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1390 = cast(%1389, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1391 = clip(%1390, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1392 = cast(%1391, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1393 = reshape(%1392, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1394 = cast(%1393, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1395 = add(%1394, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1395, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4061 = %4060(%4059) /* ty=Tensor[(128, 1024), uint8] */;
  %4062 = fn (%p0257: Tensor[(128, 1024), uint8], %p1176: Tensor[(64, 256, 16, 4), int8], %p2116: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1382 = nn.contrib_dense_pack(%p0257, %p1176, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1382, %p2116) /* ty=Tensor[(128, 1024), int32] */
  };
  %4063 = %4062(%4061, meta[relay.Constant][278] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][279] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4064 = fn (%p0256: Tensor[(128, 1024), int32], %p1175: Tensor[(1024), int32], %p2115: Tensor[(1, 128, 1024), int8], Primitive=1, hash="9b9ed35c89ee8003") -> Tensor[(1, 128, 1024), float32] {
    %1368 = reshape(%p0256, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1369 = add(%1368, %p1175) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1370 = clip(%1369, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1371 = cast(%1370, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1372 = multiply(0.00306455f /* ty=float32 */, %1371) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1373 = add(%1372, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1374 = floor(%1373) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1375 = cast(%1374, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1376 = clip(%1375, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1377 = cast(%1376, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1378 = cast(%1377, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1379 = cast(%p2115, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1380 = multiply(%1378, 0.0127137f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1381 = multiply(%1379, 0.124457f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1380, %1381) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4065 = %4064(%4063, meta[relay.Constant][280] /* ty=Tensor[(1024), int32] */, %3999) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4066 = fn (%p0639: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0639, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4067 = %4066(%4065) /* ty=Tensor[(1, 128, 1), float32] */;
  %4068 = fn (%p0255: Tensor[(1, 128, 1024), float32], %p1174: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0255, %p1174) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4069 = %4068(%4065, %4067) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4070 = fn (%p0254: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1367 = power(%p0254, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1367, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4071 = %4070(%4069) /* ty=Tensor[(1, 128, 1), float32] */;
  %4072 = fn (%p0253: Tensor[(1, 128, 1), float32], %p1173: Tensor[(1, 128, 1024), float32], %p2114: Tensor[(1024), float32], %p323: Tensor[(1024), float32], Primitive=1, hash="8a6b795fadcd0868") -> Tensor[(1, 128, 1024), int8] {
    %1359 = add(%p0253, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1360 = sqrt(%1359) /* ty=Tensor[(1, 128, 1), float32] */;
    %1361 = divide(%p1173, %1360) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1362 = multiply(%1361, %p2114) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1363 = add(%1362, %p323) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1364 = divide(%1363, 0.295376f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1365 = clip(%1364, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1366 = round(%1365) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1366, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4073 = %4072(%4071, %4069, meta[relay.Constant][281] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][282] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4074 = fn (%p0252: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1356 = reshape(%p0252, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1357 = cast(%1356, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1358 = add(%1357, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1358, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4075 = %4074(%4073) /* ty=Tensor[(128, 1024), uint8] */;
  %4076 = fn (%p0251: Tensor[(128, 1024), uint8], %p1172: Tensor[(256, 256, 16, 4), int8], %p2113: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %1355 = nn.contrib_dense_pack(%p0251, %p1172, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%1355, %p2113) /* ty=Tensor[(128, 4096), int32] */
  };
  %4077 = %4076(%4075, meta[relay.Constant][283] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][284] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %4078 = fn (%p0250: Tensor[(128, 4096), int32], %p1171: Tensor[(4096), float32], Primitive=1, hash="a718a2b81ae9ebac") -> Tensor[(128, 4096), uint8] {
    %1339 = reshape(%p0250, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %1340 = cast(%1339, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %1341 = multiply(%1340, 0.00111556f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1342 = add(%1341, %p1171) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1343 = divide(%1342, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1344 = erf(%1343) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1345 = multiply(%1342, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1346 = add(%1344, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1347 = multiply(%1345, %1346) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1348 = divide(%1347, 0.042897f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1349 = clip(%1348, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1350 = round(%1349) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1351 = cast(%1350, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %1352 = reshape(%1351, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %1353 = cast(%1352, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %1354 = add(%1353, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%1354, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %4079 = %4078(%4077, meta[relay.Constant][285] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %4080 = fn (%p0249: Tensor[(128, 4096), uint8], %p1170: Tensor[(64, 1024, 16, 4), int8], %p2112: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1338 = nn.contrib_dense_pack(%p0249, %p1170, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1338, %p2112) /* ty=Tensor[(128, 1024), int32] */
  };
  %4081 = %4080(%4079, meta[relay.Constant][286] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][287] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4082 = fn (%p0248: Tensor[(128, 1024), int32], %p1169: Tensor[(1024), int32], %p2111: Tensor[(1, 128, 1024), int8], Primitive=1, hash="62869a9a8bfbcb49") -> Tensor[(1, 128, 1024), float32] {
    %1324 = reshape(%p0248, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1325 = add(%1324, %p1169) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1326 = clip(%1325, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1327 = cast(%1326, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1328 = multiply(0.086388f /* ty=float32 */, %1327) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1329 = add(%1328, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1330 = floor(%1329) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1331 = cast(%1330, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1332 = clip(%1331, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1333 = cast(%1332, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1334 = cast(%1333, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1335 = cast(%p2111, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1336 = multiply(%1334, 0.0194794f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1337 = multiply(%1335, 0.295376f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1336, %1337) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4083 = %4082(%4081, meta[relay.Constant][288] /* ty=Tensor[(1024), int32] */, %4073) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4084 = fn (%p0640: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0640, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4085 = %4084(%4083) /* ty=Tensor[(1, 128, 1), float32] */;
  %4086 = fn (%p0247: Tensor[(1, 128, 1024), float32], %p1168: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0247, %p1168) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4087 = %4086(%4083, %4085) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4088 = fn (%p0246: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1323 = power(%p0246, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1323, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4089 = %4088(%4087) /* ty=Tensor[(1, 128, 1), float32] */;
  %4090 = fn (%p0245: Tensor[(1, 128, 1), float32], %p1167: Tensor[(1, 128, 1024), float32], %p2110: Tensor[(1024), float32], %p322: Tensor[(1024), float32], Primitive=1, hash="9fc30641d1aeb450") -> Tensor[(1, 128, 1024), int8] {
    %1315 = add(%p0245, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1316 = sqrt(%1315) /* ty=Tensor[(1, 128, 1), float32] */;
    %1317 = divide(%p1167, %1316) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1318 = multiply(%1317, %p2110) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1319 = add(%1318, %p322) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1320 = divide(%1319, 0.111063f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1321 = clip(%1320, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1322 = round(%1321) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1322, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4091 = %4090(%4089, %4087, meta[relay.Constant][289] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][290] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4092 = fn (%p0244: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1312 = reshape(%p0244, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1313 = cast(%1312, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1314 = add(%1313, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1314, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4093 = %4092(%4091) /* ty=Tensor[(128, 1024), uint8] */;
  %4094 = fn (%p0243: Tensor[(128, 1024), uint8], %p1166: Tensor[(64, 256, 16, 4), int8], %p2109: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1311 = nn.contrib_dense_pack(%p0243, %p1166, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1311, %p2109) /* ty=Tensor[(128, 1024), int32] */
  };
  %4095 = %4094(%4093, meta[relay.Constant][291] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][292] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4096 = fn (%p0242: Tensor[(128, 1024), int32], %p1165: Tensor[(1024), int32], Primitive=1, hash="f09bb9e8adc7023e") -> Tensor[(16, 128, 64), uint8] {
    %1295 = reshape(%p0242, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1296 = add(%1295, %p1165) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1297 = clip(%1296, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1298 = reshape(%1297, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1299 = transpose(%1298, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1300 = cast(%1299, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1301 = multiply(0.00549005f /* ty=float32 */, %1300) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1302 = add(%1301, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1303 = floor(%1302) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1304 = cast(%1303, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1305 = clip(%1304, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1306 = cast(%1305, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1307 = broadcast_to(%1306, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1308 = reshape(%1307, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %1309 = cast(%1308, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %1310 = add(%1309, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%1310, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %4112 = fn (%p0642: Tensor[(128, 1024), uint8], %p1418: Tensor[(64, 256, 16, 4), int8], %p2268: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4111 = nn.contrib_dense_pack(%p0642, %p1418, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4111, %p2268) /* ty=Tensor[(128, 1024), int32] */
  };
  %4113 = %4112(%4093, meta[relay.Constant][294] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][295] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4114 = fn (%p0641: Tensor[(128, 1024), int32], %p1417: Tensor[(1024), int32], Primitive=1, hash="f6d5451981f1ed26") -> Tensor[(16, 128, 64), int8] {
    %4097 = reshape(%p0641, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4098 = add(%4097, %p1417) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4099 = clip(%4098, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4100 = reshape(%4099, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4101 = transpose(%4100, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4102 = cast(%4101, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4103 = multiply(0.00549005f /* ty=float32 */, %4102) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4104 = add(%4103, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4105 = floor(%4104) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4106 = cast(%4105, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4107 = clip(%4106, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4108 = cast(%4107, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4109 = broadcast_to(%4108, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4110 = reshape(%4109, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%4110, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %4116 = %4114(%4113, meta[relay.Constant][296] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %4117 = fn (%p0643: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %4115 = cast(%p0643, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%4115, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %4118 = %4096(%4095, meta[relay.Constant][293] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %4119 = %4117(%4116) /* ty=Tensor[(16, 128), int32] */;
  %4120 = fn (%p0241: Tensor[(16, 128, 64), uint8], %p1164: Tensor[(16, 128, 64), int8], %p2108: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %1292 = multiply(128 /* ty=int32 */, %p2108) /* ty=Tensor[(16, 128), int32] */;
    %1293 = nn.batch_matmul(%p0241, %p1164, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %1294 = expand_dims(%1292, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%1293, %1294) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %4121 = %4120(%4118, %4116, %4119) /* ty=Tensor[(16, 128, 128), int32] */;
  %4122 = fn (%p0240: Tensor[(16, 128, 128), int32], %p1163: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="a4f9413de8e2cd10") -> Tensor[(1, 16, 128, 128), float32] {
    %1288 = reshape(%p0240, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %1289 = cast(%1288, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1290 = multiply(%1289, 0.0025498f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1291 = divide(%1290, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%1291, %p1163) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %4123 = %4122(%4121, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %4124 = fn (%p0239: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="3c245e9d9014b7f8") -> Tensor[(1, 16, 128, 128), int8] {
    %1284 = nn.softmax(%p0239, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1285 = divide(%1284, 0.00547221f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1286 = clip(%1285, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1287 = round(%1286) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%1287, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %4125 = %4124(%4123) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %4126 = fn (%p0238: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %1280 = broadcast_to(%p0238, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %1281 = reshape(%1280, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %1282 = cast(%1281, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %1283 = add(%1282, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%1283, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %4142 = fn (%p0645: Tensor[(128, 1024), uint8], %p1420: Tensor[(64, 256, 16, 4), int8], %p2269: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4141 = nn.contrib_dense_pack(%p0645, %p1420, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4141, %p2269) /* ty=Tensor[(128, 1024), int32] */
  };
  %4143 = %4142(%4093, meta[relay.Constant][297] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][298] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4144 = fn (%p0644: Tensor[(128, 1024), int32], %p1419: Tensor[(1024), int32], Primitive=1, hash="95a0a0ddd5062ff2") -> Tensor[(16, 64, 128), int8] {
    %4127 = reshape(%p0644, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4128 = add(%4127, %p1419) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4129 = clip(%4128, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4130 = reshape(%4129, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4131 = transpose(%4130, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4132 = cast(%4131, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4133 = multiply(0.00549005f /* ty=float32 */, %4132) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4134 = add(%4133, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4135 = floor(%4134) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4136 = cast(%4135, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4137 = clip(%4136, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4138 = cast(%4137, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4139 = broadcast_to(%4138, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4140 = reshape(%4139, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%4140, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %4146 = %4144(%4143, meta[relay.Constant][299] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %4147 = fn (%p0646: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %4145 = cast(%p0646, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%4145, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %4148 = %4126(%4125) /* ty=Tensor[(16, 128, 128), uint8] */;
  %4149 = %4147(%4146) /* ty=Tensor[(16, 64), int32] */;
  %4150 = fn (%p0237: Tensor[(16, 128, 128), uint8], %p1162: Tensor[(16, 64, 128), int8], %p2107: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %1277 = multiply(128 /* ty=int32 */, %p2107) /* ty=Tensor[(16, 64), int32] */;
    %1278 = nn.batch_matmul(%p0237, %p1162, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %1279 = expand_dims(%1277, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%1278, %1279) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %4151 = %4150(%4148, %4146, %4149) /* ty=Tensor[(16, 128, 64), int32] */;
  %4152 = fn (%p0236: Tensor[(16, 128, 64), int32], Primitive=1, hash="9d5e3be5b7b2fc3e") -> Tensor[(128, 1024), uint8] {
    %1264 = reshape(%p0236, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1265 = transpose(%1264, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1266 = reshape(%1265, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1267 = cast(%1266, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1268 = multiply(0.0168905f /* ty=float32 */, %1267) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1269 = add(%1268, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1270 = floor(%1269) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1271 = cast(%1270, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1272 = clip(%1271, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1273 = cast(%1272, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1274 = reshape(%1273, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1275 = cast(%1274, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1276 = add(%1275, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1276, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4153 = %4152(%4151) /* ty=Tensor[(128, 1024), uint8] */;
  %4154 = fn (%p0235: Tensor[(128, 1024), uint8], %p1161: Tensor[(64, 256, 16, 4), int8], %p2106: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1263 = nn.contrib_dense_pack(%p0235, %p1161, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1263, %p2106) /* ty=Tensor[(128, 1024), int32] */
  };
  %4155 = %4154(%4153, meta[relay.Constant][300] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][301] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4156 = fn (%p0234: Tensor[(128, 1024), int32], %p1160: Tensor[(1024), int32], %p2105: Tensor[(1, 128, 1024), int8], Primitive=1, hash="c2c61a812a20f1fb") -> Tensor[(1, 128, 1024), float32] {
    %1249 = reshape(%p0234, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1250 = add(%1249, %p1160) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1251 = clip(%1250, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1252 = cast(%1251, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1253 = multiply(0.00257042f /* ty=float32 */, %1252) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1254 = add(%1253, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1255 = floor(%1254) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1256 = cast(%1255, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1257 = clip(%1256, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1258 = cast(%1257, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1259 = cast(%1258, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1260 = cast(%p2105, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1261 = multiply(%1259, 0.0139052f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1262 = multiply(%1260, 0.111063f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1261, %1262) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4157 = %4156(%4155, meta[relay.Constant][302] /* ty=Tensor[(1024), int32] */, %4091) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4158 = fn (%p0647: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0647, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4159 = %4158(%4157) /* ty=Tensor[(1, 128, 1), float32] */;
  %4160 = fn (%p0233: Tensor[(1, 128, 1024), float32], %p1159: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0233, %p1159) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4161 = %4160(%4157, %4159) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4162 = fn (%p0232: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1248 = power(%p0232, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1248, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4163 = %4162(%4161) /* ty=Tensor[(1, 128, 1), float32] */;
  %4164 = fn (%p0231: Tensor[(1, 128, 1), float32], %p1158: Tensor[(1, 128, 1024), float32], %p2104: Tensor[(1024), float32], %p321: Tensor[(1024), float32], Primitive=1, hash="7cbea4e2a4c9cf4f") -> Tensor[(1, 128, 1024), int8] {
    %1240 = add(%p0231, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1241 = sqrt(%1240) /* ty=Tensor[(1, 128, 1), float32] */;
    %1242 = divide(%p1158, %1241) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1243 = multiply(%1242, %p2104) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1244 = add(%1243, %p321) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1245 = divide(%1244, 0.242777f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1246 = clip(%1245, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1247 = round(%1246) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1247, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4165 = %4164(%4163, %4161, meta[relay.Constant][303] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][304] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4166 = fn (%p0230: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1237 = reshape(%p0230, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1238 = cast(%1237, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1239 = add(%1238, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1239, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4167 = %4166(%4165) /* ty=Tensor[(128, 1024), uint8] */;
  %4168 = fn (%p0229: Tensor[(128, 1024), uint8], %p1157: Tensor[(256, 256, 16, 4), int8], %p2103: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %1236 = nn.contrib_dense_pack(%p0229, %p1157, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%1236, %p2103) /* ty=Tensor[(128, 4096), int32] */
  };
  %4169 = %4168(%4167, meta[relay.Constant][305] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][306] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %4170 = fn (%p0228: Tensor[(128, 4096), int32], %p1156: Tensor[(4096), float32], Primitive=1, hash="87a84d3192976e9a") -> Tensor[(128, 4096), uint8] {
    %1220 = reshape(%p0228, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %1221 = cast(%1220, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %1222 = multiply(%1221, 0.000588455f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1223 = add(%1222, %p1156) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1224 = divide(%1223, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1225 = erf(%1224) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1226 = multiply(%1223, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1227 = add(%1225, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1228 = multiply(%1226, %1227) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1229 = divide(%1228, 0.0421221f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1230 = clip(%1229, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1231 = round(%1230) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1232 = cast(%1231, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %1233 = reshape(%1232, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %1234 = cast(%1233, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %1235 = add(%1234, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%1235, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %4171 = %4170(%4169, meta[relay.Constant][307] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %4172 = fn (%p0227: Tensor[(128, 4096), uint8], %p1155: Tensor[(64, 1024, 16, 4), int8], %p2102: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1219 = nn.contrib_dense_pack(%p0227, %p1155, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1219, %p2102) /* ty=Tensor[(128, 1024), int32] */
  };
  %4173 = %4172(%4171, meta[relay.Constant][308] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][309] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4174 = fn (%p0226: Tensor[(128, 1024), int32], %p1154: Tensor[(1024), int32], %p2101: Tensor[(1, 128, 1024), int8], Primitive=1, hash="152bed09566497d3") -> Tensor[(1, 128, 1024), float32] {
    %1205 = reshape(%p0226, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1206 = add(%1205, %p1154) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1207 = clip(%1206, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1208 = cast(%1207, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1209 = multiply(0.0759277f /* ty=float32 */, %1208) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1210 = add(%1209, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1211 = floor(%1210) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1212 = cast(%1211, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1213 = clip(%1212, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1214 = cast(%1213, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1215 = cast(%1214, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1216 = cast(%p2101, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1217 = multiply(%1215, 0.0201865f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1218 = multiply(%1216, 0.242777f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1217, %1218) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4175 = %4174(%4173, meta[relay.Constant][310] /* ty=Tensor[(1024), int32] */, %4165) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4176 = fn (%p0648: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0648, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4177 = %4176(%4175) /* ty=Tensor[(1, 128, 1), float32] */;
  %4178 = fn (%p0225: Tensor[(1, 128, 1024), float32], %p1153: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0225, %p1153) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4179 = %4178(%4175, %4177) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4180 = fn (%p0224: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1204 = power(%p0224, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1204, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4181 = %4180(%4179) /* ty=Tensor[(1, 128, 1), float32] */;
  %4182 = fn (%p0223: Tensor[(1, 128, 1), float32], %p1152: Tensor[(1, 128, 1024), float32], %p2100: Tensor[(1024), float32], %p320: Tensor[(1024), float32], Primitive=1, hash="f94abdcd851e1d1b") -> Tensor[(1, 128, 1024), int8] {
    %1196 = add(%p0223, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1197 = sqrt(%1196) /* ty=Tensor[(1, 128, 1), float32] */;
    %1198 = divide(%p1152, %1197) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1199 = multiply(%1198, %p2100) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1200 = add(%1199, %p320) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1201 = divide(%1200, 0.0827522f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1202 = clip(%1201, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1203 = round(%1202) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1203, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4183 = %4182(%4181, %4179, meta[relay.Constant][311] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][312] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4184 = fn (%p0222: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1193 = reshape(%p0222, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1194 = cast(%1193, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1195 = add(%1194, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1195, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4185 = %4184(%4183) /* ty=Tensor[(128, 1024), uint8] */;
  %4186 = fn (%p0221: Tensor[(128, 1024), uint8], %p1151: Tensor[(64, 256, 16, 4), int8], %p299: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1192 = nn.contrib_dense_pack(%p0221, %p1151, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1192, %p299) /* ty=Tensor[(128, 1024), int32] */
  };
  %4187 = %4186(%4185, meta[relay.Constant][313] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][314] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4188 = fn (%p0220: Tensor[(128, 1024), int32], %p1150: Tensor[(1024), int32], Primitive=1, hash="d498d4a3f6c715da") -> Tensor[(16, 128, 64), uint8] {
    %1176 = reshape(%p0220, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1177 = add(%1176, %p1150) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1178 = clip(%1177, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1179 = reshape(%1178, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1180 = transpose(%1179, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1181 = cast(%1180, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1182 = multiply(0.00469698f /* ty=float32 */, %1181) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1183 = add(%1182, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1184 = floor(%1183) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1185 = cast(%1184, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1186 = clip(%1185, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1187 = cast(%1186, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1188 = broadcast_to(%1187, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1189 = reshape(%1188, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %1190 = cast(%1189, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %1191 = add(%1190, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%1191, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %4204 = fn (%p0650: Tensor[(128, 1024), uint8], %p1422: Tensor[(64, 256, 16, 4), int8], %p2270: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4203 = nn.contrib_dense_pack(%p0650, %p1422, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4203, %p2270) /* ty=Tensor[(128, 1024), int32] */
  };
  %4205 = %4204(%4185, meta[relay.Constant][316] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][317] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4206 = fn (%p0649: Tensor[(128, 1024), int32], %p1421: Tensor[(1024), int32], Primitive=1, hash="0531d1d5f1ce5908") -> Tensor[(16, 128, 64), int8] {
    %4189 = reshape(%p0649, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4190 = add(%4189, %p1421) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4191 = clip(%4190, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4192 = reshape(%4191, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4193 = transpose(%4192, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4194 = cast(%4193, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4195 = multiply(0.00469698f /* ty=float32 */, %4194) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4196 = add(%4195, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4197 = floor(%4196) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4198 = cast(%4197, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4199 = clip(%4198, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4200 = cast(%4199, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4201 = broadcast_to(%4200, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4202 = reshape(%4201, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%4202, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %4208 = %4206(%4205, meta[relay.Constant][318] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %4209 = fn (%p0651: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %4207 = cast(%p0651, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%4207, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %4210 = %4188(%4187, meta[relay.Constant][315] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %4211 = %4209(%4208) /* ty=Tensor[(16, 128), int32] */;
  %4212 = fn (%p0219: Tensor[(16, 128, 64), uint8], %p1149: Tensor[(16, 128, 64), int8], %p298: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %1173 = multiply(128 /* ty=int32 */, %p298) /* ty=Tensor[(16, 128), int32] */;
    %1174 = nn.batch_matmul(%p0219, %p1149, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %1175 = expand_dims(%1173, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%1174, %1175) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %4213 = %4212(%4210, %4208, %4211) /* ty=Tensor[(16, 128, 128), int32] */;
  %4214 = fn (%p0218: Tensor[(16, 128, 128), int32], %p1148: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="80f7f053507142f1") -> Tensor[(1, 16, 128, 128), float32] {
    %1169 = reshape(%p0218, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %1170 = cast(%1169, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1171 = multiply(%1170, 0.00267826f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1172 = divide(%1171, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%1172, %p1148) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %4215 = %4214(%4213, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %4216 = fn (%p0217: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="7d86742f5490c8ae") -> Tensor[(1, 16, 128, 128), int8] {
    %1165 = nn.softmax(%p0217, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1166 = divide(%1165, 0.00551432f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1167 = clip(%1166, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1168 = round(%1167) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%1168, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %4217 = %4216(%4215) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %4218 = fn (%p0216: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %1161 = broadcast_to(%p0216, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %1162 = reshape(%1161, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %1163 = cast(%1162, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %1164 = add(%1163, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%1164, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %4234 = fn (%p0653: Tensor[(128, 1024), uint8], %p1424: Tensor[(64, 256, 16, 4), int8], %p2271: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4233 = nn.contrib_dense_pack(%p0653, %p1424, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4233, %p2271) /* ty=Tensor[(128, 1024), int32] */
  };
  %4235 = %4234(%4185, meta[relay.Constant][319] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][320] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4236 = fn (%p0652: Tensor[(128, 1024), int32], %p1423: Tensor[(1024), int32], Primitive=1, hash="e226cfa8430f36c0") -> Tensor[(16, 64, 128), int8] {
    %4219 = reshape(%p0652, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4220 = add(%4219, %p1423) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4221 = clip(%4220, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4222 = reshape(%4221, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4223 = transpose(%4222, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4224 = cast(%4223, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4225 = multiply(0.00469698f /* ty=float32 */, %4224) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4226 = add(%4225, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4227 = floor(%4226) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4228 = cast(%4227, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4229 = clip(%4228, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4230 = cast(%4229, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4231 = broadcast_to(%4230, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4232 = reshape(%4231, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%4232, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %4238 = %4236(%4235, meta[relay.Constant][321] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %4239 = fn (%p0654: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %4237 = cast(%p0654, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%4237, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %4240 = %4218(%4217) /* ty=Tensor[(16, 128, 128), uint8] */;
  %4241 = %4239(%4238) /* ty=Tensor[(16, 64), int32] */;
  %4242 = fn (%p0215: Tensor[(16, 128, 128), uint8], %p1147: Tensor[(16, 64, 128), int8], %p297: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %1158 = multiply(128 /* ty=int32 */, %p297) /* ty=Tensor[(16, 64), int32] */;
    %1159 = nn.batch_matmul(%p0215, %p1147, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %1160 = expand_dims(%1158, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%1159, %1160) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %4243 = %4242(%4240, %4238, %4241) /* ty=Tensor[(16, 128, 64), int32] */;
  %4244 = fn (%p0214: Tensor[(16, 128, 64), int32], Primitive=1, hash="bc35959ac1ff902a") -> Tensor[(128, 1024), uint8] {
    %1145 = reshape(%p0214, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1146 = transpose(%1145, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1147 = reshape(%1146, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1148 = cast(%1147, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1149 = multiply(0.0143397f /* ty=float32 */, %1148) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1150 = add(%1149, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1151 = floor(%1150) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1152 = cast(%1151, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1153 = clip(%1152, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1154 = cast(%1153, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1155 = reshape(%1154, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1156 = cast(%1155, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1157 = add(%1156, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1157, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4245 = %4244(%4243) /* ty=Tensor[(128, 1024), uint8] */;
  %4246 = fn (%p0213: Tensor[(128, 1024), uint8], %p1146: Tensor[(64, 256, 16, 4), int8], %p296: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1144 = nn.contrib_dense_pack(%p0213, %p1146, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1144, %p296) /* ty=Tensor[(128, 1024), int32] */
  };
  %4247 = %4246(%4245, meta[relay.Constant][322] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][323] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4248 = fn (%p0212: Tensor[(128, 1024), int32], %p1145: Tensor[(1024), int32], %p295: Tensor[(1, 128, 1024), int8], Primitive=1, hash="39c872dc8579f106") -> Tensor[(1, 128, 1024), float32] {
    %1130 = reshape(%p0212, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1131 = add(%1130, %p1145) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1132 = clip(%1131, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1133 = cast(%1132, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1134 = multiply(0.00346268f /* ty=float32 */, %1133) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1135 = add(%1134, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1136 = floor(%1135) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1137 = cast(%1136, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1138 = clip(%1137, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1139 = cast(%1138, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1140 = cast(%1139, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1141 = cast(%p295, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1142 = multiply(%1140, 0.012297f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1143 = multiply(%1141, 0.0827522f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1142, %1143) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4249 = %4248(%4247, meta[relay.Constant][324] /* ty=Tensor[(1024), int32] */, %4183) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4250 = fn (%p0655: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0655, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4251 = %4250(%4249) /* ty=Tensor[(1, 128, 1), float32] */;
  %4252 = fn (%p0211: Tensor[(1, 128, 1024), float32], %p1144: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0211, %p1144) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4253 = %4252(%4249, %4251) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4254 = fn (%p0210: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1129 = power(%p0210, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1129, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4255 = %4254(%4253) /* ty=Tensor[(1, 128, 1), float32] */;
  %4256 = fn (%p0209: Tensor[(1, 128, 1), float32], %p1143: Tensor[(1, 128, 1024), float32], %p294: Tensor[(1024), float32], %p319: Tensor[(1024), float32], Primitive=1, hash="920c9953d33193cb") -> Tensor[(1, 128, 1024), int8] {
    %1121 = add(%p0209, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1122 = sqrt(%1121) /* ty=Tensor[(1, 128, 1), float32] */;
    %1123 = divide(%p1143, %1122) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1124 = multiply(%1123, %p294) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1125 = add(%1124, %p319) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1126 = divide(%1125, 0.1643f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1127 = clip(%1126, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1128 = round(%1127) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1128, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4257 = %4256(%4255, %4253, meta[relay.Constant][325] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][326] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4258 = fn (%p0208: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1118 = reshape(%p0208, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1119 = cast(%1118, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1120 = add(%1119, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1120, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4259 = %4258(%4257) /* ty=Tensor[(128, 1024), uint8] */;
  %4260 = fn (%p0207: Tensor[(128, 1024), uint8], %p1142: Tensor[(256, 256, 16, 4), int8], %p293: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %1117 = nn.contrib_dense_pack(%p0207, %p1142, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%1117, %p293) /* ty=Tensor[(128, 4096), int32] */
  };
  %4261 = %4260(%4259, meta[relay.Constant][327] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][328] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %4262 = fn (%p0206: Tensor[(128, 4096), int32], %p1141: Tensor[(4096), float32], Primitive=1, hash="257e51bef451dc74") -> Tensor[(128, 4096), uint8] {
    %1101 = reshape(%p0206, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %1102 = cast(%1101, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %1103 = multiply(%1102, 0.000310941f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1104 = add(%1103, %p1141) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1105 = divide(%1104, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1106 = erf(%1105) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1107 = multiply(%1104, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1108 = add(%1106, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1109 = multiply(%1107, %1108) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1110 = divide(%1109, 0.0337782f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1111 = clip(%1110, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1112 = round(%1111) /* ty=Tensor[(1, 128, 4096), float32] */;
    %1113 = cast(%1112, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %1114 = reshape(%1113, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %1115 = cast(%1114, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %1116 = add(%1115, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%1116, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %4263 = %4262(%4261, meta[relay.Constant][329] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %4264 = fn (%p0205: Tensor[(128, 4096), uint8], %p1140: Tensor[(64, 1024, 16, 4), int8], %p292: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1100 = nn.contrib_dense_pack(%p0205, %p1140, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1100, %p292) /* ty=Tensor[(128, 1024), int32] */
  };
  %4265 = %4264(%4263, meta[relay.Constant][330] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][331] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4266 = fn (%p0204: Tensor[(128, 1024), int32], %p1139: Tensor[(1024), int32], %p291: Tensor[(1, 128, 1024), int8], Primitive=1, hash="5762731b16f4f42d") -> Tensor[(1, 128, 1024), float32] {
    %1086 = reshape(%p0204, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1087 = add(%1086, %p1139) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1088 = clip(%1087, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1089 = cast(%1088, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1090 = multiply(0.0178324f /* ty=float32 */, %1089) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1091 = add(%1090, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1092 = floor(%1091) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1093 = cast(%1092, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1094 = clip(%1093, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1095 = cast(%1094, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1096 = cast(%1095, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1097 = cast(%p291, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1098 = multiply(%1096, 0.047057f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1099 = multiply(%1097, 0.1643f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1098, %1099) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4267 = %4266(%4265, meta[relay.Constant][332] /* ty=Tensor[(1024), int32] */, %4257) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4268 = fn (%p0656: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0656, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4269 = %4268(%4267) /* ty=Tensor[(1, 128, 1), float32] */;
  %4270 = fn (%p0203: Tensor[(1, 128, 1024), float32], %p1138: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0203, %p1138) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4271 = %4270(%4267, %4269) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4272 = fn (%p0202: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1085 = power(%p0202, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1085, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4273 = %4272(%4271) /* ty=Tensor[(1, 128, 1), float32] */;
  %4274 = fn (%p0201: Tensor[(1, 128, 1), float32], %p1137: Tensor[(1, 128, 1024), float32], %p290: Tensor[(1024), float32], %p318: Tensor[(1024), float32], Primitive=1, hash="a6432837e4b46e26") -> Tensor[(1, 128, 1024), int8] {
    %1077 = add(%p0201, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1078 = sqrt(%1077) /* ty=Tensor[(1, 128, 1), float32] */;
    %1079 = divide(%p1137, %1078) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1080 = multiply(%1079, %p290) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1081 = add(%1080, %p318) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1082 = divide(%1081, 0.0805703f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1083 = clip(%1082, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1084 = round(%1083) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1084, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4275 = %4274(%4273, %4271, meta[relay.Constant][333] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][334] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4276 = fn (%p0200: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %1074 = reshape(%p0200, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1075 = cast(%1074, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1076 = add(%1075, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1076, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4277 = %4276(%4275) /* ty=Tensor[(128, 1024), uint8] */;
  %4278 = fn (%p0199: Tensor[(128, 1024), uint8], %p1136: Tensor[(64, 256, 16, 4), int8], %p289: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1073 = nn.contrib_dense_pack(%p0199, %p1136, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1073, %p289) /* ty=Tensor[(128, 1024), int32] */
  };
  %4279 = %4278(%4277, meta[relay.Constant][335] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][336] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4280 = fn (%p0198: Tensor[(128, 1024), int32], %p1135: Tensor[(1024), int32], Primitive=1, hash="a0629be944bd4691") -> Tensor[(16, 128, 64), uint8] {
    %1057 = reshape(%p0198, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1058 = add(%1057, %p1135) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1059 = clip(%1058, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1060 = reshape(%1059, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1061 = transpose(%1060, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1062 = cast(%1061, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1063 = multiply(0.00480824f /* ty=float32 */, %1062) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1064 = add(%1063, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1065 = floor(%1064) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %1066 = cast(%1065, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1067 = clip(%1066, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1068 = cast(%1067, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1069 = broadcast_to(%1068, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %1070 = reshape(%1069, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %1071 = cast(%1070, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %1072 = add(%1071, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%1072, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %4296 = fn (%p0658: Tensor[(128, 1024), uint8], %p1426: Tensor[(64, 256, 16, 4), int8], %p2272: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4295 = nn.contrib_dense_pack(%p0658, %p1426, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4295, %p2272) /* ty=Tensor[(128, 1024), int32] */
  };
  %4297 = %4296(%4277, meta[relay.Constant][338] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][339] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4298 = fn (%p0657: Tensor[(128, 1024), int32], %p1425: Tensor[(1024), int32], Primitive=1, hash="4bb86f35b76e3201") -> Tensor[(16, 128, 64), int8] {
    %4281 = reshape(%p0657, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4282 = add(%4281, %p1425) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4283 = clip(%4282, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4284 = reshape(%4283, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4285 = transpose(%4284, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4286 = cast(%4285, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4287 = multiply(0.00480824f /* ty=float32 */, %4286) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4288 = add(%4287, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4289 = floor(%4288) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4290 = cast(%4289, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4291 = clip(%4290, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4292 = cast(%4291, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4293 = broadcast_to(%4292, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4294 = reshape(%4293, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%4294, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %4300 = %4298(%4297, meta[relay.Constant][340] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %4301 = fn (%p0659: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %4299 = cast(%p0659, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%4299, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %4302 = %4280(%4279, meta[relay.Constant][337] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %4303 = %4301(%4300) /* ty=Tensor[(16, 128), int32] */;
  %4304 = fn (%p0197: Tensor[(16, 128, 64), uint8], %p1134: Tensor[(16, 128, 64), int8], %p288: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %1054 = multiply(128 /* ty=int32 */, %p288) /* ty=Tensor[(16, 128), int32] */;
    %1055 = nn.batch_matmul(%p0197, %p1134, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %1056 = expand_dims(%1054, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%1055, %1056) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %4305 = %4304(%4302, %4300, %4303) /* ty=Tensor[(16, 128, 128), int32] */;
  %4306 = fn (%p0196: Tensor[(16, 128, 128), int32], %p1133: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="d48687569d97f08d") -> Tensor[(1, 16, 128, 128), float32] {
    %1050 = reshape(%p0196, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %1051 = cast(%1050, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1052 = multiply(%1051, 0.00217373f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1053 = divide(%1052, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%1053, %p1133) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %4307 = %4306(%4305, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %4308 = fn (%p0195: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="cabf8bf1703c5176") -> Tensor[(1, 16, 128, 128), int8] {
    %1046 = nn.softmax(%p0195, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1047 = divide(%1046, 0.00499753f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1048 = clip(%1047, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %1049 = round(%1048) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%1049, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %4309 = %4308(%4307) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %4310 = fn (%p0194: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %1042 = broadcast_to(%p0194, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %1043 = reshape(%1042, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %1044 = cast(%1043, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %1045 = add(%1044, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%1045, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %4326 = fn (%p0661: Tensor[(128, 1024), uint8], %p1428: Tensor[(64, 256, 16, 4), int8], %p2273: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4325 = nn.contrib_dense_pack(%p0661, %p1428, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4325, %p2273) /* ty=Tensor[(128, 1024), int32] */
  };
  %4327 = %4326(%4277, meta[relay.Constant][341] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][342] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4328 = fn (%p0660: Tensor[(128, 1024), int32], %p1427: Tensor[(1024), int32], Primitive=1, hash="ae3964e5ba51c5b6") -> Tensor[(16, 64, 128), int8] {
    %4311 = reshape(%p0660, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4312 = add(%4311, %p1427) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4313 = clip(%4312, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4314 = reshape(%4313, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4315 = transpose(%4314, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4316 = cast(%4315, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4317 = multiply(0.00480824f /* ty=float32 */, %4316) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4318 = add(%4317, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4319 = floor(%4318) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4320 = cast(%4319, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4321 = clip(%4320, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4322 = cast(%4321, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4323 = broadcast_to(%4322, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4324 = reshape(%4323, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%4324, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %4330 = %4328(%4327, meta[relay.Constant][343] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %4331 = fn (%p0662: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %4329 = cast(%p0662, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%4329, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %4332 = %4310(%4309) /* ty=Tensor[(16, 128, 128), uint8] */;
  %4333 = %4331(%4330) /* ty=Tensor[(16, 64), int32] */;
  %4334 = fn (%p0193: Tensor[(16, 128, 128), uint8], %p1132: Tensor[(16, 64, 128), int8], %p287: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %1039 = multiply(128 /* ty=int32 */, %p287) /* ty=Tensor[(16, 64), int32] */;
    %1040 = nn.batch_matmul(%p0193, %p1132, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %1041 = expand_dims(%1039, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%1040, %1041) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %4335 = %4334(%4332, %4330, %4333) /* ty=Tensor[(16, 128, 64), int32] */;
  %4336 = fn (%p0192: Tensor[(16, 128, 64), int32], Primitive=1, hash="996fcd2bf87b1d82") -> Tensor[(128, 1024), uint8] {
    %1026 = reshape(%p0192, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %1027 = transpose(%1026, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %1028 = reshape(%1027, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1029 = cast(%1028, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1030 = multiply(0.013799f /* ty=float32 */, %1029) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1031 = add(%1030, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1032 = floor(%1031) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1033 = cast(%1032, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1034 = clip(%1033, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1035 = cast(%1034, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1036 = reshape(%1035, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1037 = cast(%1036, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1038 = add(%1037, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1038, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4337 = %4336(%4335) /* ty=Tensor[(128, 1024), uint8] */;
  %4338 = fn (%p0191: Tensor[(128, 1024), uint8], %p1131: Tensor[(64, 256, 16, 4), int8], %p286: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %1025 = nn.contrib_dense_pack(%p0191, %p1131, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%1025, %p286) /* ty=Tensor[(128, 1024), int32] */
  };
  %4339 = %4338(%4337, meta[relay.Constant][344] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][345] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4340 = fn (%p0190: Tensor[(128, 1024), int32], %p1130: Tensor[(1024), int32], %p285: Tensor[(1, 128, 1024), int8], Primitive=1, hash="d3b740d32302fae7") -> Tensor[(1, 128, 1024), float32] {
    %1011 = reshape(%p0190, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1012 = add(%1011, %p1130) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1013 = clip(%1012, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1014 = cast(%1013, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1015 = multiply(0.00619484f /* ty=float32 */, %1014) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1016 = add(%1015, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1017 = floor(%1016) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1018 = cast(%1017, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %1019 = clip(%1018, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %1020 = cast(%1019, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %1021 = cast(%1020, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1022 = cast(%p285, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %1023 = multiply(%1021, 0.0115148f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1024 = multiply(%1022, 0.0805703f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%1023, %1024) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4341 = %4340(%4339, meta[relay.Constant][346] /* ty=Tensor[(1024), int32] */, %4275) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4342 = fn (%p0663: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0663, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4343 = %4342(%4341) /* ty=Tensor[(1, 128, 1), float32] */;
  %4344 = fn (%p0189: Tensor[(1, 128, 1024), float32], %p1129: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0189, %p1129) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4345 = %4344(%4341, %4343) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4346 = fn (%p0188: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %1010 = power(%p0188, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%1010, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4347 = %4346(%4345) /* ty=Tensor[(1, 128, 1), float32] */;
  %4348 = fn (%p0187: Tensor[(1, 128, 1), float32], %p1128: Tensor[(1, 128, 1024), float32], %p284: Tensor[(1024), float32], %p317: Tensor[(1024), float32], Primitive=1, hash="178e7bfd6b768101") -> Tensor[(1, 128, 1024), int8] {
    %1002 = add(%p0187, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %1003 = sqrt(%1002) /* ty=Tensor[(1, 128, 1), float32] */;
    %1004 = divide(%p1128, %1003) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1005 = multiply(%1004, %p284) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1006 = add(%1005, %p317) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1007 = divide(%1006, 0.264988f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1008 = clip(%1007, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %1009 = round(%1008) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%1009, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4349 = %4348(%4347, %4345, meta[relay.Constant][347] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][348] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4350 = fn (%p0186: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %999 = reshape(%p0186, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %1000 = cast(%999, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %1001 = add(%1000, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%1001, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4351 = %4350(%4349) /* ty=Tensor[(128, 1024), uint8] */;
  %4352 = fn (%p0185: Tensor[(128, 1024), uint8], %p1127: Tensor[(256, 256, 16, 4), int8], %p283: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %998 = nn.contrib_dense_pack(%p0185, %p1127, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%998, %p283) /* ty=Tensor[(128, 4096), int32] */
  };
  %4353 = %4352(%4351, meta[relay.Constant][349] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][350] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %4354 = fn (%p0184: Tensor[(128, 4096), int32], %p1126: Tensor[(4096), float32], Primitive=1, hash="d9f7d3c609b54cc8") -> Tensor[(128, 4096), uint8] {
    %982 = reshape(%p0184, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %983 = cast(%982, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %984 = multiply(%983, 0.000488399f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %985 = add(%984, %p1126) /* ty=Tensor[(1, 128, 4096), float32] */;
    %986 = divide(%985, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %987 = erf(%986) /* ty=Tensor[(1, 128, 4096), float32] */;
    %988 = multiply(%985, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %989 = add(%987, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %990 = multiply(%988, %989) /* ty=Tensor[(1, 128, 4096), float32] */;
    %991 = divide(%990, 0.0387802f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %992 = clip(%991, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %993 = round(%992) /* ty=Tensor[(1, 128, 4096), float32] */;
    %994 = cast(%993, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %995 = reshape(%994, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %996 = cast(%995, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %997 = add(%996, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%997, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %4355 = %4354(%4353, meta[relay.Constant][351] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %4356 = fn (%p0183: Tensor[(128, 4096), uint8], %p1125: Tensor[(64, 1024, 16, 4), int8], %p282: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %981 = nn.contrib_dense_pack(%p0183, %p1125, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%981, %p282) /* ty=Tensor[(128, 1024), int32] */
  };
  %4357 = %4356(%4355, meta[relay.Constant][352] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][353] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4358 = fn (%p0182: Tensor[(128, 1024), int32], %p1124: Tensor[(1024), int32], %p281: Tensor[(1, 128, 1024), int8], Primitive=1, hash="1e210359ad2a201f") -> Tensor[(1, 128, 1024), float32] {
    %967 = reshape(%p0182, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %968 = add(%967, %p1124) /* ty=Tensor[(1, 128, 1024), int32] */;
    %969 = clip(%968, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %970 = cast(%969, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %971 = multiply(0.0259044f /* ty=float32 */, %970) /* ty=Tensor[(1, 128, 1024), float32] */;
    %972 = add(%971, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %973 = floor(%972) /* ty=Tensor[(1, 128, 1024), float32] */;
    %974 = cast(%973, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %975 = clip(%974, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %976 = cast(%975, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %977 = cast(%976, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %978 = cast(%p281, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %979 = multiply(%977, 0.031269f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %980 = multiply(%978, 0.264988f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%979, %980) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4359 = %4358(%4357, meta[relay.Constant][354] /* ty=Tensor[(1024), int32] */, %4349) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4360 = fn (%p0664: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0664, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4361 = %4360(%4359) /* ty=Tensor[(1, 128, 1), float32] */;
  %4362 = fn (%p0181: Tensor[(1, 128, 1024), float32], %p1123: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0181, %p1123) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4363 = %4362(%4359, %4361) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4364 = fn (%p0180: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %966 = power(%p0180, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%966, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4365 = %4364(%4363) /* ty=Tensor[(1, 128, 1), float32] */;
  %4366 = fn (%p0179: Tensor[(1, 128, 1), float32], %p1122: Tensor[(1, 128, 1024), float32], %p280: Tensor[(1024), float32], %p316: Tensor[(1024), float32], Primitive=1, hash="6e0dbd00b7b2c579") -> Tensor[(1, 128, 1024), int8] {
    %958 = add(%p0179, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %959 = sqrt(%958) /* ty=Tensor[(1, 128, 1), float32] */;
    %960 = divide(%p1122, %959) /* ty=Tensor[(1, 128, 1024), float32] */;
    %961 = multiply(%960, %p280) /* ty=Tensor[(1, 128, 1024), float32] */;
    %962 = add(%961, %p316) /* ty=Tensor[(1, 128, 1024), float32] */;
    %963 = divide(%962, 0.0922307f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %964 = clip(%963, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %965 = round(%964) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%965, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4367 = %4366(%4365, %4363, meta[relay.Constant][355] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][356] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4368 = fn (%p0178: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %955 = reshape(%p0178, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %956 = cast(%955, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %957 = add(%956, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%957, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4369 = %4368(%4367) /* ty=Tensor[(128, 1024), uint8] */;
  %4370 = fn (%p0177: Tensor[(128, 1024), uint8], %p1121: Tensor[(64, 256, 16, 4), int8], %p279: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %954 = nn.contrib_dense_pack(%p0177, %p1121, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%954, %p279) /* ty=Tensor[(128, 1024), int32] */
  };
  %4371 = %4370(%4369, meta[relay.Constant][357] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][358] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4372 = fn (%p0176: Tensor[(128, 1024), int32], %p1120: Tensor[(1024), int32], Primitive=1, hash="60240ef341a6bd88") -> Tensor[(16, 128, 64), uint8] {
    %938 = reshape(%p0176, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %939 = add(%938, %p1120) /* ty=Tensor[(1, 128, 1024), int32] */;
    %940 = clip(%939, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %941 = reshape(%940, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %942 = transpose(%941, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %943 = cast(%942, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %944 = multiply(0.00517435f /* ty=float32 */, %943) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %945 = add(%944, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %946 = floor(%945) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %947 = cast(%946, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %948 = clip(%947, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %949 = cast(%948, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %950 = broadcast_to(%949, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %951 = reshape(%950, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %952 = cast(%951, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %953 = add(%952, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%953, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %4388 = fn (%p0666: Tensor[(128, 1024), uint8], %p1430: Tensor[(64, 256, 16, 4), int8], %p2274: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4387 = nn.contrib_dense_pack(%p0666, %p1430, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4387, %p2274) /* ty=Tensor[(128, 1024), int32] */
  };
  %4389 = %4388(%4369, meta[relay.Constant][360] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][361] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4390 = fn (%p0665: Tensor[(128, 1024), int32], %p1429: Tensor[(1024), int32], Primitive=1, hash="f382322f9ba64a79") -> Tensor[(16, 128, 64), int8] {
    %4373 = reshape(%p0665, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4374 = add(%4373, %p1429) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4375 = clip(%4374, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4376 = reshape(%4375, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4377 = transpose(%4376, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4378 = cast(%4377, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4379 = multiply(0.00517435f /* ty=float32 */, %4378) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4380 = add(%4379, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4381 = floor(%4380) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4382 = cast(%4381, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4383 = clip(%4382, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4384 = cast(%4383, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4385 = broadcast_to(%4384, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4386 = reshape(%4385, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%4386, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %4392 = %4390(%4389, meta[relay.Constant][362] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %4393 = fn (%p0667: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %4391 = cast(%p0667, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%4391, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %4394 = %4372(%4371, meta[relay.Constant][359] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %4395 = %4393(%4392) /* ty=Tensor[(16, 128), int32] */;
  %4396 = fn (%p0175: Tensor[(16, 128, 64), uint8], %p1119: Tensor[(16, 128, 64), int8], %p278: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %935 = multiply(128 /* ty=int32 */, %p278) /* ty=Tensor[(16, 128), int32] */;
    %936 = nn.batch_matmul(%p0175, %p1119, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %937 = expand_dims(%935, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%936, %937) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %4397 = %4396(%4394, %4392, %4395) /* ty=Tensor[(16, 128, 128), int32] */;
  %4398 = fn (%p0174: Tensor[(16, 128, 128), int32], %p1118: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="9e2d8635020cd4ec") -> Tensor[(1, 16, 128, 128), float32] {
    %931 = reshape(%p0174, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %932 = cast(%931, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %933 = multiply(%932, 0.00205937f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %934 = divide(%933, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%934, %p1118) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %4399 = %4398(%4397, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %4400 = fn (%p0173: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="58da97eba09cf11b") -> Tensor[(1, 16, 128, 128), int8] {
    %927 = nn.softmax(%p0173, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %928 = divide(%927, 0.00524315f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %929 = clip(%928, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %930 = round(%929) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%930, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %4401 = %4400(%4399) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %4402 = fn (%p0172: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %923 = broadcast_to(%p0172, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %924 = reshape(%923, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %925 = cast(%924, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %926 = add(%925, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%926, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %4418 = fn (%p0669: Tensor[(128, 1024), uint8], %p1432: Tensor[(64, 256, 16, 4), int8], %p2275: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4417 = nn.contrib_dense_pack(%p0669, %p1432, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4417, %p2275) /* ty=Tensor[(128, 1024), int32] */
  };
  %4419 = %4418(%4369, meta[relay.Constant][363] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][364] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4420 = fn (%p0668: Tensor[(128, 1024), int32], %p1431: Tensor[(1024), int32], Primitive=1, hash="db16de20c735e8cc") -> Tensor[(16, 64, 128), int8] {
    %4403 = reshape(%p0668, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4404 = add(%4403, %p1431) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4405 = clip(%4404, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4406 = reshape(%4405, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4407 = transpose(%4406, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4408 = cast(%4407, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4409 = multiply(0.00517435f /* ty=float32 */, %4408) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4410 = add(%4409, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4411 = floor(%4410) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4412 = cast(%4411, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4413 = clip(%4412, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4414 = cast(%4413, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4415 = broadcast_to(%4414, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4416 = reshape(%4415, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%4416, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %4422 = %4420(%4419, meta[relay.Constant][365] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %4423 = fn (%p0670: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %4421 = cast(%p0670, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%4421, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %4424 = %4402(%4401) /* ty=Tensor[(16, 128, 128), uint8] */;
  %4425 = %4423(%4422) /* ty=Tensor[(16, 64), int32] */;
  %4426 = fn (%p0171: Tensor[(16, 128, 128), uint8], %p1117: Tensor[(16, 64, 128), int8], %p277: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %920 = multiply(128 /* ty=int32 */, %p277) /* ty=Tensor[(16, 64), int32] */;
    %921 = nn.batch_matmul(%p0171, %p1117, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %922 = expand_dims(%920, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%921, %922) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %4427 = %4426(%4424, %4422, %4425) /* ty=Tensor[(16, 128, 64), int32] */;
  %4428 = fn (%p0170: Tensor[(16, 128, 64), int32], Primitive=1, hash="a945239018cf9951") -> Tensor[(128, 1024), uint8] {
    %907 = reshape(%p0170, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %908 = transpose(%907, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %909 = reshape(%908, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %910 = cast(%909, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %911 = multiply(0.0157038f /* ty=float32 */, %910) /* ty=Tensor[(1, 128, 1024), float32] */;
    %912 = add(%911, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %913 = floor(%912) /* ty=Tensor[(1, 128, 1024), float32] */;
    %914 = cast(%913, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %915 = clip(%914, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %916 = cast(%915, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %917 = reshape(%916, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %918 = cast(%917, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %919 = add(%918, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%919, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4429 = %4428(%4427) /* ty=Tensor[(128, 1024), uint8] */;
  %4430 = fn (%p0169: Tensor[(128, 1024), uint8], %p1116: Tensor[(64, 256, 16, 4), int8], %p276: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %906 = nn.contrib_dense_pack(%p0169, %p1116, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%906, %p276) /* ty=Tensor[(128, 1024), int32] */
  };
  %4431 = %4430(%4429, meta[relay.Constant][366] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][367] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4432 = fn (%p0168: Tensor[(128, 1024), int32], %p1115: Tensor[(1024), int32], %p275: Tensor[(1, 128, 1024), int8], Primitive=1, hash="144a0beba2a4984a") -> Tensor[(1, 128, 1024), float32] {
    %892 = reshape(%p0168, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %893 = add(%892, %p1115) /* ty=Tensor[(1, 128, 1024), int32] */;
    %894 = clip(%893, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %895 = cast(%894, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %896 = multiply(0.00380417f /* ty=float32 */, %895) /* ty=Tensor[(1, 128, 1024), float32] */;
    %897 = add(%896, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %898 = floor(%897) /* ty=Tensor[(1, 128, 1024), float32] */;
    %899 = cast(%898, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %900 = clip(%899, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %901 = cast(%900, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %902 = cast(%901, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %903 = cast(%p275, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %904 = multiply(%902, 0.0108927f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %905 = multiply(%903, 0.0922307f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%904, %905) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4433 = %4432(%4431, meta[relay.Constant][368] /* ty=Tensor[(1024), int32] */, %4367) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4434 = fn (%p0671: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0671, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4435 = %4434(%4433) /* ty=Tensor[(1, 128, 1), float32] */;
  %4436 = fn (%p0167: Tensor[(1, 128, 1024), float32], %p1114: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0167, %p1114) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4437 = %4436(%4433, %4435) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4438 = fn (%p0166: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %891 = power(%p0166, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%891, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4439 = %4438(%4437) /* ty=Tensor[(1, 128, 1), float32] */;
  %4440 = fn (%p0165: Tensor[(1, 128, 1), float32], %p1113: Tensor[(1, 128, 1024), float32], %p274: Tensor[(1024), float32], %p315: Tensor[(1024), float32], Primitive=1, hash="ae61cb065759a426") -> Tensor[(1, 128, 1024), int8] {
    %883 = add(%p0165, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %884 = sqrt(%883) /* ty=Tensor[(1, 128, 1), float32] */;
    %885 = divide(%p1113, %884) /* ty=Tensor[(1, 128, 1024), float32] */;
    %886 = multiply(%885, %p274) /* ty=Tensor[(1, 128, 1024), float32] */;
    %887 = add(%886, %p315) /* ty=Tensor[(1, 128, 1024), float32] */;
    %888 = divide(%887, 0.306251f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %889 = clip(%888, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %890 = round(%889) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%890, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4441 = %4440(%4439, %4437, meta[relay.Constant][369] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][370] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4442 = fn (%p0164: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %880 = reshape(%p0164, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %881 = cast(%880, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %882 = add(%881, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%882, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4443 = %4442(%4441) /* ty=Tensor[(128, 1024), uint8] */;
  %4444 = fn (%p0163: Tensor[(128, 1024), uint8], %p1112: Tensor[(256, 256, 16, 4), int8], %p273: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %879 = nn.contrib_dense_pack(%p0163, %p1112, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%879, %p273) /* ty=Tensor[(128, 4096), int32] */
  };
  %4445 = %4444(%4443, meta[relay.Constant][371] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][372] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %4446 = fn (%p0162: Tensor[(128, 4096), int32], %p1111: Tensor[(4096), float32], Primitive=1, hash="e635af41c32d0da2") -> Tensor[(128, 4096), uint8] {
    %863 = reshape(%p0162, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %864 = cast(%863, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %865 = multiply(%864, 0.000552891f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %866 = add(%865, %p1111) /* ty=Tensor[(1, 128, 4096), float32] */;
    %867 = divide(%866, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %868 = erf(%867) /* ty=Tensor[(1, 128, 4096), float32] */;
    %869 = multiply(%866, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %870 = add(%868, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %871 = multiply(%869, %870) /* ty=Tensor[(1, 128, 4096), float32] */;
    %872 = divide(%871, 0.047786f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %873 = clip(%872, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %874 = round(%873) /* ty=Tensor[(1, 128, 4096), float32] */;
    %875 = cast(%874, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %876 = reshape(%875, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %877 = cast(%876, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %878 = add(%877, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%878, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %4447 = %4446(%4445, meta[relay.Constant][373] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %4448 = fn (%p0161: Tensor[(128, 4096), uint8], %p1110: Tensor[(64, 1024, 16, 4), int8], %p272: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %862 = nn.contrib_dense_pack(%p0161, %p1110, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%862, %p272) /* ty=Tensor[(128, 1024), int32] */
  };
  %4449 = %4448(%4447, meta[relay.Constant][374] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][375] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4450 = fn (%p0160: Tensor[(128, 1024), int32], %p1109: Tensor[(1024), int32], %p271: Tensor[(1, 128, 1024), int8], Primitive=1, hash="265ef07df6cdd6cd") -> Tensor[(1, 128, 1024), float32] {
    %848 = reshape(%p0160, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %849 = add(%848, %p1109) /* ty=Tensor[(1, 128, 1024), int32] */;
    %850 = clip(%849, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %851 = cast(%850, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %852 = multiply(0.0188625f /* ty=float32 */, %851) /* ty=Tensor[(1, 128, 1024), float32] */;
    %853 = add(%852, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %854 = floor(%853) /* ty=Tensor[(1, 128, 1024), float32] */;
    %855 = cast(%854, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %856 = clip(%855, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %857 = cast(%856, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %858 = cast(%857, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %859 = cast(%p271, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %860 = multiply(%858, 0.0250569f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %861 = multiply(%859, 0.306251f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%860, %861) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4451 = %4450(%4449, meta[relay.Constant][376] /* ty=Tensor[(1024), int32] */, %4441) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4452 = fn (%p0672: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0672, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4453 = %4452(%4451) /* ty=Tensor[(1, 128, 1), float32] */;
  %4454 = fn (%p0159: Tensor[(1, 128, 1024), float32], %p1108: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0159, %p1108) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4455 = %4454(%4451, %4453) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4456 = fn (%p0158: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %847 = power(%p0158, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%847, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4457 = %4456(%4455) /* ty=Tensor[(1, 128, 1), float32] */;
  %4458 = fn (%p0157: Tensor[(1, 128, 1), float32], %p1107: Tensor[(1, 128, 1024), float32], %p270: Tensor[(1024), float32], %p314: Tensor[(1024), float32], Primitive=1, hash="722c14f060a7d90e") -> Tensor[(1, 128, 1024), int8] {
    %839 = add(%p0157, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %840 = sqrt(%839) /* ty=Tensor[(1, 128, 1), float32] */;
    %841 = divide(%p1107, %840) /* ty=Tensor[(1, 128, 1024), float32] */;
    %842 = multiply(%841, %p270) /* ty=Tensor[(1, 128, 1024), float32] */;
    %843 = add(%842, %p314) /* ty=Tensor[(1, 128, 1024), float32] */;
    %844 = divide(%843, 0.084264f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %845 = clip(%844, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %846 = round(%845) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%846, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4459 = %4458(%4457, %4455, meta[relay.Constant][377] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][378] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4460 = fn (%p0156: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %836 = reshape(%p0156, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %837 = cast(%836, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %838 = add(%837, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%838, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4461 = %4460(%4459) /* ty=Tensor[(128, 1024), uint8] */;
  %4462 = fn (%p0155: Tensor[(128, 1024), uint8], %p1106: Tensor[(64, 256, 16, 4), int8], %p269: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %835 = nn.contrib_dense_pack(%p0155, %p1106, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%835, %p269) /* ty=Tensor[(128, 1024), int32] */
  };
  %4463 = %4462(%4461, meta[relay.Constant][379] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][380] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4464 = fn (%p0154: Tensor[(128, 1024), int32], %p1105: Tensor[(1024), int32], Primitive=1, hash="c3a2f98af3752679") -> Tensor[(16, 128, 64), uint8] {
    %819 = reshape(%p0154, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %820 = add(%819, %p1105) /* ty=Tensor[(1, 128, 1024), int32] */;
    %821 = clip(%820, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %822 = reshape(%821, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %823 = transpose(%822, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %824 = cast(%823, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %825 = multiply(0.0052924f /* ty=float32 */, %824) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %826 = add(%825, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %827 = floor(%826) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %828 = cast(%827, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %829 = clip(%828, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %830 = cast(%829, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %831 = broadcast_to(%830, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %832 = reshape(%831, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %833 = cast(%832, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %834 = add(%833, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%834, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %4480 = fn (%p0674: Tensor[(128, 1024), uint8], %p1434: Tensor[(64, 256, 16, 4), int8], %p2276: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4479 = nn.contrib_dense_pack(%p0674, %p1434, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4479, %p2276) /* ty=Tensor[(128, 1024), int32] */
  };
  %4481 = %4480(%4461, meta[relay.Constant][382] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][383] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4482 = fn (%p0673: Tensor[(128, 1024), int32], %p1433: Tensor[(1024), int32], Primitive=1, hash="05dbaee629949006") -> Tensor[(16, 128, 64), int8] {
    %4465 = reshape(%p0673, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4466 = add(%4465, %p1433) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4467 = clip(%4466, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4468 = reshape(%4467, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4469 = transpose(%4468, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4470 = cast(%4469, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4471 = multiply(0.0052924f /* ty=float32 */, %4470) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4472 = add(%4471, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4473 = floor(%4472) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4474 = cast(%4473, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4475 = clip(%4474, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4476 = cast(%4475, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4477 = broadcast_to(%4476, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4478 = reshape(%4477, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%4478, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %4484 = %4482(%4481, meta[relay.Constant][384] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %4485 = fn (%p0675: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %4483 = cast(%p0675, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%4483, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %4486 = %4464(%4463, meta[relay.Constant][381] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %4487 = %4485(%4484) /* ty=Tensor[(16, 128), int32] */;
  %4488 = fn (%p0153: Tensor[(16, 128, 64), uint8], %p1104: Tensor[(16, 128, 64), int8], %p268: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %816 = multiply(128 /* ty=int32 */, %p268) /* ty=Tensor[(16, 128), int32] */;
    %817 = nn.batch_matmul(%p0153, %p1104, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %818 = expand_dims(%816, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%817, %818) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %4489 = %4488(%4486, %4484, %4487) /* ty=Tensor[(16, 128, 128), int32] */;
  %4490 = fn (%p0152: Tensor[(16, 128, 128), int32], %p1103: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="8bc987f40561342e") -> Tensor[(1, 16, 128, 128), float32] {
    %812 = reshape(%p0152, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %813 = cast(%812, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %814 = multiply(%813, 0.00197522f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %815 = divide(%814, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%815, %p1103) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %4491 = %4490(%4489, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %4492 = fn (%p0151: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="794558de410fb6e3") -> Tensor[(1, 16, 128, 128), int8] {
    %808 = nn.softmax(%p0151, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %809 = divide(%808, 0.00574399f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %810 = clip(%809, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %811 = round(%810) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%811, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %4493 = %4492(%4491) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %4494 = fn (%p0150: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %804 = broadcast_to(%p0150, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %805 = reshape(%804, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %806 = cast(%805, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %807 = add(%806, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%807, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %4510 = fn (%p0677: Tensor[(128, 1024), uint8], %p1436: Tensor[(64, 256, 16, 4), int8], %p2277: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4509 = nn.contrib_dense_pack(%p0677, %p1436, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4509, %p2277) /* ty=Tensor[(128, 1024), int32] */
  };
  %4511 = %4510(%4461, meta[relay.Constant][385] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][386] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4512 = fn (%p0676: Tensor[(128, 1024), int32], %p1435: Tensor[(1024), int32], Primitive=1, hash="917e35ae2a2f7b2d") -> Tensor[(16, 64, 128), int8] {
    %4495 = reshape(%p0676, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4496 = add(%4495, %p1435) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4497 = clip(%4496, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4498 = reshape(%4497, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4499 = transpose(%4498, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4500 = cast(%4499, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4501 = multiply(0.0052924f /* ty=float32 */, %4500) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4502 = add(%4501, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4503 = floor(%4502) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4504 = cast(%4503, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4505 = clip(%4504, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4506 = cast(%4505, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4507 = broadcast_to(%4506, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4508 = reshape(%4507, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%4508, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %4514 = %4512(%4511, meta[relay.Constant][387] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %4515 = fn (%p0678: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %4513 = cast(%p0678, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%4513, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %4516 = %4494(%4493) /* ty=Tensor[(16, 128, 128), uint8] */;
  %4517 = %4515(%4514) /* ty=Tensor[(16, 64), int32] */;
  %4518 = fn (%p0149: Tensor[(16, 128, 128), uint8], %p1102: Tensor[(16, 64, 128), int8], %p267: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %801 = multiply(128 /* ty=int32 */, %p267) /* ty=Tensor[(16, 64), int32] */;
    %802 = nn.batch_matmul(%p0149, %p1102, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %803 = expand_dims(%801, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%802, %803) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %4519 = %4518(%4516, %4514, %4517) /* ty=Tensor[(16, 128, 64), int32] */;
  %4520 = fn (%p0148: Tensor[(16, 128, 64), int32], Primitive=1, hash="1319408c85bd6bab") -> Tensor[(128, 1024), uint8] {
    %788 = reshape(%p0148, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %789 = transpose(%788, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %790 = reshape(%789, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %791 = cast(%790, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %792 = multiply(0.020692f /* ty=float32 */, %791) /* ty=Tensor[(1, 128, 1024), float32] */;
    %793 = add(%792, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %794 = floor(%793) /* ty=Tensor[(1, 128, 1024), float32] */;
    %795 = cast(%794, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %796 = clip(%795, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %797 = cast(%796, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %798 = reshape(%797, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %799 = cast(%798, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %800 = add(%799, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%800, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4521 = %4520(%4519) /* ty=Tensor[(128, 1024), uint8] */;
  %4522 = fn (%p0147: Tensor[(128, 1024), uint8], %p1101: Tensor[(64, 256, 16, 4), int8], %p266: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %787 = nn.contrib_dense_pack(%p0147, %p1101, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%787, %p266) /* ty=Tensor[(128, 1024), int32] */
  };
  %4523 = %4522(%4521, meta[relay.Constant][388] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][389] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4524 = fn (%p0146: Tensor[(128, 1024), int32], %p1100: Tensor[(1024), int32], %p265: Tensor[(1, 128, 1024), int8], Primitive=1, hash="2673ce8940940318") -> Tensor[(1, 128, 1024), float32] {
    %773 = reshape(%p0146, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %774 = add(%773, %p1100) /* ty=Tensor[(1, 128, 1024), int32] */;
    %775 = clip(%774, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %776 = cast(%775, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %777 = multiply(0.0016007f /* ty=float32 */, %776) /* ty=Tensor[(1, 128, 1024), float32] */;
    %778 = add(%777, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %779 = floor(%778) /* ty=Tensor[(1, 128, 1024), float32] */;
    %780 = cast(%779, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %781 = clip(%780, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %782 = cast(%781, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %783 = cast(%782, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %784 = cast(%p265, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %785 = multiply(%783, 0.00941476f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %786 = multiply(%784, 0.084264f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%785, %786) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4525 = %4524(%4523, meta[relay.Constant][390] /* ty=Tensor[(1024), int32] */, %4459) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4526 = fn (%p0679: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0679, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4527 = %4526(%4525) /* ty=Tensor[(1, 128, 1), float32] */;
  %4528 = fn (%p0145: Tensor[(1, 128, 1024), float32], %p199: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0145, %p199) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4529 = %4528(%4525, %4527) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4530 = fn (%p0144: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %772 = power(%p0144, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%772, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4531 = %4530(%4529) /* ty=Tensor[(1, 128, 1), float32] */;
  %4532 = fn (%p0143: Tensor[(1, 128, 1), float32], %p198: Tensor[(1, 128, 1024), float32], %p264: Tensor[(1024), float32], %p313: Tensor[(1024), float32], Primitive=1, hash="f6c8bcf23970810f") -> Tensor[(1, 128, 1024), int8] {
    %764 = add(%p0143, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %765 = sqrt(%764) /* ty=Tensor[(1, 128, 1), float32] */;
    %766 = divide(%p198, %765) /* ty=Tensor[(1, 128, 1024), float32] */;
    %767 = multiply(%766, %p264) /* ty=Tensor[(1, 128, 1024), float32] */;
    %768 = add(%767, %p313) /* ty=Tensor[(1, 128, 1024), float32] */;
    %769 = divide(%768, 0.251456f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %770 = clip(%769, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %771 = round(%770) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%771, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4533 = %4532(%4531, %4529, meta[relay.Constant][391] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][392] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4534 = fn (%p0142: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %761 = reshape(%p0142, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %762 = cast(%761, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %763 = add(%762, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%763, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4535 = %4534(%4533) /* ty=Tensor[(128, 1024), uint8] */;
  %4536 = fn (%p0141: Tensor[(128, 1024), uint8], %p197: Tensor[(256, 256, 16, 4), int8], %p263: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %760 = nn.contrib_dense_pack(%p0141, %p197, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%760, %p263) /* ty=Tensor[(128, 4096), int32] */
  };
  %4537 = %4536(%4535, meta[relay.Constant][393] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][394] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %4538 = fn (%p0140: Tensor[(128, 4096), int32], %p196: Tensor[(4096), float32], Primitive=1, hash="d6ef926225c83e77") -> Tensor[(128, 4096), uint8] {
    %744 = reshape(%p0140, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %745 = cast(%744, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %746 = multiply(%745, 0.00112479f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %747 = add(%746, %p196) /* ty=Tensor[(1, 128, 4096), float32] */;
    %748 = divide(%747, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %749 = erf(%748) /* ty=Tensor[(1, 128, 4096), float32] */;
    %750 = multiply(%747, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %751 = add(%749, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %752 = multiply(%750, %751) /* ty=Tensor[(1, 128, 4096), float32] */;
    %753 = divide(%752, 0.0367637f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %754 = clip(%753, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %755 = round(%754) /* ty=Tensor[(1, 128, 4096), float32] */;
    %756 = cast(%755, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %757 = reshape(%756, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %758 = cast(%757, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %759 = add(%758, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%759, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %4539 = %4538(%4537, meta[relay.Constant][395] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %4540 = fn (%p0139: Tensor[(128, 4096), uint8], %p195: Tensor[(64, 1024, 16, 4), int8], %p262: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %743 = nn.contrib_dense_pack(%p0139, %p195, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%743, %p262) /* ty=Tensor[(128, 1024), int32] */
  };
  %4541 = %4540(%4539, meta[relay.Constant][396] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][397] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4542 = fn (%p0138: Tensor[(128, 1024), int32], %p194: Tensor[(1024), int32], %p261: Tensor[(1, 128, 1024), int8], Primitive=1, hash="231c3c3ac2649f3c") -> Tensor[(1, 128, 1024), float32] {
    %729 = reshape(%p0138, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %730 = add(%729, %p194) /* ty=Tensor[(1, 128, 1024), int32] */;
    %731 = clip(%730, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %732 = cast(%731, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %733 = multiply(0.0496761f /* ty=float32 */, %732) /* ty=Tensor[(1, 128, 1024), float32] */;
    %734 = add(%733, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %735 = floor(%734) /* ty=Tensor[(1, 128, 1024), float32] */;
    %736 = cast(%735, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %737 = clip(%736, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %738 = cast(%737, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %739 = cast(%738, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %740 = cast(%p261, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %741 = multiply(%739, 0.0259907f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %742 = multiply(%740, 0.251456f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%741, %742) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4543 = %4542(%4541, meta[relay.Constant][398] /* ty=Tensor[(1024), int32] */, %4533) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4544 = fn (%p0680: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0680, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4545 = %4544(%4543) /* ty=Tensor[(1, 128, 1), float32] */;
  %4546 = fn (%p0137: Tensor[(1, 128, 1024), float32], %p193: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0137, %p193) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4547 = %4546(%4543, %4545) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4548 = fn (%p0136: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %728 = power(%p0136, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%728, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4549 = %4548(%4547) /* ty=Tensor[(1, 128, 1), float32] */;
  %4550 = fn (%p0135: Tensor[(1, 128, 1), float32], %p192: Tensor[(1, 128, 1024), float32], %p260: Tensor[(1024), float32], %p312: Tensor[(1024), float32], Primitive=1, hash="af238386ccfa73c2") -> Tensor[(1, 128, 1024), int8] {
    %720 = add(%p0135, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %721 = sqrt(%720) /* ty=Tensor[(1, 128, 1), float32] */;
    %722 = divide(%p192, %721) /* ty=Tensor[(1, 128, 1024), float32] */;
    %723 = multiply(%722, %p260) /* ty=Tensor[(1, 128, 1024), float32] */;
    %724 = add(%723, %p312) /* ty=Tensor[(1, 128, 1024), float32] */;
    %725 = divide(%724, 0.0714633f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %726 = clip(%725, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %727 = round(%726) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%727, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4551 = %4550(%4549, %4547, meta[relay.Constant][399] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][400] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4552 = fn (%p0134: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %717 = reshape(%p0134, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %718 = cast(%717, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %719 = add(%718, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%719, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4553 = %4552(%4551) /* ty=Tensor[(128, 1024), uint8] */;
  %4554 = fn (%p0133: Tensor[(128, 1024), uint8], %p191: Tensor[(64, 256, 16, 4), int8], %p259: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %716 = nn.contrib_dense_pack(%p0133, %p191, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%716, %p259) /* ty=Tensor[(128, 1024), int32] */
  };
  %4555 = %4554(%4553, meta[relay.Constant][401] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][402] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4556 = fn (%p0132: Tensor[(128, 1024), int32], %p190: Tensor[(1024), int32], Primitive=1, hash="7552a7241b169724") -> Tensor[(16, 128, 64), uint8] {
    %700 = reshape(%p0132, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %701 = add(%700, %p190) /* ty=Tensor[(1, 128, 1024), int32] */;
    %702 = clip(%701, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %703 = reshape(%702, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %704 = transpose(%703, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %705 = cast(%704, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %706 = multiply(0.00341718f /* ty=float32 */, %705) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %707 = add(%706, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %708 = floor(%707) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %709 = cast(%708, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %710 = clip(%709, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %711 = cast(%710, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %712 = broadcast_to(%711, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %713 = reshape(%712, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %714 = cast(%713, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %715 = add(%714, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%715, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %4572 = fn (%p0682: Tensor[(128, 1024), uint8], %p1438: Tensor[(64, 256, 16, 4), int8], %p2278: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4571 = nn.contrib_dense_pack(%p0682, %p1438, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4571, %p2278) /* ty=Tensor[(128, 1024), int32] */
  };
  %4573 = %4572(%4553, meta[relay.Constant][404] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][405] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4574 = fn (%p0681: Tensor[(128, 1024), int32], %p1437: Tensor[(1024), int32], Primitive=1, hash="b1ef4e129f591bed") -> Tensor[(16, 128, 64), int8] {
    %4557 = reshape(%p0681, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4558 = add(%4557, %p1437) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4559 = clip(%4558, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4560 = reshape(%4559, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4561 = transpose(%4560, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4562 = cast(%4561, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4563 = multiply(0.00341718f /* ty=float32 */, %4562) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4564 = add(%4563, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4565 = floor(%4564) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4566 = cast(%4565, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4567 = clip(%4566, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4568 = cast(%4567, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4569 = broadcast_to(%4568, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4570 = reshape(%4569, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%4570, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %4576 = %4574(%4573, meta[relay.Constant][406] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %4577 = fn (%p0683: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %4575 = cast(%p0683, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%4575, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %4578 = %4556(%4555, meta[relay.Constant][403] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %4579 = %4577(%4576) /* ty=Tensor[(16, 128), int32] */;
  %4580 = fn (%p0131: Tensor[(16, 128, 64), uint8], %p189: Tensor[(16, 128, 64), int8], %p258: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %697 = multiply(128 /* ty=int32 */, %p258) /* ty=Tensor[(16, 128), int32] */;
    %698 = nn.batch_matmul(%p0131, %p189, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %699 = expand_dims(%697, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%698, %699) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %4581 = %4580(%4578, %4576, %4579) /* ty=Tensor[(16, 128, 128), int32] */;
  %4582 = fn (%p0130: Tensor[(16, 128, 128), int32], %p188: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="f7160458732c0d43") -> Tensor[(1, 16, 128, 128), float32] {
    %693 = reshape(%p0130, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %694 = cast(%693, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %695 = multiply(%694, 0.00272001f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %696 = divide(%695, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%696, %p188) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %4583 = %4582(%4581, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %4584 = fn (%p0129: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="b57e9bd65c844d7a") -> Tensor[(1, 16, 128, 128), int8] {
    %689 = nn.softmax(%p0129, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %690 = divide(%689, 0.00637493f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %691 = clip(%690, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %692 = round(%691) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%692, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %4585 = %4584(%4583) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %4586 = fn (%p0128: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %685 = broadcast_to(%p0128, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %686 = reshape(%685, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %687 = cast(%686, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %688 = add(%687, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%688, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %4602 = fn (%p0685: Tensor[(128, 1024), uint8], %p1440: Tensor[(64, 256, 16, 4), int8], %p2279: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4601 = nn.contrib_dense_pack(%p0685, %p1440, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4601, %p2279) /* ty=Tensor[(128, 1024), int32] */
  };
  %4603 = %4602(%4553, meta[relay.Constant][407] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][408] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4604 = fn (%p0684: Tensor[(128, 1024), int32], %p1439: Tensor[(1024), int32], Primitive=1, hash="4e03689408b0cc7d") -> Tensor[(16, 64, 128), int8] {
    %4587 = reshape(%p0684, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4588 = add(%4587, %p1439) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4589 = clip(%4588, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4590 = reshape(%4589, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4591 = transpose(%4590, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4592 = cast(%4591, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4593 = multiply(0.00341718f /* ty=float32 */, %4592) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4594 = add(%4593, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4595 = floor(%4594) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4596 = cast(%4595, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4597 = clip(%4596, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4598 = cast(%4597, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4599 = broadcast_to(%4598, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4600 = reshape(%4599, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%4600, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %4606 = %4604(%4603, meta[relay.Constant][409] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %4607 = fn (%p0686: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %4605 = cast(%p0686, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%4605, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %4608 = %4586(%4585) /* ty=Tensor[(16, 128, 128), uint8] */;
  %4609 = %4607(%4606) /* ty=Tensor[(16, 64), int32] */;
  %4610 = fn (%p0127: Tensor[(16, 128, 128), uint8], %p187: Tensor[(16, 64, 128), int8], %p257: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %682 = multiply(128 /* ty=int32 */, %p257) /* ty=Tensor[(16, 64), int32] */;
    %683 = nn.batch_matmul(%p0127, %p187, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %684 = expand_dims(%682, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%683, %684) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %4611 = %4610(%4608, %4606, %4609) /* ty=Tensor[(16, 128, 64), int32] */;
  %4612 = fn (%p0126: Tensor[(16, 128, 64), int32], Primitive=1, hash="4a75acd49a26bc65") -> Tensor[(128, 1024), uint8] {
    %669 = reshape(%p0126, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %670 = transpose(%669, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %671 = reshape(%670, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %672 = cast(%671, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %673 = multiply(0.0185889f /* ty=float32 */, %672) /* ty=Tensor[(1, 128, 1024), float32] */;
    %674 = add(%673, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %675 = floor(%674) /* ty=Tensor[(1, 128, 1024), float32] */;
    %676 = cast(%675, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %677 = clip(%676, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %678 = cast(%677, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %679 = reshape(%678, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %680 = cast(%679, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %681 = add(%680, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%681, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4613 = %4612(%4611) /* ty=Tensor[(128, 1024), uint8] */;
  %4614 = fn (%p0125: Tensor[(128, 1024), uint8], %p186: Tensor[(64, 256, 16, 4), int8], %p256: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %668 = nn.contrib_dense_pack(%p0125, %p186, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%668, %p256) /* ty=Tensor[(128, 1024), int32] */
  };
  %4615 = %4614(%4613, meta[relay.Constant][410] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][411] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4616 = fn (%p0124: Tensor[(128, 1024), int32], %p185: Tensor[(1024), int32], %p255: Tensor[(1, 128, 1024), int8], Primitive=1, hash="b62dd7add8b85099") -> Tensor[(1, 128, 1024), float32] {
    %654 = reshape(%p0124, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %655 = add(%654, %p185) /* ty=Tensor[(1, 128, 1024), int32] */;
    %656 = clip(%655, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %657 = cast(%656, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %658 = multiply(0.00148168f /* ty=float32 */, %657) /* ty=Tensor[(1, 128, 1024), float32] */;
    %659 = add(%658, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %660 = floor(%659) /* ty=Tensor[(1, 128, 1024), float32] */;
    %661 = cast(%660, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %662 = clip(%661, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %663 = cast(%662, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %664 = cast(%663, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %665 = cast(%p255, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %666 = multiply(%664, 0.0140143f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %667 = multiply(%665, 0.0714633f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%666, %667) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4617 = %4616(%4615, meta[relay.Constant][412] /* ty=Tensor[(1024), int32] */, %4551) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4618 = fn (%p0687: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0687, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4619 = %4618(%4617) /* ty=Tensor[(1, 128, 1), float32] */;
  %4620 = fn (%p0123: Tensor[(1, 128, 1024), float32], %p184: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0123, %p184) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4621 = %4620(%4617, %4619) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4622 = fn (%p0122: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %653 = power(%p0122, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%653, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4623 = %4622(%4621) /* ty=Tensor[(1, 128, 1), float32] */;
  %4624 = fn (%p0121: Tensor[(1, 128, 1), float32], %p183: Tensor[(1, 128, 1024), float32], %p254: Tensor[(1024), float32], %p311: Tensor[(1024), float32], Primitive=1, hash="b9af34e8514edd4a") -> Tensor[(1, 128, 1024), int8] {
    %645 = add(%p0121, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %646 = sqrt(%645) /* ty=Tensor[(1, 128, 1), float32] */;
    %647 = divide(%p183, %646) /* ty=Tensor[(1, 128, 1024), float32] */;
    %648 = multiply(%647, %p254) /* ty=Tensor[(1, 128, 1024), float32] */;
    %649 = add(%648, %p311) /* ty=Tensor[(1, 128, 1024), float32] */;
    %650 = divide(%649, 0.208032f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %651 = clip(%650, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %652 = round(%651) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%652, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4625 = %4624(%4623, %4621, meta[relay.Constant][413] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][414] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4626 = fn (%p0120: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %642 = reshape(%p0120, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %643 = cast(%642, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %644 = add(%643, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%644, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4627 = %4626(%4625) /* ty=Tensor[(128, 1024), uint8] */;
  %4628 = fn (%p0119: Tensor[(128, 1024), uint8], %p182: Tensor[(256, 256, 16, 4), int8], %p253: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %641 = nn.contrib_dense_pack(%p0119, %p182, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%641, %p253) /* ty=Tensor[(128, 4096), int32] */
  };
  %4629 = %4628(%4627, meta[relay.Constant][415] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][416] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %4630 = fn (%p0118: Tensor[(128, 4096), int32], %p181: Tensor[(4096), float32], Primitive=1, hash="7dabd854c2b2ee35") -> Tensor[(128, 4096), uint8] {
    %625 = reshape(%p0118, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %626 = cast(%625, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %627 = multiply(%626, 0.00188848f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %628 = add(%627, %p181) /* ty=Tensor[(1, 128, 4096), float32] */;
    %629 = divide(%628, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %630 = erf(%629) /* ty=Tensor[(1, 128, 4096), float32] */;
    %631 = multiply(%628, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %632 = add(%630, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %633 = multiply(%631, %632) /* ty=Tensor[(1, 128, 4096), float32] */;
    %634 = divide(%633, 0.0263559f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %635 = clip(%634, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %636 = round(%635) /* ty=Tensor[(1, 128, 4096), float32] */;
    %637 = cast(%636, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %638 = reshape(%637, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %639 = cast(%638, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %640 = add(%639, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%640, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %4631 = %4630(%4629, meta[relay.Constant][417] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %4632 = fn (%p0117: Tensor[(128, 4096), uint8], %p180: Tensor[(64, 1024, 16, 4), int8], %p252: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %624 = nn.contrib_dense_pack(%p0117, %p180, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%624, %p252) /* ty=Tensor[(128, 1024), int32] */
  };
  %4633 = %4632(%4631, meta[relay.Constant][418] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][419] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4634 = fn (%p0116: Tensor[(128, 1024), int32], %p179: Tensor[(1024), int32], %p251: Tensor[(1, 128, 1024), int8], Primitive=1, hash="b459fc4b31668779") -> Tensor[(1, 128, 1024), float32] {
    %610 = reshape(%p0116, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %611 = add(%610, %p179) /* ty=Tensor[(1, 128, 1024), int32] */;
    %612 = clip(%611, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %613 = cast(%612, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %614 = multiply(0.0547605f /* ty=float32 */, %613) /* ty=Tensor[(1, 128, 1024), float32] */;
    %615 = add(%614, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %616 = floor(%615) /* ty=Tensor[(1, 128, 1024), float32] */;
    %617 = cast(%616, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %618 = clip(%617, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %619 = cast(%618, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %620 = cast(%619, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %621 = cast(%p251, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %622 = multiply(%620, 0.0206429f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %623 = multiply(%621, 0.208032f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%622, %623) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4635 = %4634(%4633, meta[relay.Constant][420] /* ty=Tensor[(1024), int32] */, %4625) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4636 = fn (%p0688: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0688, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4637 = %4636(%4635) /* ty=Tensor[(1, 128, 1), float32] */;
  %4638 = fn (%p0115: Tensor[(1, 128, 1024), float32], %p178: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0115, %p178) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4639 = %4638(%4635, %4637) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4640 = fn (%p0114: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %609 = power(%p0114, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%609, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4641 = %4640(%4639) /* ty=Tensor[(1, 128, 1), float32] */;
  %4642 = fn (%p0113: Tensor[(1, 128, 1), float32], %p177: Tensor[(1, 128, 1024), float32], %p250: Tensor[(1024), float32], %p310: Tensor[(1024), float32], Primitive=1, hash="2aa8a1fe6d9d3bbb") -> Tensor[(1, 128, 1024), int8] {
    %601 = add(%p0113, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %602 = sqrt(%601) /* ty=Tensor[(1, 128, 1), float32] */;
    %603 = divide(%p177, %602) /* ty=Tensor[(1, 128, 1024), float32] */;
    %604 = multiply(%603, %p250) /* ty=Tensor[(1, 128, 1024), float32] */;
    %605 = add(%604, %p310) /* ty=Tensor[(1, 128, 1024), float32] */;
    %606 = divide(%605, 0.0559748f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %607 = clip(%606, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %608 = round(%607) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%608, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4643 = %4642(%4641, %4639, meta[relay.Constant][421] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][422] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4644 = fn (%p0112: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %598 = reshape(%p0112, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %599 = cast(%598, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %600 = add(%599, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%600, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4645 = %4644(%4643) /* ty=Tensor[(128, 1024), uint8] */;
  %4646 = fn (%p0111: Tensor[(128, 1024), uint8], %p176: Tensor[(64, 256, 16, 4), int8], %p249: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %597 = nn.contrib_dense_pack(%p0111, %p176, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%597, %p249) /* ty=Tensor[(128, 1024), int32] */
  };
  %4647 = %4646(%4645, meta[relay.Constant][423] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][424] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4648 = fn (%p0110: Tensor[(128, 1024), int32], %p175: Tensor[(1024), int32], Primitive=1, hash="479a2445c862b1a2") -> Tensor[(16, 128, 64), uint8] {
    %581 = reshape(%p0110, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %582 = add(%581, %p175) /* ty=Tensor[(1, 128, 1024), int32] */;
    %583 = clip(%582, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %584 = reshape(%583, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %585 = transpose(%584, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %586 = cast(%585, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %587 = multiply(0.00250194f /* ty=float32 */, %586) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %588 = add(%587, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %589 = floor(%588) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %590 = cast(%589, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %591 = clip(%590, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %592 = cast(%591, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %593 = broadcast_to(%592, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %594 = reshape(%593, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %595 = cast(%594, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %596 = add(%595, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%596, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %4664 = fn (%p0690: Tensor[(128, 1024), uint8], %p1442: Tensor[(64, 256, 16, 4), int8], %p2280: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4663 = nn.contrib_dense_pack(%p0690, %p1442, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4663, %p2280) /* ty=Tensor[(128, 1024), int32] */
  };
  %4665 = %4664(%4645, meta[relay.Constant][426] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][427] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4666 = fn (%p0689: Tensor[(128, 1024), int32], %p1441: Tensor[(1024), int32], Primitive=1, hash="c08a1afc21b5b790") -> Tensor[(16, 128, 64), int8] {
    %4649 = reshape(%p0689, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4650 = add(%4649, %p1441) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4651 = clip(%4650, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4652 = reshape(%4651, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4653 = transpose(%4652, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4654 = cast(%4653, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4655 = multiply(0.00250194f /* ty=float32 */, %4654) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4656 = add(%4655, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4657 = floor(%4656) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4658 = cast(%4657, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4659 = clip(%4658, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4660 = cast(%4659, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4661 = broadcast_to(%4660, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4662 = reshape(%4661, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%4662, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %4668 = %4666(%4665, meta[relay.Constant][428] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %4669 = fn (%p0691: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %4667 = cast(%p0691, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%4667, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %4670 = %4648(%4647, meta[relay.Constant][425] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %4671 = %4669(%4668) /* ty=Tensor[(16, 128), int32] */;
  %4672 = fn (%p0109: Tensor[(16, 128, 64), uint8], %p174: Tensor[(16, 128, 64), int8], %p248: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %578 = multiply(128 /* ty=int32 */, %p248) /* ty=Tensor[(16, 128), int32] */;
    %579 = nn.batch_matmul(%p0109, %p174, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %580 = expand_dims(%578, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%579, %580) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %4673 = %4672(%4670, %4668, %4671) /* ty=Tensor[(16, 128, 128), int32] */;
  %4674 = fn (%p0108: Tensor[(16, 128, 128), int32], %p173: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="6c6b999de1f3d8f8") -> Tensor[(1, 16, 128, 128), float32] {
    %574 = reshape(%p0108, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %575 = cast(%574, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %576 = multiply(%575, 0.00342373f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %577 = divide(%576, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%577, %p173) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %4675 = %4674(%4673, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %4676 = fn (%p0107: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="213bb28d597ded79") -> Tensor[(1, 16, 128, 128), int8] {
    %570 = nn.softmax(%p0107, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %571 = divide(%570, 0.00859989f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %572 = clip(%571, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %573 = round(%572) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%573, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %4677 = %4676(%4675) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %4678 = fn (%p0106: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %566 = broadcast_to(%p0106, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %567 = reshape(%566, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %568 = cast(%567, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %569 = add(%568, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%569, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %4694 = fn (%p0693: Tensor[(128, 1024), uint8], %p1444: Tensor[(64, 256, 16, 4), int8], %p2281: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4693 = nn.contrib_dense_pack(%p0693, %p1444, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4693, %p2281) /* ty=Tensor[(128, 1024), int32] */
  };
  %4695 = %4694(%4645, meta[relay.Constant][429] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][430] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4696 = fn (%p0692: Tensor[(128, 1024), int32], %p1443: Tensor[(1024), int32], Primitive=1, hash="378d24b42e63f9c5") -> Tensor[(16, 64, 128), int8] {
    %4679 = reshape(%p0692, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4680 = add(%4679, %p1443) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4681 = clip(%4680, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4682 = reshape(%4681, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4683 = transpose(%4682, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4684 = cast(%4683, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4685 = multiply(0.00250194f /* ty=float32 */, %4684) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4686 = add(%4685, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4687 = floor(%4686) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4688 = cast(%4687, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4689 = clip(%4688, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4690 = cast(%4689, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4691 = broadcast_to(%4690, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4692 = reshape(%4691, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%4692, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %4698 = %4696(%4695, meta[relay.Constant][431] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %4699 = fn (%p0694: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %4697 = cast(%p0694, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%4697, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %4700 = %4678(%4677) /* ty=Tensor[(16, 128, 128), uint8] */;
  %4701 = %4699(%4698) /* ty=Tensor[(16, 64), int32] */;
  %4702 = fn (%p0105: Tensor[(16, 128, 128), uint8], %p172: Tensor[(16, 64, 128), int8], %p247: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %563 = multiply(128 /* ty=int32 */, %p247) /* ty=Tensor[(16, 64), int32] */;
    %564 = nn.batch_matmul(%p0105, %p172, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %565 = expand_dims(%563, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%564, %565) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %4703 = %4702(%4700, %4698, %4701) /* ty=Tensor[(16, 128, 64), int32] */;
  %4704 = fn (%p0104: Tensor[(16, 128, 64), int32], Primitive=1, hash="fa583387c032a5bc") -> Tensor[(128, 1024), uint8] {
    %550 = reshape(%p0104, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %551 = transpose(%550, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %552 = reshape(%551, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %553 = cast(%552, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %554 = multiply(0.0345324f /* ty=float32 */, %553) /* ty=Tensor[(1, 128, 1024), float32] */;
    %555 = add(%554, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %556 = floor(%555) /* ty=Tensor[(1, 128, 1024), float32] */;
    %557 = cast(%556, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %558 = clip(%557, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %559 = cast(%558, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %560 = reshape(%559, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %561 = cast(%560, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %562 = add(%561, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%562, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4705 = %4704(%4703) /* ty=Tensor[(128, 1024), uint8] */;
  %4706 = fn (%p0103: Tensor[(128, 1024), uint8], %p171: Tensor[(64, 256, 16, 4), int8], %p246: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %549 = nn.contrib_dense_pack(%p0103, %p171, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%549, %p246) /* ty=Tensor[(128, 1024), int32] */
  };
  %4707 = %4706(%4705, meta[relay.Constant][432] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][433] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4708 = fn (%p0102: Tensor[(128, 1024), int32], %p170: Tensor[(1024), int32], %p245: Tensor[(1, 128, 1024), int8], Primitive=1, hash="7656e17dbec6fbb9") -> Tensor[(1, 128, 1024), float32] {
    %535 = reshape(%p0102, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %536 = add(%535, %p170) /* ty=Tensor[(1, 128, 1024), int32] */;
    %537 = clip(%536, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %538 = cast(%537, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %539 = multiply(0.00173814f /* ty=float32 */, %538) /* ty=Tensor[(1, 128, 1024), float32] */;
    %540 = add(%539, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %541 = floor(%540) /* ty=Tensor[(1, 128, 1024), float32] */;
    %542 = cast(%541, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %543 = clip(%542, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %544 = cast(%543, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %545 = cast(%544, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %546 = cast(%p245, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %547 = multiply(%545, 0.011562f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %548 = multiply(%546, 0.0559748f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%547, %548) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4709 = %4708(%4707, meta[relay.Constant][434] /* ty=Tensor[(1024), int32] */, %4643) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4710 = fn (%p0695: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0695, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4711 = %4710(%4709) /* ty=Tensor[(1, 128, 1), float32] */;
  %4712 = fn (%p0101: Tensor[(1, 128, 1024), float32], %p169: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p0101, %p169) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4713 = %4712(%4709, %4711) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4714 = fn (%p0100: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %534 = power(%p0100, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%534, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4715 = %4714(%4713) /* ty=Tensor[(1, 128, 1), float32] */;
  %4716 = fn (%p099: Tensor[(1, 128, 1), float32], %p168: Tensor[(1, 128, 1024), float32], %p244: Tensor[(1024), float32], %p39: Tensor[(1024), float32], Primitive=1, hash="5a022757d98e64ba") -> Tensor[(1, 128, 1024), int8] {
    %526 = add(%p099, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %527 = sqrt(%526) /* ty=Tensor[(1, 128, 1), float32] */;
    %528 = divide(%p168, %527) /* ty=Tensor[(1, 128, 1024), float32] */;
    %529 = multiply(%528, %p244) /* ty=Tensor[(1, 128, 1024), float32] */;
    %530 = add(%529, %p39) /* ty=Tensor[(1, 128, 1024), float32] */;
    %531 = divide(%530, 0.124287f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %532 = clip(%531, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %533 = round(%532) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%533, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4717 = %4716(%4715, %4713, meta[relay.Constant][435] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][436] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4718 = fn (%p098: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %523 = reshape(%p098, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %524 = cast(%523, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %525 = add(%524, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%525, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4719 = %4718(%4717) /* ty=Tensor[(128, 1024), uint8] */;
  %4720 = fn (%p097: Tensor[(128, 1024), uint8], %p167: Tensor[(256, 256, 16, 4), int8], %p243: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %522 = nn.contrib_dense_pack(%p097, %p167, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%522, %p243) /* ty=Tensor[(128, 4096), int32] */
  };
  %4721 = %4720(%4719, meta[relay.Constant][437] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][438] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %4722 = fn (%p096: Tensor[(128, 4096), int32], %p166: Tensor[(4096), float32], Primitive=1, hash="f2df5bf39e7e88dd") -> Tensor[(128, 4096), uint8] {
    %506 = reshape(%p096, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %507 = cast(%506, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %508 = multiply(%507, 0.000457293f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %509 = add(%508, %p166) /* ty=Tensor[(1, 128, 4096), float32] */;
    %510 = divide(%509, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %511 = erf(%510) /* ty=Tensor[(1, 128, 4096), float32] */;
    %512 = multiply(%509, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %513 = add(%511, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %514 = multiply(%512, %513) /* ty=Tensor[(1, 128, 4096), float32] */;
    %515 = divide(%514, 0.018724f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %516 = clip(%515, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %517 = round(%516) /* ty=Tensor[(1, 128, 4096), float32] */;
    %518 = cast(%517, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %519 = reshape(%518, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %520 = cast(%519, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %521 = add(%520, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%521, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %4723 = %4722(%4721, meta[relay.Constant][439] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %4724 = fn (%p095: Tensor[(128, 4096), uint8], %p165: Tensor[(64, 1024, 16, 4), int8], %p242: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %505 = nn.contrib_dense_pack(%p095, %p165, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%505, %p242) /* ty=Tensor[(128, 1024), int32] */
  };
  %4725 = %4724(%4723, meta[relay.Constant][440] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][441] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4726 = fn (%p094: Tensor[(128, 1024), int32], %p164: Tensor[(1024), int32], %p241: Tensor[(1, 128, 1024), int8], Primitive=1, hash="f989d68d46a27176") -> Tensor[(1, 128, 1024), float32] {
    %491 = reshape(%p094, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %492 = add(%491, %p164) /* ty=Tensor[(1, 128, 1024), int32] */;
    %493 = clip(%492, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %494 = cast(%493, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %495 = multiply(0.0248211f /* ty=float32 */, %494) /* ty=Tensor[(1, 128, 1024), float32] */;
    %496 = add(%495, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %497 = floor(%496) /* ty=Tensor[(1, 128, 1024), float32] */;
    %498 = cast(%497, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %499 = clip(%498, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %500 = cast(%499, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %501 = cast(%500, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %502 = cast(%p241, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %503 = multiply(%501, 0.0318989f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %504 = multiply(%502, 0.124287f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%503, %504) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4727 = %4726(%4725, meta[relay.Constant][442] /* ty=Tensor[(1024), int32] */, %4717) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4728 = fn (%p0696: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0696, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4729 = %4728(%4727) /* ty=Tensor[(1, 128, 1), float32] */;
  %4730 = fn (%p093: Tensor[(1, 128, 1024), float32], %p163: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p093, %p163) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4731 = %4730(%4727, %4729) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4732 = fn (%p092: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %490 = power(%p092, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%490, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4733 = %4732(%4731) /* ty=Tensor[(1, 128, 1), float32] */;
  %4734 = fn (%p091: Tensor[(1, 128, 1), float32], %p162: Tensor[(1, 128, 1024), float32], %p240: Tensor[(1024), float32], %p38: Tensor[(1024), float32], Primitive=1, hash="f9007f74b5abd90a") -> Tensor[(1, 128, 1024), int8] {
    %482 = add(%p091, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %483 = sqrt(%482) /* ty=Tensor[(1, 128, 1), float32] */;
    %484 = divide(%p162, %483) /* ty=Tensor[(1, 128, 1024), float32] */;
    %485 = multiply(%484, %p240) /* ty=Tensor[(1, 128, 1024), float32] */;
    %486 = add(%485, %p38) /* ty=Tensor[(1, 128, 1024), float32] */;
    %487 = divide(%486, 0.040475f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %488 = clip(%487, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %489 = round(%488) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%489, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4735 = %4734(%4733, %4731, meta[relay.Constant][443] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][444] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4736 = fn (%p090: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %479 = reshape(%p090, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %480 = cast(%479, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %481 = add(%480, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%481, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4737 = %4736(%4735) /* ty=Tensor[(128, 1024), uint8] */;
  %4738 = fn (%p089: Tensor[(128, 1024), uint8], %p161: Tensor[(64, 256, 16, 4), int8], %p239: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %478 = nn.contrib_dense_pack(%p089, %p161, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%478, %p239) /* ty=Tensor[(128, 1024), int32] */
  };
  %4739 = %4738(%4737, meta[relay.Constant][445] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][446] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4740 = fn (%p088: Tensor[(128, 1024), int32], %p160: Tensor[(1024), int32], Primitive=1, hash="267eca1c710a3256") -> Tensor[(16, 128, 64), uint8] {
    %462 = reshape(%p088, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %463 = add(%462, %p160) /* ty=Tensor[(1, 128, 1024), int32] */;
    %464 = clip(%463, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %465 = reshape(%464, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %466 = transpose(%465, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %467 = cast(%466, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %468 = multiply(0.00217366f /* ty=float32 */, %467) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %469 = add(%468, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %470 = floor(%469) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %471 = cast(%470, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %472 = clip(%471, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %473 = cast(%472, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %474 = broadcast_to(%473, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %475 = reshape(%474, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %476 = cast(%475, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %477 = add(%476, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%477, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %4756 = fn (%p0698: Tensor[(128, 1024), uint8], %p1446: Tensor[(64, 256, 16, 4), int8], %p2282: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4755 = nn.contrib_dense_pack(%p0698, %p1446, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4755, %p2282) /* ty=Tensor[(128, 1024), int32] */
  };
  %4757 = %4756(%4737, meta[relay.Constant][448] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][449] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4758 = fn (%p0697: Tensor[(128, 1024), int32], %p1445: Tensor[(1024), int32], Primitive=1, hash="43757442ab84740c") -> Tensor[(16, 128, 64), int8] {
    %4741 = reshape(%p0697, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4742 = add(%4741, %p1445) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4743 = clip(%4742, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4744 = reshape(%4743, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4745 = transpose(%4744, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4746 = cast(%4745, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4747 = multiply(0.00217366f /* ty=float32 */, %4746) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4748 = add(%4747, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4749 = floor(%4748) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4750 = cast(%4749, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4751 = clip(%4750, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4752 = cast(%4751, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4753 = broadcast_to(%4752, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4754 = reshape(%4753, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%4754, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %4760 = %4758(%4757, meta[relay.Constant][450] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %4761 = fn (%p0699: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %4759 = cast(%p0699, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%4759, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %4762 = %4740(%4739, meta[relay.Constant][447] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %4763 = %4761(%4760) /* ty=Tensor[(16, 128), int32] */;
  %4764 = fn (%p087: Tensor[(16, 128, 64), uint8], %p159: Tensor[(16, 128, 64), int8], %p238: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %459 = multiply(128 /* ty=int32 */, %p238) /* ty=Tensor[(16, 128), int32] */;
    %460 = nn.batch_matmul(%p087, %p159, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %461 = expand_dims(%459, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%460, %461) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %4765 = %4764(%4762, %4760, %4763) /* ty=Tensor[(16, 128, 128), int32] */;
  %4766 = fn (%p086: Tensor[(16, 128, 128), int32], %p158: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="9ebc04e2386a625d") -> Tensor[(1, 16, 128, 128), float32] {
    %455 = reshape(%p086, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %456 = cast(%455, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %457 = multiply(%456, 0.00405644f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %458 = divide(%457, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%458, %p158) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %4767 = %4766(%4765, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %4768 = fn (%p085: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="3ccfe482b1141c29") -> Tensor[(1, 16, 128, 128), int8] {
    %451 = nn.softmax(%p085, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %452 = divide(%451, 0.00874455f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %453 = clip(%452, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %454 = round(%453) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%454, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %4769 = %4768(%4767) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %4770 = fn (%p084: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %447 = broadcast_to(%p084, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %448 = reshape(%447, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %449 = cast(%448, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %450 = add(%449, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%450, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %4786 = fn (%p0701: Tensor[(128, 1024), uint8], %p1448: Tensor[(64, 256, 16, 4), int8], %p2283: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4785 = nn.contrib_dense_pack(%p0701, %p1448, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4785, %p2283) /* ty=Tensor[(128, 1024), int32] */
  };
  %4787 = %4786(%4737, meta[relay.Constant][451] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][452] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4788 = fn (%p0700: Tensor[(128, 1024), int32], %p1447: Tensor[(1024), int32], Primitive=1, hash="f7a262faeb9540c5") -> Tensor[(16, 64, 128), int8] {
    %4771 = reshape(%p0700, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4772 = add(%4771, %p1447) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4773 = clip(%4772, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4774 = reshape(%4773, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4775 = transpose(%4774, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4776 = cast(%4775, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4777 = multiply(0.00217366f /* ty=float32 */, %4776) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4778 = add(%4777, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4779 = floor(%4778) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4780 = cast(%4779, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4781 = clip(%4780, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4782 = cast(%4781, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4783 = broadcast_to(%4782, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4784 = reshape(%4783, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%4784, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %4790 = %4788(%4787, meta[relay.Constant][453] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %4791 = fn (%p0702: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %4789 = cast(%p0702, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%4789, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %4792 = %4770(%4769) /* ty=Tensor[(16, 128, 128), uint8] */;
  %4793 = %4791(%4790) /* ty=Tensor[(16, 64), int32] */;
  %4794 = fn (%p083: Tensor[(16, 128, 128), uint8], %p157: Tensor[(16, 64, 128), int8], %p237: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %444 = multiply(128 /* ty=int32 */, %p237) /* ty=Tensor[(16, 64), int32] */;
    %445 = nn.batch_matmul(%p083, %p157, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %446 = expand_dims(%444, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%445, %446) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %4795 = %4794(%4792, %4790, %4793) /* ty=Tensor[(16, 128, 64), int32] */;
  %4796 = fn (%p082: Tensor[(16, 128, 64), int32], Primitive=1, hash="a9c381cd97d6d8b5") -> Tensor[(128, 1024), uint8] {
    %431 = reshape(%p082, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %432 = transpose(%431, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %433 = reshape(%432, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %434 = cast(%433, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %435 = multiply(0.0312556f /* ty=float32 */, %434) /* ty=Tensor[(1, 128, 1024), float32] */;
    %436 = add(%435, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %437 = floor(%436) /* ty=Tensor[(1, 128, 1024), float32] */;
    %438 = cast(%437, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %439 = clip(%438, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %440 = cast(%439, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %441 = reshape(%440, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %442 = cast(%441, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %443 = add(%442, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%443, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4797 = %4796(%4795) /* ty=Tensor[(128, 1024), uint8] */;
  %4798 = fn (%p081: Tensor[(128, 1024), uint8], %p156: Tensor[(64, 256, 16, 4), int8], %p236: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %430 = nn.contrib_dense_pack(%p081, %p156, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%430, %p236) /* ty=Tensor[(128, 1024), int32] */
  };
  %4799 = %4798(%4797, meta[relay.Constant][454] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][455] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4800 = fn (%p080: Tensor[(128, 1024), int32], %p155: Tensor[(1024), int32], %p235: Tensor[(1, 128, 1024), int8], Primitive=1, hash="9b88f49e4fa74a78") -> Tensor[(1, 128, 1024), float32] {
    %416 = reshape(%p080, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %417 = add(%416, %p155) /* ty=Tensor[(1, 128, 1024), int32] */;
    %418 = clip(%417, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %419 = cast(%418, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %420 = multiply(0.00286099f /* ty=float32 */, %419) /* ty=Tensor[(1, 128, 1024), float32] */;
    %421 = add(%420, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %422 = floor(%421) /* ty=Tensor[(1, 128, 1024), float32] */;
    %423 = cast(%422, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %424 = clip(%423, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %425 = cast(%424, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %426 = cast(%425, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %427 = cast(%p235, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %428 = multiply(%426, 0.0108029f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %429 = multiply(%427, 0.040475f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%428, %429) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4801 = %4800(%4799, meta[relay.Constant][456] /* ty=Tensor[(1024), int32] */, %4735) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4802 = fn (%p0703: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0703, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4803 = %4802(%4801) /* ty=Tensor[(1, 128, 1), float32] */;
  %4804 = fn (%p079: Tensor[(1, 128, 1024), float32], %p154: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p079, %p154) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4805 = %4804(%4801, %4803) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4806 = fn (%p078: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %415 = power(%p078, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%415, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4807 = %4806(%4805) /* ty=Tensor[(1, 128, 1), float32] */;
  %4808 = fn (%p077: Tensor[(1, 128, 1), float32], %p153: Tensor[(1, 128, 1024), float32], %p234: Tensor[(1024), float32], %p37: Tensor[(1024), float32], Primitive=1, hash="df3b11154e0bad4e") -> Tensor[(1, 128, 1024), int8] {
    %407 = add(%p077, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %408 = sqrt(%407) /* ty=Tensor[(1, 128, 1), float32] */;
    %409 = divide(%p153, %408) /* ty=Tensor[(1, 128, 1024), float32] */;
    %410 = multiply(%409, %p234) /* ty=Tensor[(1, 128, 1024), float32] */;
    %411 = add(%410, %p37) /* ty=Tensor[(1, 128, 1024), float32] */;
    %412 = divide(%411, 0.0905224f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %413 = clip(%412, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %414 = round(%413) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%414, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4809 = %4808(%4807, %4805, meta[relay.Constant][457] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][458] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4810 = fn (%p076: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %404 = reshape(%p076, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %405 = cast(%404, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %406 = add(%405, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%406, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4811 = %4810(%4809) /* ty=Tensor[(128, 1024), uint8] */;
  %4812 = fn (%p075: Tensor[(128, 1024), uint8], %p152: Tensor[(256, 256, 16, 4), int8], %p233: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %403 = nn.contrib_dense_pack(%p075, %p152, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%403, %p233) /* ty=Tensor[(128, 4096), int32] */
  };
  %4813 = %4812(%4811, meta[relay.Constant][459] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][460] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %4814 = fn (%p074: Tensor[(128, 4096), int32], %p151: Tensor[(4096), float32], Primitive=1, hash="ff49f64c25394078") -> Tensor[(128, 4096), uint8] {
    %387 = reshape(%p074, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %388 = cast(%387, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %389 = multiply(%388, 0.000339716f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %390 = add(%389, %p151) /* ty=Tensor[(1, 128, 4096), float32] */;
    %391 = divide(%390, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %392 = erf(%391) /* ty=Tensor[(1, 128, 4096), float32] */;
    %393 = multiply(%390, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %394 = add(%392, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %395 = multiply(%393, %394) /* ty=Tensor[(1, 128, 4096), float32] */;
    %396 = divide(%395, 0.0247041f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %397 = clip(%396, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %398 = round(%397) /* ty=Tensor[(1, 128, 4096), float32] */;
    %399 = cast(%398, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %400 = reshape(%399, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %401 = cast(%400, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %402 = add(%401, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%402, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %4815 = %4814(%4813, meta[relay.Constant][461] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %4816 = fn (%p073: Tensor[(128, 4096), uint8], %p150: Tensor[(64, 1024, 16, 4), int8], %p232: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %386 = nn.contrib_dense_pack(%p073, %p150, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%386, %p232) /* ty=Tensor[(128, 1024), int32] */
  };
  %4817 = %4816(%4815, meta[relay.Constant][462] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][463] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4818 = fn (%p072: Tensor[(128, 1024), int32], %p149: Tensor[(1024), int32], %p231: Tensor[(1, 128, 1024), int8], Primitive=1, hash="a1c7d995af18745a") -> Tensor[(1, 128, 1024), float32] {
    %372 = reshape(%p072, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %373 = add(%372, %p149) /* ty=Tensor[(1, 128, 1024), int32] */;
    %374 = clip(%373, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %375 = cast(%374, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %376 = multiply(0.0154468f /* ty=float32 */, %375) /* ty=Tensor[(1, 128, 1024), float32] */;
    %377 = add(%376, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %378 = floor(%377) /* ty=Tensor[(1, 128, 1024), float32] */;
    %379 = cast(%378, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %380 = clip(%379, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %381 = cast(%380, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %382 = cast(%381, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %383 = cast(%p231, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %384 = multiply(%382, 0.0631223f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %385 = multiply(%383, 0.0905224f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%384, %385) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4819 = %4818(%4817, meta[relay.Constant][464] /* ty=Tensor[(1024), int32] */, %4809) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4820 = fn (%p0704: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0704, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4821 = %4820(%4819) /* ty=Tensor[(1, 128, 1), float32] */;
  %4822 = fn (%p071: Tensor[(1, 128, 1024), float32], %p148: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p071, %p148) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4823 = %4822(%4819, %4821) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4824 = fn (%p070: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %371 = power(%p070, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%371, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4825 = %4824(%4823) /* ty=Tensor[(1, 128, 1), float32] */;
  %4826 = fn (%p069: Tensor[(1, 128, 1), float32], %p147: Tensor[(1, 128, 1024), float32], %p230: Tensor[(1024), float32], %p36: Tensor[(1024), float32], Primitive=1, hash="ffc7c5d5f1ab2212") -> Tensor[(1, 128, 1024), int8] {
    %363 = add(%p069, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %364 = sqrt(%363) /* ty=Tensor[(1, 128, 1), float32] */;
    %365 = divide(%p147, %364) /* ty=Tensor[(1, 128, 1024), float32] */;
    %366 = multiply(%365, %p230) /* ty=Tensor[(1, 128, 1024), float32] */;
    %367 = add(%366, %p36) /* ty=Tensor[(1, 128, 1024), float32] */;
    %368 = divide(%367, 0.0516203f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %369 = clip(%368, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %370 = round(%369) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%370, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4827 = %4826(%4825, %4823, meta[relay.Constant][465] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][466] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4828 = fn (%p068: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %360 = reshape(%p068, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %361 = cast(%360, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %362 = add(%361, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%362, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4829 = %4828(%4827) /* ty=Tensor[(128, 1024), uint8] */;
  %4830 = fn (%p067: Tensor[(128, 1024), uint8], %p146: Tensor[(64, 256, 16, 4), int8], %p229: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %359 = nn.contrib_dense_pack(%p067, %p146, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%359, %p229) /* ty=Tensor[(128, 1024), int32] */
  };
  %4831 = %4830(%4829, meta[relay.Constant][467] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][468] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4832 = fn (%p066: Tensor[(128, 1024), int32], %p145: Tensor[(1024), int32], Primitive=1, hash="d26a0a2fc83bae1c") -> Tensor[(16, 128, 64), uint8] {
    %343 = reshape(%p066, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %344 = add(%343, %p145) /* ty=Tensor[(1, 128, 1024), int32] */;
    %345 = clip(%344, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %346 = reshape(%345, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %347 = transpose(%346, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %348 = cast(%347, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %349 = multiply(0.00160813f /* ty=float32 */, %348) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %350 = add(%349, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %351 = floor(%350) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %352 = cast(%351, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %353 = clip(%352, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %354 = cast(%353, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %355 = broadcast_to(%354, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %356 = reshape(%355, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %357 = cast(%356, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %358 = add(%357, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%358, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %4848 = fn (%p0706: Tensor[(128, 1024), uint8], %p1450: Tensor[(64, 256, 16, 4), int8], %p2284: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4847 = nn.contrib_dense_pack(%p0706, %p1450, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4847, %p2284) /* ty=Tensor[(128, 1024), int32] */
  };
  %4849 = %4848(%4829, meta[relay.Constant][470] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][471] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4850 = fn (%p0705: Tensor[(128, 1024), int32], %p1449: Tensor[(1024), int32], Primitive=1, hash="efb65c13ef74ce2d") -> Tensor[(16, 128, 64), int8] {
    %4833 = reshape(%p0705, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4834 = add(%4833, %p1449) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4835 = clip(%4834, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4836 = reshape(%4835, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4837 = transpose(%4836, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4838 = cast(%4837, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4839 = multiply(0.00160813f /* ty=float32 */, %4838) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4840 = add(%4839, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4841 = floor(%4840) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4842 = cast(%4841, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4843 = clip(%4842, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4844 = cast(%4843, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4845 = broadcast_to(%4844, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4846 = reshape(%4845, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%4846, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %4852 = %4850(%4849, meta[relay.Constant][472] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %4853 = fn (%p0707: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %4851 = cast(%p0707, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%4851, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %4854 = %4832(%4831, meta[relay.Constant][469] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %4855 = %4853(%4852) /* ty=Tensor[(16, 128), int32] */;
  %4856 = fn (%p065: Tensor[(16, 128, 64), uint8], %p144: Tensor[(16, 128, 64), int8], %p228: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %340 = multiply(128 /* ty=int32 */, %p228) /* ty=Tensor[(16, 128), int32] */;
    %341 = nn.batch_matmul(%p065, %p144, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %342 = expand_dims(%340, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%341, %342) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %4857 = %4856(%4854, %4852, %4855) /* ty=Tensor[(16, 128, 128), int32] */;
  %4858 = fn (%p064: Tensor[(16, 128, 128), int32], %p143: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="686004986206153c") -> Tensor[(1, 16, 128, 128), float32] {
    %336 = reshape(%p064, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %337 = cast(%336, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %338 = multiply(%337, 0.00707049f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %339 = divide(%338, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%339, %p143) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %4859 = %4858(%4857, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %4860 = fn (%p063: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="7e1ccefce278b800") -> Tensor[(1, 16, 128, 128), int8] {
    %332 = nn.softmax(%p063, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %333 = divide(%332, 0.00874463f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %334 = clip(%333, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %335 = round(%334) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%335, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %4861 = %4860(%4859) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %4862 = fn (%p062: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %328 = broadcast_to(%p062, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %329 = reshape(%328, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %330 = cast(%329, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %331 = add(%330, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%331, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %4878 = fn (%p0709: Tensor[(128, 1024), uint8], %p1452: Tensor[(64, 256, 16, 4), int8], %p2285: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4877 = nn.contrib_dense_pack(%p0709, %p1452, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4877, %p2285) /* ty=Tensor[(128, 1024), int32] */
  };
  %4879 = %4878(%4829, meta[relay.Constant][473] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][474] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4880 = fn (%p0708: Tensor[(128, 1024), int32], %p1451: Tensor[(1024), int32], Primitive=1, hash="b5dd790298b5e02e") -> Tensor[(16, 64, 128), int8] {
    %4863 = reshape(%p0708, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4864 = add(%4863, %p1451) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4865 = clip(%4864, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4866 = reshape(%4865, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4867 = transpose(%4866, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4868 = cast(%4867, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4869 = multiply(0.00160813f /* ty=float32 */, %4868) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4870 = add(%4869, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4871 = floor(%4870) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4872 = cast(%4871, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4873 = clip(%4872, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4874 = cast(%4873, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4875 = broadcast_to(%4874, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4876 = reshape(%4875, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%4876, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %4882 = %4880(%4879, meta[relay.Constant][475] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %4883 = fn (%p0710: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %4881 = cast(%p0710, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%4881, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %4884 = %4862(%4861) /* ty=Tensor[(16, 128, 128), uint8] */;
  %4885 = %4883(%4882) /* ty=Tensor[(16, 64), int32] */;
  %4886 = fn (%p061: Tensor[(16, 128, 128), uint8], %p142: Tensor[(16, 64, 128), int8], %p227: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %325 = multiply(128 /* ty=int32 */, %p227) /* ty=Tensor[(16, 64), int32] */;
    %326 = nn.batch_matmul(%p061, %p142, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %327 = expand_dims(%325, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%326, %327) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %4887 = %4886(%4884, %4882, %4885) /* ty=Tensor[(16, 128, 64), int32] */;
  %4888 = fn (%p060: Tensor[(16, 128, 64), int32], Primitive=1, hash="a533a60cdf254332") -> Tensor[(128, 1024), uint8] {
    %312 = reshape(%p060, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %313 = transpose(%312, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %314 = reshape(%313, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %315 = cast(%314, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %316 = multiply(0.0311631f /* ty=float32 */, %315) /* ty=Tensor[(1, 128, 1024), float32] */;
    %317 = add(%316, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %318 = floor(%317) /* ty=Tensor[(1, 128, 1024), float32] */;
    %319 = cast(%318, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %320 = clip(%319, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %321 = cast(%320, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %322 = reshape(%321, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %323 = cast(%322, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %324 = add(%323, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%324, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4889 = %4888(%4887) /* ty=Tensor[(128, 1024), uint8] */;
  %4890 = fn (%p059: Tensor[(128, 1024), uint8], %p141: Tensor[(64, 256, 16, 4), int8], %p226: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %311 = nn.contrib_dense_pack(%p059, %p141, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%311, %p226) /* ty=Tensor[(128, 1024), int32] */
  };
  %4891 = %4890(%4889, meta[relay.Constant][476] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][477] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4892 = fn (%p058: Tensor[(128, 1024), int32], %p140: Tensor[(1024), int32], %p225: Tensor[(1, 128, 1024), int8], Primitive=1, hash="95d19311ba1c083d") -> Tensor[(1, 128, 1024), float32] {
    %297 = reshape(%p058, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %298 = add(%297, %p140) /* ty=Tensor[(1, 128, 1024), int32] */;
    %299 = clip(%298, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %300 = cast(%299, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %301 = multiply(0.00244269f /* ty=float32 */, %300) /* ty=Tensor[(1, 128, 1024), float32] */;
    %302 = add(%301, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %303 = floor(%302) /* ty=Tensor[(1, 128, 1024), float32] */;
    %304 = cast(%303, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %305 = clip(%304, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %306 = cast(%305, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %307 = cast(%306, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %308 = cast(%p225, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %309 = multiply(%307, 0.0149513f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %310 = multiply(%308, 0.0516203f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%309, %310) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4893 = %4892(%4891, meta[relay.Constant][478] /* ty=Tensor[(1024), int32] */, %4827) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4894 = fn (%p0711: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0711, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4895 = %4894(%4893) /* ty=Tensor[(1, 128, 1), float32] */;
  %4896 = fn (%p057: Tensor[(1, 128, 1024), float32], %p139: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p057, %p139) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4897 = %4896(%4893, %4895) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4898 = fn (%p056: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %296 = power(%p056, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%296, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4899 = %4898(%4897) /* ty=Tensor[(1, 128, 1), float32] */;
  %4900 = fn (%p055: Tensor[(1, 128, 1), float32], %p138: Tensor[(1, 128, 1024), float32], %p224: Tensor[(1024), float32], %p35: Tensor[(1024), float32], Primitive=1, hash="6e6c41e0619a58b1") -> Tensor[(1, 128, 1024), int8] {
    %288 = add(%p055, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %289 = sqrt(%288) /* ty=Tensor[(1, 128, 1), float32] */;
    %290 = divide(%p138, %289) /* ty=Tensor[(1, 128, 1024), float32] */;
    %291 = multiply(%290, %p224) /* ty=Tensor[(1, 128, 1024), float32] */;
    %292 = add(%291, %p35) /* ty=Tensor[(1, 128, 1024), float32] */;
    %293 = divide(%292, 0.10457f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %294 = clip(%293, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %295 = round(%294) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%295, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4901 = %4900(%4899, %4897, meta[relay.Constant][479] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][480] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4902 = fn (%p054: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %285 = reshape(%p054, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %286 = cast(%285, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %287 = add(%286, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%287, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4903 = %4902(%4901) /* ty=Tensor[(128, 1024), uint8] */;
  %4904 = fn (%p053: Tensor[(128, 1024), uint8], %p137: Tensor[(256, 256, 16, 4), int8], %p223: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %284 = nn.contrib_dense_pack(%p053, %p137, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%284, %p223) /* ty=Tensor[(128, 4096), int32] */
  };
  %4905 = %4904(%4903, meta[relay.Constant][481] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][482] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %4906 = fn (%p052: Tensor[(128, 4096), int32], %p136: Tensor[(4096), float32], Primitive=1, hash="79eba59030acf9e9") -> Tensor[(128, 4096), uint8] {
    %268 = reshape(%p052, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %269 = cast(%268, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %270 = multiply(%269, 0.00115519f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %271 = add(%270, %p136) /* ty=Tensor[(1, 128, 4096), float32] */;
    %272 = divide(%271, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %273 = erf(%272) /* ty=Tensor[(1, 128, 4096), float32] */;
    %274 = multiply(%271, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %275 = add(%273, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %276 = multiply(%274, %275) /* ty=Tensor[(1, 128, 4096), float32] */;
    %277 = divide(%276, 0.0259176f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %278 = clip(%277, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %279 = round(%278) /* ty=Tensor[(1, 128, 4096), float32] */;
    %280 = cast(%279, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %281 = reshape(%280, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %282 = cast(%281, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %283 = add(%282, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%283, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %4907 = %4906(%4905, meta[relay.Constant][483] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %4908 = fn (%p051: Tensor[(128, 4096), uint8], %p135: Tensor[(64, 1024, 16, 4), int8], %p222: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %267 = nn.contrib_dense_pack(%p051, %p135, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%267, %p222) /* ty=Tensor[(128, 1024), int32] */
  };
  %4909 = %4908(%4907, meta[relay.Constant][484] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][485] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4910 = fn (%p050: Tensor[(128, 1024), int32], %p134: Tensor[(1024), int32], %p221: Tensor[(1, 128, 1024), int8], Primitive=1, hash="a040ee9ecddf6847") -> Tensor[(1, 128, 1024), float32] {
    %253 = reshape(%p050, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %254 = add(%253, %p134) /* ty=Tensor[(1, 128, 1024), int32] */;
    %255 = clip(%254, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %256 = cast(%255, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %257 = multiply(0.00924033f /* ty=float32 */, %256) /* ty=Tensor[(1, 128, 1024), float32] */;
    %258 = add(%257, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %259 = floor(%258) /* ty=Tensor[(1, 128, 1024), float32] */;
    %260 = cast(%259, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %261 = clip(%260, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %262 = cast(%261, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %263 = cast(%262, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %264 = cast(%p221, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %265 = multiply(%263, 0.125519f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %266 = multiply(%264, 0.10457f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%265, %266) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4911 = %4910(%4909, meta[relay.Constant][486] /* ty=Tensor[(1024), int32] */, %4901) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4912 = fn (%p0712: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0712, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4913 = %4912(%4911) /* ty=Tensor[(1, 128, 1), float32] */;
  %4914 = fn (%p049: Tensor[(1, 128, 1024), float32], %p133: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p049, %p133) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4915 = %4914(%4911, %4913) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4916 = fn (%p048: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %252 = power(%p048, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%252, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4917 = %4916(%4915) /* ty=Tensor[(1, 128, 1), float32] */;
  %4918 = fn (%p047: Tensor[(1, 128, 1), float32], %p132: Tensor[(1, 128, 1024), float32], %p220: Tensor[(1024), float32], %p34: Tensor[(1024), float32], Primitive=1, hash="81cbfa8d0c309fc1") -> Tensor[(1, 128, 1024), int8] {
    %244 = add(%p047, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %245 = sqrt(%244) /* ty=Tensor[(1, 128, 1), float32] */;
    %246 = divide(%p132, %245) /* ty=Tensor[(1, 128, 1024), float32] */;
    %247 = multiply(%246, %p220) /* ty=Tensor[(1, 128, 1024), float32] */;
    %248 = add(%247, %p34) /* ty=Tensor[(1, 128, 1024), float32] */;
    %249 = divide(%248, 0.0497798f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %250 = clip(%249, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %251 = round(%250) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%251, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4919 = %4918(%4917, %4915, meta[relay.Constant][487] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][488] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4920 = fn (%p046: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %241 = reshape(%p046, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %242 = cast(%241, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %243 = add(%242, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%243, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4921 = %4920(%4919) /* ty=Tensor[(128, 1024), uint8] */;
  %4922 = fn (%p045: Tensor[(128, 1024), uint8], %p131: Tensor[(64, 256, 16, 4), int8], %p219: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %240 = nn.contrib_dense_pack(%p045, %p131, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%240, %p219) /* ty=Tensor[(128, 1024), int32] */
  };
  %4923 = %4922(%4921, meta[relay.Constant][489] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][490] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4924 = fn (%p044: Tensor[(128, 1024), int32], %p130: Tensor[(1024), int32], Primitive=1, hash="f4d6dc85aed9d89b") -> Tensor[(16, 128, 64), uint8] {
    %224 = reshape(%p044, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %225 = add(%224, %p130) /* ty=Tensor[(1, 128, 1024), int32] */;
    %226 = clip(%225, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %227 = reshape(%226, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %228 = transpose(%227, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %229 = cast(%228, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %230 = multiply(0.0017688f /* ty=float32 */, %229) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %231 = add(%230, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %232 = floor(%231) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %233 = cast(%232, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %234 = clip(%233, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %235 = cast(%234, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %236 = broadcast_to(%235, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %237 = reshape(%236, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %238 = cast(%237, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %239 = add(%238, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%239, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %4940 = fn (%p0714: Tensor[(128, 1024), uint8], %p1454: Tensor[(64, 256, 16, 4), int8], %p2286: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4939 = nn.contrib_dense_pack(%p0714, %p1454, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4939, %p2286) /* ty=Tensor[(128, 1024), int32] */
  };
  %4941 = %4940(%4921, meta[relay.Constant][492] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][493] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4942 = fn (%p0713: Tensor[(128, 1024), int32], %p1453: Tensor[(1024), int32], Primitive=1, hash="69c438b9d644c3ca") -> Tensor[(16, 128, 64), int8] {
    %4925 = reshape(%p0713, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4926 = add(%4925, %p1453) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4927 = clip(%4926, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4928 = reshape(%4927, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4929 = transpose(%4928, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4930 = cast(%4929, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4931 = multiply(0.0017688f /* ty=float32 */, %4930) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4932 = add(%4931, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4933 = floor(%4932) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %4934 = cast(%4933, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4935 = clip(%4934, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %4936 = cast(%4935, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4937 = broadcast_to(%4936, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %4938 = reshape(%4937, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%4938, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %4944 = %4942(%4941, meta[relay.Constant][494] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %4945 = fn (%p0715: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %4943 = cast(%p0715, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%4943, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %4946 = %4924(%4923, meta[relay.Constant][491] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %4947 = %4945(%4944) /* ty=Tensor[(16, 128), int32] */;
  %4948 = fn (%p043: Tensor[(16, 128, 64), uint8], %p129: Tensor[(16, 128, 64), int8], %p218: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %221 = multiply(128 /* ty=int32 */, %p218) /* ty=Tensor[(16, 128), int32] */;
    %222 = nn.batch_matmul(%p043, %p129, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %223 = expand_dims(%221, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%222, %223) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %4949 = %4948(%4946, %4944, %4947) /* ty=Tensor[(16, 128, 128), int32] */;
  %4950 = fn (%p042: Tensor[(16, 128, 128), int32], %p128: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="23391ef1926f8f91") -> Tensor[(1, 16, 128, 128), float32] {
    %217 = reshape(%p042, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %218 = cast(%217, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %219 = multiply(%218, 0.00681919f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %220 = divide(%219, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%220, %p128) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %4951 = %4950(%4949, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %4952 = fn (%p041: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="7e1ccefce278b800") -> Tensor[(1, 16, 128, 128), int8] {
    %213 = nn.softmax(%p041, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %214 = divide(%213, 0.00874463f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %215 = clip(%214, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %216 = round(%215) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%216, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %4953 = %4952(%4951) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %4954 = fn (%p040: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %209 = broadcast_to(%p040, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %210 = reshape(%209, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %211 = cast(%210, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %212 = add(%211, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%212, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %4970 = fn (%p0717: Tensor[(128, 1024), uint8], %p1456: Tensor[(64, 256, 16, 4), int8], %p2287: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %4969 = nn.contrib_dense_pack(%p0717, %p1456, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%4969, %p2287) /* ty=Tensor[(128, 1024), int32] */
  };
  %4971 = %4970(%4921, meta[relay.Constant][495] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][496] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4972 = fn (%p0716: Tensor[(128, 1024), int32], %p1455: Tensor[(1024), int32], Primitive=1, hash="978338e29d425f90") -> Tensor[(16, 64, 128), int8] {
    %4955 = reshape(%p0716, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4956 = add(%4955, %p1455) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4957 = clip(%4956, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %4958 = reshape(%4957, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %4959 = transpose(%4958, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4960 = cast(%4959, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4961 = multiply(0.0017688f /* ty=float32 */, %4960) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4962 = add(%4961, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4963 = floor(%4962) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %4964 = cast(%4963, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4965 = clip(%4964, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %4966 = cast(%4965, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4967 = broadcast_to(%4966, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %4968 = reshape(%4967, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%4968, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %4974 = %4972(%4971, meta[relay.Constant][497] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %4975 = fn (%p0718: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %4973 = cast(%p0718, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%4973, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %4976 = %4954(%4953) /* ty=Tensor[(16, 128, 128), uint8] */;
  %4977 = %4975(%4974) /* ty=Tensor[(16, 64), int32] */;
  %4978 = fn (%p039: Tensor[(16, 128, 128), uint8], %p127: Tensor[(16, 64, 128), int8], %p217: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %206 = multiply(128 /* ty=int32 */, %p217) /* ty=Tensor[(16, 64), int32] */;
    %207 = nn.batch_matmul(%p039, %p127, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %208 = expand_dims(%206, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%207, %208) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %4979 = %4978(%4976, %4974, %4977) /* ty=Tensor[(16, 128, 64), int32] */;
  %4980 = fn (%p038: Tensor[(16, 128, 64), int32], Primitive=1, hash="811f02f269e5a618") -> Tensor[(128, 1024), uint8] {
    %193 = reshape(%p038, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %194 = transpose(%193, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %195 = reshape(%194, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %196 = cast(%195, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %197 = multiply(0.0517465f /* ty=float32 */, %196) /* ty=Tensor[(1, 128, 1024), float32] */;
    %198 = add(%197, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %199 = floor(%198) /* ty=Tensor[(1, 128, 1024), float32] */;
    %200 = cast(%199, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %201 = clip(%200, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %202 = cast(%201, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %203 = reshape(%202, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %204 = cast(%203, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %205 = add(%204, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%205, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4981 = %4980(%4979) /* ty=Tensor[(128, 1024), uint8] */;
  %4982 = fn (%p037: Tensor[(128, 1024), uint8], %p126: Tensor[(64, 256, 16, 4), int8], %p216: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %192 = nn.contrib_dense_pack(%p037, %p126, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%192, %p216) /* ty=Tensor[(128, 1024), int32] */
  };
  %4983 = %4982(%4981, meta[relay.Constant][498] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][499] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %4984 = fn (%p036: Tensor[(128, 1024), int32], %p125: Tensor[(1024), int32], %p215: Tensor[(1, 128, 1024), int8], Primitive=1, hash="7addbc0b86ba2e2d") -> Tensor[(1, 128, 1024), float32] {
    %178 = reshape(%p036, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %179 = add(%178, %p125) /* ty=Tensor[(1, 128, 1024), int32] */;
    %180 = clip(%179, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %181 = cast(%180, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %182 = multiply(0.00298418f /* ty=float32 */, %181) /* ty=Tensor[(1, 128, 1024), float32] */;
    %183 = add(%182, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %184 = floor(%183) /* ty=Tensor[(1, 128, 1024), float32] */;
    %185 = cast(%184, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %186 = clip(%185, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %187 = cast(%186, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %188 = cast(%187, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %189 = cast(%p215, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %190 = multiply(%188, 0.00948529f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %191 = multiply(%189, 0.0497798f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%190, %191) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4985 = %4984(%4983, meta[relay.Constant][500] /* ty=Tensor[(1024), int32] */, %4919) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4986 = fn (%p0719: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0719, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4987 = %4986(%4985) /* ty=Tensor[(1, 128, 1), float32] */;
  %4988 = fn (%p035: Tensor[(1, 128, 1024), float32], %p124: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p035, %p124) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %4989 = %4988(%4985, %4987) /* ty=Tensor[(1, 128, 1024), float32] */;
  %4990 = fn (%p034: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %177 = power(%p034, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%177, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %4991 = %4990(%4989) /* ty=Tensor[(1, 128, 1), float32] */;
  %4992 = fn (%p033: Tensor[(1, 128, 1), float32], %p123: Tensor[(1, 128, 1024), float32], %p214: Tensor[(1024), float32], %p33: Tensor[(1024), float32], Primitive=1, hash="22c2914cedb62e2a") -> Tensor[(1, 128, 1024), int8] {
    %169 = add(%p033, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %170 = sqrt(%169) /* ty=Tensor[(1, 128, 1), float32] */;
    %171 = divide(%p123, %170) /* ty=Tensor[(1, 128, 1024), float32] */;
    %172 = multiply(%171, %p214) /* ty=Tensor[(1, 128, 1024), float32] */;
    %173 = add(%172, %p33) /* ty=Tensor[(1, 128, 1024), float32] */;
    %174 = divide(%173, 0.0983768f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %175 = clip(%174, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %176 = round(%175) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%176, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %4993 = %4992(%4991, %4989, meta[relay.Constant][501] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][502] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %4994 = fn (%p032: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %166 = reshape(%p032, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %167 = cast(%166, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %168 = add(%167, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%168, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %4995 = %4994(%4993) /* ty=Tensor[(128, 1024), uint8] */;
  %4996 = fn (%p031: Tensor[(128, 1024), uint8], %p122: Tensor[(256, 256, 16, 4), int8], %p213: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %165 = nn.contrib_dense_pack(%p031, %p122, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%165, %p213) /* ty=Tensor[(128, 4096), int32] */
  };
  %4997 = %4996(%4995, meta[relay.Constant][503] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][504] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %4998 = fn (%p030: Tensor[(128, 4096), int32], %p121: Tensor[(4096), float32], Primitive=1, hash="8755debc261d3787") -> Tensor[(128, 4096), uint8] {
    %149 = reshape(%p030, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %150 = cast(%149, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %151 = multiply(%150, 0.000720727f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %152 = add(%151, %p121) /* ty=Tensor[(1, 128, 4096), float32] */;
    %153 = divide(%152, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %154 = erf(%153) /* ty=Tensor[(1, 128, 4096), float32] */;
    %155 = multiply(%152, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %156 = add(%154, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %157 = multiply(%155, %156) /* ty=Tensor[(1, 128, 4096), float32] */;
    %158 = divide(%157, 0.0244911f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %159 = clip(%158, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %160 = round(%159) /* ty=Tensor[(1, 128, 4096), float32] */;
    %161 = cast(%160, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %162 = reshape(%161, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %163 = cast(%162, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %164 = add(%163, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%164, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %4999 = %4998(%4997, meta[relay.Constant][505] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %5000 = fn (%p029: Tensor[(128, 4096), uint8], %p120: Tensor[(64, 1024, 16, 4), int8], %p212: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %148 = nn.contrib_dense_pack(%p029, %p120, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%148, %p212) /* ty=Tensor[(128, 1024), int32] */
  };
  %5001 = %5000(%4999, meta[relay.Constant][506] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][507] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %5002 = fn (%p028: Tensor[(128, 1024), int32], %p119: Tensor[(1024), int32], %p211: Tensor[(1, 128, 1024), int8], Primitive=1, hash="b17d8dbe22fa4e63") -> Tensor[(1, 128, 1024), float32] {
    %134 = reshape(%p028, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %135 = add(%134, %p119) /* ty=Tensor[(1, 128, 1024), int32] */;
    %136 = clip(%135, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %137 = cast(%136, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %138 = multiply(0.00704942f /* ty=float32 */, %137) /* ty=Tensor[(1, 128, 1024), float32] */;
    %139 = add(%138, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %140 = floor(%139) /* ty=Tensor[(1, 128, 1024), float32] */;
    %141 = cast(%140, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %142 = clip(%141, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %143 = cast(%142, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %144 = cast(%143, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %145 = cast(%p211, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %146 = multiply(%144, 0.190011f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %147 = multiply(%145, 0.0983768f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%146, %147) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %5003 = %5002(%5001, meta[relay.Constant][508] /* ty=Tensor[(1024), int32] */, %4993) /* ty=Tensor[(1, 128, 1024), float32] */;
  %5004 = fn (%p0720: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0720, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %5005 = %5004(%5003) /* ty=Tensor[(1, 128, 1), float32] */;
  %5006 = fn (%p027: Tensor[(1, 128, 1024), float32], %p118: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p027, %p118) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %5007 = %5006(%5003, %5005) /* ty=Tensor[(1, 128, 1024), float32] */;
  %5008 = fn (%p026: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %133 = power(%p026, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%133, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %5009 = %5008(%5007) /* ty=Tensor[(1, 128, 1), float32] */;
  %5010 = fn (%p025: Tensor[(1, 128, 1), float32], %p117: Tensor[(1, 128, 1024), float32], %p210: Tensor[(1024), float32], %p32: Tensor[(1024), float32], Primitive=1, hash="077c45a59a11f0b2") -> Tensor[(1, 128, 1024), int8] {
    %125 = add(%p025, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %126 = sqrt(%125) /* ty=Tensor[(1, 128, 1), float32] */;
    %127 = divide(%p117, %126) /* ty=Tensor[(1, 128, 1024), float32] */;
    %128 = multiply(%127, %p210) /* ty=Tensor[(1, 128, 1024), float32] */;
    %129 = add(%128, %p32) /* ty=Tensor[(1, 128, 1024), float32] */;
    %130 = divide(%129, 0.0625878f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %131 = clip(%130, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %132 = round(%131) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%132, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %5011 = %5010(%5009, %5007, meta[relay.Constant][509] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][510] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %5012 = fn (%p024: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %122 = reshape(%p024, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %123 = cast(%122, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %124 = add(%123, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%124, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %5013 = %5012(%5011) /* ty=Tensor[(128, 1024), uint8] */;
  %5014 = fn (%p023: Tensor[(128, 1024), uint8], %p116: Tensor[(64, 256, 16, 4), int8], %p29: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %121 = nn.contrib_dense_pack(%p023, %p116, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%121, %p29) /* ty=Tensor[(128, 1024), int32] */
  };
  %5015 = %5014(%5013, meta[relay.Constant][511] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][512] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %5016 = fn (%p022: Tensor[(128, 1024), int32], %p115: Tensor[(1024), int32], Primitive=1, hash="5ff9a94e96834090") -> Tensor[(16, 128, 64), uint8] {
    %105 = reshape(%p022, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %106 = add(%105, %p115) /* ty=Tensor[(1, 128, 1024), int32] */;
    %107 = clip(%106, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %108 = reshape(%107, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %109 = transpose(%108, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %110 = cast(%109, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %111 = multiply(0.00162626f /* ty=float32 */, %110) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %112 = add(%111, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %113 = floor(%112) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %114 = cast(%113, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %115 = clip(%114, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %116 = cast(%115, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %117 = broadcast_to(%116, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %118 = reshape(%117, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    %119 = cast(%118, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    %120 = add(%119, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 64), int32] */;
    cast(%120, dtype="uint8") /* ty=Tensor[(16, 128, 64), uint8] */
  };
  %5032 = fn (%p0722: Tensor[(128, 1024), uint8], %p1458: Tensor[(64, 256, 16, 4), int8], %p2288: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %5031 = nn.contrib_dense_pack(%p0722, %p1458, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%5031, %p2288) /* ty=Tensor[(128, 1024), int32] */
  };
  %5033 = %5032(%5013, meta[relay.Constant][514] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][515] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %5034 = fn (%p0721: Tensor[(128, 1024), int32], %p1457: Tensor[(1024), int32], Primitive=1, hash="eab79400a5ee90d1") -> Tensor[(16, 128, 64), int8] {
    %5017 = reshape(%p0721, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %5018 = add(%5017, %p1457) /* ty=Tensor[(1, 128, 1024), int32] */;
    %5019 = clip(%5018, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %5020 = reshape(%5019, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %5021 = transpose(%5020, axes=[0, 2, 3, 1]) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %5022 = cast(%5021, dtype="float32") /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %5023 = multiply(0.00162626f /* ty=float32 */, %5022) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %5024 = add(%5023, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %5025 = floor(%5024) /* ty=Tensor[(1, 16, 64, 128), float32] */;
    %5026 = cast(%5025, dtype="int32") /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %5027 = clip(%5026, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 64, 128), int32] */;
    %5028 = cast(%5027, dtype="int8") /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %5029 = broadcast_to(%5028, shape=[1, 16, 64, 128]) /* ty=Tensor[(1, 16, 64, 128), int8] */;
    %5030 = reshape(%5029, newshape=[-1, 64, 128]) /* ty=Tensor[(16, 64, 128), int8] */;
    transpose(%5030, axes=[0, 2, 1]) /* ty=Tensor[(16, 128, 64), int8] */
  };
  %5036 = %5034(%5033, meta[relay.Constant][516] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), int8] */;
  %5037 = fn (%p0723: Tensor[(16, 128, 64), int8], Primitive=1, hash="730fc163d25a20bf") -> Tensor[(16, 128), int32] {
    %5035 = cast(%p0723, dtype="int32") /* ty=Tensor[(16, 128, 64), int32] */;
    sum(%5035, axis=[-1]) /* ty=Tensor[(16, 128), int32] */
  };
  %5038 = %5016(%5015, meta[relay.Constant][513] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 128, 64), uint8] */;
  %5039 = %5037(%5036) /* ty=Tensor[(16, 128), int32] */;
  %5040 = fn (%p021: Tensor[(16, 128, 64), uint8], %p114: Tensor[(16, 128, 64), int8], %p28: Tensor[(16, 128), int32], Primitive=1, hash="6fff1eb43119fc91") -> Tensor[(16, 128, 128), int32] {
    %102 = multiply(128 /* ty=int32 */, %p28) /* ty=Tensor[(16, 128), int32] */;
    %103 = nn.batch_matmul(%p021, %p114, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 128), int32] */;
    %104 = expand_dims(%102, axis=1) /* ty=Tensor[(16, 1, 128), int32] */;
    subtract(%103, %104) /* ty=Tensor[(16, 128, 128), int32] */
  };
  %5041 = %5040(%5038, %5036, %5039) /* ty=Tensor[(16, 128, 128), int32] */;
  %5042 = fn (%p020: Tensor[(16, 128, 128), int32], %p113: Tensor[(1, 1, 1, 128), float32], Primitive=1, hash="784955bc1f003182") -> Tensor[(1, 16, 128, 128), float32] {
    %98 = reshape(%p020, newshape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int32] */;
    %99 = cast(%98, dtype="float32") /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %100 = multiply(%99, 0.00909371f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %101 = divide(%100, 8f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    add(%101, %p113) /* ty=Tensor[(1, 16, 128, 128), float32] */
  };
  %5043 = %5042(%5041, %2925) /* ty=Tensor[(1, 16, 128, 128), float32] */;
  %5044 = fn (%p019: Tensor[(1, 16, 128, 128), float32], Primitive=1, hash="7e1ccefce278b800") -> Tensor[(1, 16, 128, 128), int8] {
    %94 = nn.softmax(%p019, axis=3) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %95 = divide(%94, 0.00874463f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %96 = clip(%95, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    %97 = round(%96) /* ty=Tensor[(1, 16, 128, 128), float32] */;
    cast(%97, dtype="int8") /* ty=Tensor[(1, 16, 128, 128), int8] */
  };
  %5045 = %5044(%5043) /* ty=Tensor[(1, 16, 128, 128), int8] */;
  %5046 = fn (%p018: Tensor[(1, 16, 128, 128), int8], Primitive=1, hash="1e01d52113b0d8e6") -> Tensor[(16, 128, 128), uint8] {
    %90 = broadcast_to(%p018, shape=[1, 16, 128, 128]) /* ty=Tensor[(1, 16, 128, 128), int8] */;
    %91 = reshape(%90, newshape=[-1, 128, 128]) /* ty=Tensor[(16, 128, 128), int8] */;
    %92 = cast(%91, dtype="int32") /* ty=Tensor[(16, 128, 128), int32] */;
    %93 = add(%92, 128 /* ty=int32 */) /* ty=Tensor[(16, 128, 128), int32] */;
    cast(%93, dtype="uint8") /* ty=Tensor[(16, 128, 128), uint8] */
  };
  %5062 = fn (%p0725: Tensor[(128, 1024), uint8], %p1460: Tensor[(64, 256, 16, 4), int8], %p2289: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %5061 = nn.contrib_dense_pack(%p0725, %p1460, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%5061, %p2289) /* ty=Tensor[(128, 1024), int32] */
  };
  %5063 = %5062(%5013, meta[relay.Constant][517] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][518] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %5064 = fn (%p0724: Tensor[(128, 1024), int32], %p1459: Tensor[(1024), int32], Primitive=1, hash="d2cd74a1808052b0") -> Tensor[(16, 64, 128), int8] {
    %5047 = reshape(%p0724, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %5048 = add(%5047, %p1459) /* ty=Tensor[(1, 128, 1024), int32] */;
    %5049 = clip(%5048, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %5050 = reshape(%5049, newshape=[1, 128, 16, 64]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %5051 = transpose(%5050, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %5052 = cast(%5051, dtype="float32") /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %5053 = multiply(0.00162626f /* ty=float32 */, %5052) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %5054 = add(%5053, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %5055 = floor(%5054) /* ty=Tensor[(1, 16, 128, 64), float32] */;
    %5056 = cast(%5055, dtype="int32") /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %5057 = clip(%5056, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %5058 = cast(%5057, dtype="int8") /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %5059 = broadcast_to(%5058, shape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int8] */;
    %5060 = reshape(%5059, newshape=[-1, 128, 64]) /* ty=Tensor[(16, 128, 64), int8] */;
    transpose(%5060, axes=[0, 2, 1]) /* ty=Tensor[(16, 64, 128), int8] */
  };
  %5066 = %5064(%5063, meta[relay.Constant][519] /* ty=Tensor[(1024), int32] */) /* ty=Tensor[(16, 64, 128), int8] */;
  %5067 = fn (%p0726: Tensor[(16, 64, 128), int8], Primitive=1, hash="01b1b769a1f35abd") -> Tensor[(16, 64), int32] {
    %5065 = cast(%p0726, dtype="int32") /* ty=Tensor[(16, 64, 128), int32] */;
    sum(%5065, axis=[-1]) /* ty=Tensor[(16, 64), int32] */
  };
  %5068 = %5046(%5045) /* ty=Tensor[(16, 128, 128), uint8] */;
  %5069 = %5067(%5066) /* ty=Tensor[(16, 64), int32] */;
  %5070 = fn (%p017: Tensor[(16, 128, 128), uint8], %p112: Tensor[(16, 64, 128), int8], %p27: Tensor[(16, 64), int32], Primitive=1, hash="8d8117dbe1fc815a") -> Tensor[(16, 128, 64), int32] {
    %87 = multiply(128 /* ty=int32 */, %p27) /* ty=Tensor[(16, 64), int32] */;
    %88 = nn.batch_matmul(%p017, %p112, out_dtype="int32", transpose_b=True) /* ty=Tensor[(16, 128, 64), int32] */;
    %89 = expand_dims(%87, axis=1) /* ty=Tensor[(16, 1, 64), int32] */;
    subtract(%88, %89) /* ty=Tensor[(16, 128, 64), int32] */
  };
  %5071 = %5070(%5068, %5066, %5069) /* ty=Tensor[(16, 128, 64), int32] */;
  %5072 = fn (%p016: Tensor[(16, 128, 64), int32], Primitive=1, hash="2e47d4cebe5b40ab") -> Tensor[(128, 1024), uint8] {
    %74 = reshape(%p016, newshape=[1, 16, 128, 64]) /* ty=Tensor[(1, 16, 128, 64), int32] */;
    %75 = transpose(%74, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 16, 64), int32] */;
    %76 = reshape(%75, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %77 = cast(%76, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %78 = multiply(0.0517391f /* ty=float32 */, %77) /* ty=Tensor[(1, 128, 1024), float32] */;
    %79 = add(%78, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %80 = floor(%79) /* ty=Tensor[(1, 128, 1024), float32] */;
    %81 = cast(%80, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %82 = clip(%81, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %83 = cast(%82, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %84 = reshape(%83, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %85 = cast(%84, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %86 = add(%85, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%86, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %5073 = %5072(%5071) /* ty=Tensor[(128, 1024), uint8] */;
  %5074 = fn (%p015: Tensor[(128, 1024), uint8], %p111: Tensor[(64, 256, 16, 4), int8], %p26: Tensor[(1, 1024), int32], Primitive=1, hash="a41f099f91287173", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %73 = nn.contrib_dense_pack(%p015, %p111, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%73, %p26) /* ty=Tensor[(128, 1024), int32] */
  };
  %5075 = %5074(%5073, meta[relay.Constant][520] /* ty=Tensor[(64, 256, 16, 4), int8] */, meta[relay.Constant][521] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %5076 = fn (%p014: Tensor[(128, 1024), int32], %p110: Tensor[(1024), int32], %p25: Tensor[(1, 128, 1024), int8], Primitive=1, hash="24e8ac8025497c63") -> Tensor[(1, 128, 1024), float32] {
    %59 = reshape(%p014, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %60 = add(%59, %p110) /* ty=Tensor[(1, 128, 1024), int32] */;
    %61 = clip(%60, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %62 = cast(%61, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %63 = multiply(0.00328429f /* ty=float32 */, %62) /* ty=Tensor[(1, 128, 1024), float32] */;
    %64 = add(%63, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %65 = floor(%64) /* ty=Tensor[(1, 128, 1024), float32] */;
    %66 = cast(%65, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %67 = clip(%66, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %68 = cast(%67, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %69 = cast(%68, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %70 = cast(%p25, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %71 = multiply(%69, 0.0124789f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %72 = multiply(%70, 0.0625878f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%71, %72) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %5077 = %5076(%5075, meta[relay.Constant][522] /* ty=Tensor[(1024), int32] */, %5011) /* ty=Tensor[(1, 128, 1024), float32] */;
  %5078 = fn (%p0727: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0727, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %5079 = %5078(%5077) /* ty=Tensor[(1, 128, 1), float32] */;
  %5080 = fn (%p013: Tensor[(1, 128, 1024), float32], %p19: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p013, %p19) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %5081 = %5080(%5077, %5079) /* ty=Tensor[(1, 128, 1024), float32] */;
  %5082 = fn (%p012: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %58 = power(%p012, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%58, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %5083 = %5082(%5081) /* ty=Tensor[(1, 128, 1), float32] */;
  %5084 = fn (%p011: Tensor[(1, 128, 1), float32], %p18: Tensor[(1, 128, 1024), float32], %p24: Tensor[(1024), float32], %p31: Tensor[(1024), float32], Primitive=1, hash="254afd263d3238cd") -> Tensor[(1, 128, 1024), int8] {
    %50 = add(%p011, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %51 = sqrt(%50) /* ty=Tensor[(1, 128, 1), float32] */;
    %52 = divide(%p18, %51) /* ty=Tensor[(1, 128, 1024), float32] */;
    %53 = multiply(%52, %p24) /* ty=Tensor[(1, 128, 1024), float32] */;
    %54 = add(%53, %p31) /* ty=Tensor[(1, 128, 1024), float32] */;
    %55 = divide(%54, 0.115698f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %56 = clip(%55, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %57 = round(%56) /* ty=Tensor[(1, 128, 1024), float32] */;
    cast(%57, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */
  };
  %5085 = %5084(%5083, %5081, meta[relay.Constant][523] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][524] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(1, 128, 1024), int8] */;
  %5086 = fn (%p010: Tensor[(1, 128, 1024), int8], Primitive=1, hash="165a7eb60476bae6") -> Tensor[(128, 1024), uint8] {
    %47 = reshape(%p010, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %48 = cast(%47, dtype="int32") /* ty=Tensor[(128, 1024), int32] */;
    %49 = add(%48, 128 /* ty=int32 */) /* ty=Tensor[(128, 1024), int32] */;
    cast(%49, dtype="uint8") /* ty=Tensor[(128, 1024), uint8] */
  };
  %5087 = %5086(%5085) /* ty=Tensor[(128, 1024), uint8] */;
  %5088 = fn (%p09: Tensor[(128, 1024), uint8], %p17: Tensor[(256, 256, 16, 4), int8], %p23: Tensor[(1, 4096), int32], Primitive=1, hash="7df485f4b3219f11", weight_layout="NC16n4c") -> Tensor[(128, 4096), int32] {
    %46 = nn.contrib_dense_pack(%p09, %p17, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 4096), int32] */;
    subtract(%46, %p23) /* ty=Tensor[(128, 4096), int32] */
  };
  %5089 = %5088(%5087, meta[relay.Constant][525] /* ty=Tensor[(256, 256, 16, 4), int8] */, meta[relay.Constant][526] /* ty=Tensor[(1, 4096), int32] */) /* ty=Tensor[(128, 4096), int32] */;
  %5090 = fn (%p08: Tensor[(128, 4096), int32], %p16: Tensor[(4096), float32], Primitive=1, hash="606c3d2db1314131") -> Tensor[(128, 4096), uint8] {
    %30 = reshape(%p08, newshape=[1, 128, 4096]) /* ty=Tensor[(1, 128, 4096), int32] */;
    %31 = cast(%30, dtype="float32") /* ty=Tensor[(1, 128, 4096), float32] */;
    %32 = multiply(%31, 0.000313025f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %33 = add(%32, %p16) /* ty=Tensor[(1, 128, 4096), float32] */;
    %34 = divide(%33, 1.41421f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %35 = erf(%34) /* ty=Tensor[(1, 128, 4096), float32] */;
    %36 = multiply(%33, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %37 = add(%35, 1f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %38 = multiply(%36, %37) /* ty=Tensor[(1, 128, 4096), float32] */;
    %39 = divide(%38, 0.0262631f /* ty=float32 */) /* ty=Tensor[(1, 128, 4096), float32] */;
    %40 = clip(%39, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 4096), float32] */;
    %41 = round(%40) /* ty=Tensor[(1, 128, 4096), float32] */;
    %42 = cast(%41, dtype="int8") /* ty=Tensor[(1, 128, 4096), int8] */;
    %43 = reshape(%42, newshape=[-1, 4096]) /* ty=Tensor[(128, 4096), int8] */;
    %44 = cast(%43, dtype="int32") /* ty=Tensor[(128, 4096), int32] */;
    %45 = add(%44, 128 /* ty=int32 */) /* ty=Tensor[(128, 4096), int32] */;
    cast(%45, dtype="uint8") /* ty=Tensor[(128, 4096), uint8] */
  };
  %5091 = %5090(%5089, meta[relay.Constant][527] /* ty=Tensor[(4096), float32] */) /* ty=Tensor[(128, 4096), uint8] */;
  %5092 = fn (%p07: Tensor[(128, 4096), uint8], %p15: Tensor[(64, 1024, 16, 4), int8], %p22: Tensor[(1, 1024), int32], Primitive=1, hash="bcbc065dbaa86fe4", weight_layout="NC16n4c") -> Tensor[(128, 1024), int32] {
    %29 = nn.contrib_dense_pack(%p07, %p15, units=None, out_dtype="int32", weight_layout="NC16n4c") /* ty=Tensor[(128, 1024), int32] */;
    subtract(%29, %p22) /* ty=Tensor[(128, 1024), int32] */
  };
  %5093 = %5092(%5091, meta[relay.Constant][528] /* ty=Tensor[(64, 1024, 16, 4), int8] */, meta[relay.Constant][529] /* ty=Tensor[(1, 1024), int32] */) /* ty=Tensor[(128, 1024), int32] */;
  %5094 = fn (%p06: Tensor[(128, 1024), int32], %p14: Tensor[(1024), int32], %p21: Tensor[(1, 128, 1024), int8], Primitive=1, hash="4f9cdb004cf23a9d") -> Tensor[(1, 128, 1024), float32] {
    %15 = reshape(%p06, newshape=[1, 128, 1024]) /* ty=Tensor[(1, 128, 1024), int32] */;
    %16 = add(%15, %p14) /* ty=Tensor[(1, 128, 1024), int32] */;
    %17 = clip(%16, a_min=-2.14748e+09f, a_max=2.14748e+09f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %18 = cast(%17, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %19 = multiply(0.0119464f /* ty=float32 */, %18) /* ty=Tensor[(1, 128, 1024), float32] */;
    %20 = add(%19, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %21 = floor(%20) /* ty=Tensor[(1, 128, 1024), float32] */;
    %22 = cast(%21, dtype="int32") /* ty=Tensor[(1, 128, 1024), int32] */;
    %23 = clip(%22, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), int32] */;
    %24 = cast(%23, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %25 = cast(%24, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %26 = cast(%p21, dtype="float32") /* ty=Tensor[(1, 128, 1024), float32] */;
    %27 = multiply(%25, 0.0224242f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %28 = multiply(%26, 0.115698f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    add(%27, %28) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %5095 = %5094(%5093, meta[relay.Constant][530] /* ty=Tensor[(1024), int32] */, %5085) /* ty=Tensor[(1, 128, 1024), float32] */;
  %5096 = fn (%p0728: Tensor[(1, 128, 1024), float32], Primitive=1, hash="2c2db313332ac77e") -> Tensor[(1, 128, 1), float32] {
    mean(%p0728, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %5097 = %5096(%5095) /* ty=Tensor[(1, 128, 1), float32] */;
  %5098 = fn (%p05: Tensor[(1, 128, 1024), float32], %p13: Tensor[(1, 128, 1), float32], Primitive=1, hash="d63ceec029ccca0c") -> Tensor[(1, 128, 1024), float32] {
    subtract(%p05, %p13) /* ty=Tensor[(1, 128, 1024), float32] */
  };
  %5099 = %5098(%5095, %5097) /* ty=Tensor[(1, 128, 1024), float32] */;
  %5100 = fn (%p04: Tensor[(1, 128, 1024), float32], Primitive=1, hash="1f22efdffe5555e9") -> Tensor[(1, 128, 1), float32] {
    %14 = power(%p04, 2f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    mean(%14, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  };
  %5101 = %5100(%5099) /* ty=Tensor[(1, 128, 1), float32] */;
  %5102 = fn (%p03: Tensor[(1, 128, 1), float32], %p12: Tensor[(1, 128, 1024), float32], %p2: Tensor[(1024), float32], %p3: Tensor[(1024), float32], Primitive=1, hash="9dc154fae30c253c") -> Tensor[(128, 1024), float32] {
    %3 = add(%p03, 1e-12f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %4 = sqrt(%3) /* ty=Tensor[(1, 128, 1), float32] */;
    %5 = divide(%p12, %4) /* ty=Tensor[(1, 128, 1024), float32] */;
    %6 = multiply(%5, %p2) /* ty=Tensor[(1, 128, 1024), float32] */;
    %7 = add(%6, %p3) /* ty=Tensor[(1, 128, 1024), float32] */;
    %8 = divide(%7, 0.0240934f /* ty=float32 */) /* ty=Tensor[(1, 128, 1024), float32] */;
    %9 = clip(%8, a_min=-128f, a_max=127f) /* ty=Tensor[(1, 128, 1024), float32] */;
    %10 = round(%9) /* ty=Tensor[(1, 128, 1024), float32] */;
    %11 = cast(%10, dtype="int8") /* ty=Tensor[(1, 128, 1024), int8] */;
    %12 = reshape(%11, newshape=[-1, 1024]) /* ty=Tensor[(128, 1024), int8] */;
    %13 = cast(%12, dtype="float32") /* ty=Tensor[(128, 1024), float32] */;
    multiply(%13, 0.0240934f /* ty=float32 */) /* ty=Tensor[(128, 1024), float32] */
  };
  %5103 = %5102(%5101, %5099, meta[relay.Constant][531] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][532] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(128, 1024), float32] */;
  %5104 = fn (%p02: Tensor[(128, 1024), float32], %p11: Tensor[(1, 1024, 2), float32], Primitive=1, hash="9fa084bd4a8ba9ca", weight_layout="NC2n") -> Tensor[(128, 2), float32] {
    nn.contrib_dense_pack(%p02, %p11, units=None, out_dtype="float32", weight_layout="NC2n") /* ty=Tensor[(128, 2), float32] */
  };
  %5105 = %5104(%5103, meta[relay.Constant][533] /* ty=Tensor[(1, 1024, 2), float32] */) /* ty=Tensor[(128, 2), float32] */;
  %5106 = fn (%p01: Tensor[(128, 2), float32], %p1: Tensor[(2), float32], Primitive=1, hash="ce927f53b5401609") -> (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32]) {
    %1 = reshape(%p01, newshape=[1, 128, 2]) /* ty=Tensor[(1, 128, 2), float32] */;
    %2 = add(%1, %p1) /* ty=Tensor[(1, 128, 2), float32] */;
    split(%2, indices_or_sections=[1], axis=-1) /* ty=(Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32]) */
  };
  %5107 = %5106(%5105, meta[relay.Constant][534] /* ty=Tensor[(2), float32] */) /* ty=(Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32]) */;
  %5108 = fn (%p0: (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32]), Primitive=1, hash="058bddb50540b186") -> Tensor[(1, 128), float32] {
    %0 = %p0.0;
    squeeze(%0, axis=[2]) /* ty=Tensor[(1, 128), float32] */
  };
  %5110 = fn (%p0729: (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32]), Primitive=1, hash="7a3ffef78d74cbfe") -> Tensor[(1, 128), float32] {
    %5109 = %p0729.1;
    squeeze(%5109, axis=[2]) /* ty=Tensor[(1, 128), float32] */
  };
  %5111 = %5108(%5107) /* ty=Tensor[(1, 128), float32] */;
  %5112 = %5110(%5107) /* ty=Tensor[(1, 128), float32] */;
  (%5111, %5112)
}

